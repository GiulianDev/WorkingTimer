var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Alarm.html",[0,0.196,1,1.282]],["body/classes/Alarm.html",[0,0.204,1,2.327,2,1.88,3,0.424,4,0.424,5,0.365,6,2.51,7,0.884,8,1.477,9,1.329,10,5.456,11,4.479,12,3.753,13,1.926,14,1.451,15,2.595,16,4.969,17,4.969,18,1.067,19,3.058,20,1.805,21,2.226,22,2.823,23,1.424,24,3.058,25,0.972,26,0.042,27,0.875,28,1.093,29,3.058,30,3.058,31,3.058,32,3.058,33,3.058,34,3.058,35,1.754,36,2.891,37,3.058,38,2.891,39,0.424,40,2.032,41,3.058,42,3.058,43,3.058,44,3.058,45,3.058,46,4.112,47,4.112,48,1.792,49,3.058,50,3.058,51,0.021,52,0.028,53,0.021]],["title/injectables/AlertService.html",[54,0.935,55,1.602]],["body/injectables/AlertService.html",[0,0.149,3,0.31,4,0.31,5,0.267,7,0.356,8,1.048,9,1.464,13,1.163,14,1.163,15,1.602,18,0.513,20,1.813,23,1.183,25,1.374,26,0.042,27,1.236,28,0.943,35,1.525,39,0.31,40,2.138,48,1.706,51,0.015,52,0.022,53,0.015,54,1.048,55,1.795,56,1.217,57,1.835,58,3.674,59,2.846,60,3.296,61,3.296,62,3.296,63,2.235,64,2.235,65,3.296,66,5.226,67,3.916,68,3.916,69,2.235,70,4.629,71,4.822,72,3.296,73,4.523,74,2.235,75,2.344,76,1.217,77,2.834,78,4.322,79,3.39,80,4.322,81,3.296,82,3.296,83,3.296,84,2.706,85,1.602,86,3.296,87,3.296,88,2.235,89,2.235,90,0.675,91,0.457,92,0.789,93,1.374,94,1.217,95,2.235,96,2.132,97,1.706,98,3.916,99,2.753,100,1.706,101,2.753,102,2.132,103,3.916,104,3.214,105,3.24,106,3.959,107,2.753,108,3.214,109,3.916,110,4.322,111,2.235,112,2.235,113,3.214,114,2.235,115,3.916,116,2.235,117,2.235,118,2.235,119,2.235]],["title/components/AppComponent.html",[120,0.935,121,1.153]],["body/components/AppComponent.html",[0,0.243,3,0.507,4,0.507,5,0.436,9,1.044,18,0.839,23,0.937,25,1.161,26,0.041,27,1.448,28,0.747,39,0.507,51,0.025,52,0.031,53,0.025,90,0.945,91,0.747,94,2.514,120,1.609,121,2.085,122,2.514,123,2.245,124,2.245,125,2.245,126,2.245,127,2.998,128,2.245,129,3.446,130,3.052,131,2.839,132,5.063,133,2.839,134,4.617,135,3.651,136,2.442,137,3.651,138,3.651,139,2.998,140,1.431,141,2.839,142,2.514,143,2.245,144,2.585,145,2.245,146,2.245,147,1.774,148,2.245,149,1.289,150,2.245,151,1.431,152,1.044,153,2.245,154,2.245,155,2.245]],["title/modules/AppModule.html",[156,1.153,157,1.809]],["body/modules/AppModule.html",[0,0.242,3,0.503,4,0.503,5,0.433,26,0.041,39,0.503,51,0.025,52,0.031,53,0.025,90,1.145,91,0.742,92,1.28,121,2.319,130,1.975,140,1.421,156,1.421,157,3.569,158,1.581,159,1.763,160,3.103,161,3.103,162,2.827,163,1.975,164,2.977,165,2.977,166,2.977,167,2.977,168,3.047,169,2.827,170,1.763,171,1.28,172,3.627,173,2.827,174,2.827,175,4.597,176,2.977,177,2.55,178,4.597,179,1.975,180,2.977,181,4.597,182,3.627,183,2.977,184,3.627,185,3.627,186,3.627,187,3.627]],["title/modules/AppRoutingModule.html",[156,1.153,168,1.602]],["body/modules/AppRoutingModule.html",[0,0.268,3,0.558,4,0.558,5,0.48,26,0.042,39,0.558,51,0.027,52,0.033,53,0.027,90,1.004,91,0.824,100,1.753,158,1.753,163,2.191,168,2.67,173,2.474,174,3.015,179,2.191,188,4.024,189,3.303,190,4.903,191,4.025,192,2.88,193,4.025,194,3.447,195,4.024,196,4.024,197,4.024,198,4.024,199,4.024,200,4.024,201,4.024,202,4.024,203,4.024]],["title/components/HistoryComponent.html",[120,0.935,147,1.43]],["body/components/HistoryComponent.html",[0,0.24,3,0.5,4,0.5,5,0.43,7,0.574,14,1.616,18,1.156,23,1.175,26,0.041,27,1.309,35,1.272,39,0.5,51,0.025,52,0.031,53,0.025,90,0.737,91,0.737,120,1.599,121,1.412,122,2.493,123,2.215,124,2.215,125,2.215,126,2.215,128,2.215,129,3.434,130,3.041,131,2.815,133,2.815,140,1.412,141,2.815,142,2.493,143,2.215,144,2.573,145,2.215,146,2.215,147,2.573,148,2.215,149,1.272,150,2.215,151,1.412,152,1.03,153,2.215,154,2.215,155,2.215,204,2.957,205,3.218,206,4.13,207,5.294,208,5.031,209,4.578,210,4.346,211,3.603,212,3.603,213,1.57,214,4.578]],["title/components/HomePage.html",[120,0.935,149,1.038]],["body/components/HomePage.html",[0,0.086,1,1.542,3,0.179,4,0.179,5,0.154,7,0.205,8,0.68,9,0.368,13,1.126,14,0.755,15,1.854,18,0.733,20,1.014,21,0.838,23,1.262,25,0.41,26,0.042,27,0.784,28,0.866,35,1.248,39,0.179,40,0.505,51,0.009,52,0.015,53,0.009,55,1.926,58,3.181,59,2.077,70,1.058,73,1.755,75,1.854,77,1.685,79,2.487,85,1.332,90,0.866,91,0.264,92,0.455,97,0.932,100,0.932,101,2.487,102,1.737,105,1.503,107,1.926,120,1.014,121,0.505,122,1.164,123,0.792,124,0.792,125,0.792,126,0.792,128,0.792,129,2.346,130,2.2,131,1.315,133,1.315,136,1.761,140,0.505,141,1.315,142,1.164,143,0.792,144,1.55,145,0.792,146,0.792,147,0.626,148,0.792,149,1.126,150,0.792,151,1.074,152,0.368,153,1.315,154,0.792,155,0.792,170,2.133,171,0.455,194,1.503,213,1.194,215,1.058,216,2.74,217,2.138,218,2.594,219,3.537,220,3.537,221,2.249,222,2.74,223,3.176,224,2.055,225,3.189,226,3.189,227,3.189,228,3.189,229,1.288,230,1.854,231,3.317,232,2.138,233,1.288,234,2.74,235,3.602,236,1.755,237,1.288,238,3.537,239,3.189,240,1.288,241,1.755,242,2.138,243,1.755,244,2.138,245,1.288,246,2.138,247,1.737,248,2.138,249,1.288,250,2.249,251,1.288,252,1.288,253,1.288,254,2.601,255,1.288,256,1.288,257,1.288,258,1.288,259,1.288,260,1.288,261,0.792,262,0.792,263,1.058,264,1.058,265,1.058,266,1.058,267,0.702,268,0.702,269,1.288,270,0.906,271,0.792,272,0.792,273,1.719,274,2.138,275,1.755,276,1.755,277,1.058,278,1.288,279,1.288,280,1.288,281,1.288,282,1.288,283,1.288,284,1.288,285,1.288,286,1.058,287,1.288,288,2.249,289,2.138,290,1.288,291,2.138,292,1.058,293,1.755,294,1.288,295,3.189,296,1.288,297,1.288,298,2.138,299,1.288,300,1.288,301,2.138,302,1.288,303,1.288,304,1.058,305,1.288,306,1.288,307,2.138,308,2.138,309,1.058,310,1.288,311,1.058,312,2.138,313,2.74,314,2.138,315,1.288,316,1.288,317,1.288,318,1.058,319,1.288,320,1.288,321,2.138,322,1.288,323,1.288,324,1.288,325,1.058,326,1.288,327,1.288,328,0.702,329,1.288,330,1.288,331,1.288,332,1.288,333,2.138,334,2.138,335,1.194,336,1.39,337,2.138,338,3.189,339,2.618,340,2.904,341,1.288,342,1.288,343,2.138,344,1.288,345,1.288,346,2.487,347,1.288,348,1.288,349,1.288,350,4.836,351,2.74,352,1.288,353,2.138,354,3.602,355,1.288,356,1.288,357,1.288,358,1.288,359,2.904,360,1.288,361,2.138,362,1.288,363,1.288,364,2.249,365,1.288,366,1.058,367,1.288,368,3.97,369,2.904,370,2.618,371,2.618,372,2.618,373,1.058,374,1.288,375,1.926,376,1.288,377,2.249,378,1.058,379,1.288,380,2.138,381,1.503,382,4.229,383,3.811,384,2.138,385,4.229,386,2.138,387,4.229,388,2.138,389,2.138,390,2.138,391,2.138,392,2.138,393,2.138,394,2.138,395,2.138,396,2.138,397,2.138,398,1.288,399,1.288,400,2.249,401,1.288,402,2.138,403,2.74,404,1.288,405,1.288,406,0.702,407,1.288,408,1.288,409,1.288,410,2.138,411,1.288,412,1.288,413,1.058,414,1.288,415,1.503,416,0.702,417,1.288,418,1.288,419,2.138,420,3.537,421,1.288,422,0.906]],["title/modules/HomePageModule.html",[156,1.153,423,1.809]],["body/modules/HomePageModule.html",[0,0.244,3,0.509,4,0.509,5,0.438,26,0.041,39,0.509,51,0.025,52,0.032,53,0.025,90,1.166,91,0.751,92,1.295,140,1.438,149,1.98,151,2.199,156,1.438,158,1.599,159,1.783,160,3.12,161,2.255,162,2.255,163,1.997,169,2.847,170,1.783,171,1.295,173,2.847,174,2.847,180,3.801,183,3.011,194,2.578,261,2.255,262,2.255,263,3.011,423,3.603,424,3.011,425,3.011,426,3.011,427,3.055,428,3.668,429,4.63,430,3.011,431,4.63,432,3.011,433,3.011]],["title/modules/HomePageRoutingModule.html",[156,1.153,427,1.602]],["body/modules/HomePageRoutingModule.html",[0,0.252,3,0.524,4,0.524,5,0.451,26,0.042,39,0.524,51,0.026,52,0.032,53,0.026,90,1.135,91,0.774,99,2.657,100,1.647,120,1.201,140,1.481,149,1.665,156,1.481,158,1.647,159,1.837,160,2.324,161,2.324,162,3.162,163,2.569,169,2.901,170,1.837,171,1.334,173,2.324,174,2.901,179,2.058,189,3.102,191,3.873,192,2.801,193,3.102,230,2.747,266,3.102,427,3.078,433,3.102,434,3.102,435,3.102,436,3.779,437,3.162,438,3.779,439,3.779,440,3.779]],["title/guards/HomeResolver.html",[437,1.809,441,2.068]],["body/guards/HomeResolver.html",[0,0.243,3,0.507,4,0.507,5,0.436,7,0.582,9,1.32,14,1.629,15,2.46,18,1.061,23,1.185,25,1.467,26,0.041,27,1.32,28,0.945,35,1.289,39,0.507,48,1.591,51,0.025,52,0.031,53,0.025,54,1.467,84,2.998,85,1.774,90,1.036,91,0.747,92,1.289,99,3.74,179,1.988,205,2.567,213,1.591,218,2.244,328,1.988,437,2.839,442,3.651,443,2.998,444,2.567,445,3.94,446,5.691,447,3.651,448,4.617,449,5.32,450,5.063,451,5.32,452,3.651,453,3.651,454,2.998,455,3.651,456,3.651]],["title/injectables/NotificationService.html",[54,0.935,457,2.068]],["body/injectables/NotificationService.html",[0,0.228,3,0.476,4,0.476,5,0.409,7,0.546,8,1.409,18,1.129,23,1.138,26,0.042,28,0.702,36,2.409,39,0.476,51,0.023,52,0.03,53,0.023,54,1.409,56,1.866,59,1.866,77,2.726,90,0.908,91,0.702,93,2.107,94,1.866,100,1.494,102,1.866,218,2.388,241,2.813,309,4.034,457,3.117,458,2.409,459,5.381,460,4.433,461,4.914,462,3.117,463,2.409,464,3.427,465,3.427,466,4.914,467,2.813,468,3.427,469,3.427,470,3.427,471,4.433,472,3.427,473,3.427,474,3.427,475,3.427,476,3.427,477,3.427,478,3.427,479,2.726,480,4.433,481,3.427,482,3.427,483,2.107,484,3.427,485,3.427,486,3.427,487,3.427,488,3.427,489,3.427,490,3.427,491,3.427,492,3.427,493,3.427,494,3.427,495,3.427,496,4.433,497,3.427,498,3.427,499,3.427,500,3.427,501,2.813,502,3.427]],["title/classes/Settings.html",[0,0.196,152,0.841]],["body/classes/Settings.html",[0,0.143,1,2.495,2,1.319,3,0.298,4,0.298,5,0.256,7,0.785,8,1.017,9,1.296,11,3.139,12,2.688,13,1.349,14,1.129,18,0.878,20,1.768,21,1.776,22,2.468,23,1.163,25,1.215,26,0.042,27,1.093,28,0.928,35,1.495,39,0.298,48,1.975,51,0.015,52,0.022,53,0.015,76,2.082,77,3.111,90,0.783,96,2.082,97,1.847,100,1.975,142,1.168,144,1.858,152,0.915,171,1.129,213,0.935,223,1.966,250,1.762,267,1.168,268,1.168,273,1.554,292,1.762,293,2.625,304,3.139,328,2.468,335,0.935,336,1.394,381,2.688,406,1.742,416,1.168,503,1.762,504,1.847,505,3.198,506,3.198,507,3.198,508,2.146,509,2.146,510,3.198,511,2.146,512,2.248,513,3.198,514,2.979,515,4.237,516,5.17,517,3.139,518,2.146,519,2.146,520,2.625,521,2.146,522,3.198,523,3.556,524,2.146,525,2.625,526,3.198,527,1.319,528,2.146,529,1.762,530,2.146,531,3.198,532,3.198,533,2.146,534,3.198,535,3.198,536,2.146,537,2.146,538,2.146,539,2.146,540,3.198,541,2.146,542,2.146,543,2.146,544,2.146,545,2.146,546,2.146,547,2.146,548,2.146,549,2.146,550,3.198,551,2.146,552,2.202,553,2.146,554,3.198,555,2.786,556,2.146,557,2.146,558,3.198,559,3.198,560,2.146,561,2.146,562,2.146,563,3.823,564,2.146,565,2.146,566,2.146,567,3.823,568,2.146,569,2.146,570,2.146,571,2.146,572,2.146,573,2.146,574,2.146,575,2.146,576,2.146,577,3.823,578,3.198,579,2.146,580,2.146,581,2.146,582,3.198,583,3.198]],["title/components/SettingsPopoverComponent.html",[120,0.935,151,1.153]],["body/components/SettingsPopoverComponent.html",[0,0.082,1,2.247,3,0.17,4,0.17,5,0.146,7,0.421,8,0.651,9,1.063,13,1.213,14,0.723,15,1.807,18,0.471,20,1.255,23,1.311,25,1.182,26,0.042,27,1.184,28,0.881,35,1.611,38,1.857,39,0.17,40,1.547,48,0.893,51,0.008,52,0.014,53,0.008,55,1.872,58,3.123,59,2.543,75,1.671,76,0.667,79,2.171,85,0.595,90,0.808,91,0.251,92,0.432,96,1.439,97,0.893,101,2.417,102,1.439,104,2.169,105,0.861,106,3.399,107,0.861,108,1.005,113,1.682,120,0.84,121,0.48,122,1.116,123,0.753,124,0.753,125,0.753,126,0.753,128,0.753,129,2.286,130,2.025,131,1.26,133,1.26,136,1.721,140,0.48,141,1.26,142,1.116,143,0.753,144,1.919,145,0.753,146,0.753,147,0.595,148,0.753,149,0.432,150,0.753,151,1.211,152,1.564,153,1.624,154,0.753,155,0.753,205,1.44,206,2.169,210,2.536,213,1.498,218,2.091,223,2.114,231,3.052,243,1.682,261,3.17,262,3.17,264,1.005,265,1.005,270,0.861,271,1.26,275,1.682,276,1.005,277,2.536,311,2.536,335,0.533,336,0.893,339,1.682,340,2.822,346,0.861,354,2.169,359,2.822,364,3.241,366,1.005,368,2.822,369,1.005,370,1.005,371,2.536,372,2.536,373,1.005,375,2.614,377,1.682,378,1.682,381,1.44,383,3.241,400,2.822,413,1.005,415,1.44,416,0.667,422,2.171,467,1.005,504,0.893,512,2.171,514,2.171,520,2.536,523,2.417,525,2.536,552,1.807,555,0.753,584,1.005,585,2.642,586,2.049,587,2.642,588,2.049,589,2.049,590,3.089,591,2.049,592,3.089,593,3.089,594,2.049,595,2.286,596,2.049,597,1.224,598,3.948,599,1.224,600,2.049,601,1.224,602,1.224,603,2.049,604,2.049,605,2.049,606,1.682,607,2.049,608,1.224,609,1.224,610,2.049,611,2.049,612,2.049,613,1.224,614,1.224,615,1.224,616,2.049,617,1.224,618,2.049,619,1.224,620,1.682,621,1.224,622,1.44,623,1.44,624,2.049,625,1.224,626,1.224,627,1.224,628,1.224,629,3.089,630,3.089,631,3.089,632,3.089,633,3.089,634,3.089,635,3.089,636,3.089,637,3.089,638,3.089,639,3.089,640,3.089,641,3.089,642,3.089,643,3.089,644,3.089,645,3.089,646,3.089,647,3.718,648,3.089,649,3.089,650,3.089,651,1.224,652,2.049,653,2.049,654,2.049,655,2.049,656,1.682,657,2.049,658,2.049,659,2.049,660,2.049,661,1.682,662,2.049,663,2.049,664,2.049,665,2.049,666,2.049,667,1.224,668,1.224,669,1.224,670,2.049,671,1.224,672,1.005,673,1.224,674,1.224,675,1.224,676,1.005,677,1.224,678,2.049,679,1.224,680,2.169,681,1.224,682,1.224,683,1.224,684,1.224,685,1.224,686,1.224,687,1.224,688,2.049,689,1.224,690,1.224,691,1.005,692,1.224,693,1.224,694,1.224,695,1.224,696,3.718,697,1.224,698,1.224,699,1.224,700,1.224,701,1.224,702,1.224,703,1.224,704,1.224,705,1.224,706,1.224,707,1.224,708,1.224,709,1.224,710,1.224,711,1.224,712,1.224,713,1.224,714,1.224,715,1.224,716,1.224,717,1.224,718,2.049,719,1.224,720,1.224,721,1.224,722,1.224,723,1.224,724,1.224,725,1.224,726,1.224,727,1.224,728,1.224,729,1.224,730,1.224,731,3.089,732,2.049,733,1.224,734,1.224,735,2.049,736,1.224,737,3.089,738,1.224,739,2.169,740,2.049,741,1.224,742,1.224,743,2.049,744,1.224,745,1.224,746,1.224,747,1.224]],["title/interfaces/Status.html",[748,1.602,749,1.282]],["body/interfaces/Status.html",[0,0.229,3,0.478,4,0.478,5,0.411,7,0.549,8,1.413,18,0.791,20,1.413,21,2.112,22,2.681,26,0.042,28,1.008,39,0.766,40,1.349,51,0.023,52,0.03,53,0.023,152,0.984,171,1.215,224,2.765,247,2.681,254,2.733,267,1.874,268,1.874,272,3.2,273,1.673,335,2.146,336,1.5,479,2.116,483,2.116,504,1.937,529,2.825,552,2.16,748,1.874,749,1.937,750,2.116,751,3.659,752,4.272,753,2.419,754,2.419,755,2.419,756,3.125,757,2.419,758,2.419,759,2.419,760,2.419,761,2.825,762,2.825,763,2.825,764,2.825,765,2.825,766,2.825,767,2.825,768,2.825,769,2.825,770,2.825]],["title/injectables/StorageService.html",[54,0.935,136,1.282]],["body/injectables/StorageService.html",[0,0.223,1,2.061,3,0.241,4,0.241,5,0.207,7,0.728,8,0.865,9,1.085,12,1.912,13,0.96,14,1.183,18,0.399,20,0.552,21,1.615,23,1.385,25,1.206,26,0.042,27,1.085,28,0.895,35,1.959,39,0.241,40,1.791,48,2.305,51,0.012,52,0.019,53,0.012,54,0.865,56,0.945,59,2.806,75,1.322,76,0.945,85,1.322,90,0.895,91,0.355,92,0.613,93,1.068,94,0.945,96,1.826,97,1.461,100,1.654,102,2.244,136,1.185,139,1.425,152,1.631,213,1.461,218,2.124,271,2.333,406,0.945,416,0.945,444,1.22,445,3.073,454,1.425,462,1.912,463,1.22,504,2.21,514,3.073,523,1.912,595,2.333,606,3.115,620,2.233,622,3.673,623,3.852,672,1.425,676,2.233,680,3.383,691,2.753,749,2.456,771,1.22,772,2.72,773,3.795,774,3.795,775,3.795,776,3.795,777,3.795,778,3.795,779,3.795,780,3.795,781,3.795,782,3.795,783,2.72,784,2.72,785,2.72,786,2.72,787,1.736,788,2.72,789,1.736,790,1.736,791,1.736,792,2.72,793,1.736,794,1.736,795,1.736,796,3.795,797,1.736,798,1.736,799,3.795,800,3.115,801,2.72,802,2.72,803,1.736,804,1.736,805,2.72,806,2.72,807,1.736,808,2.72,809,1.736,810,1.736,811,1.425,812,1.425,813,1.736,814,1.736,815,1.736,816,1.736,817,1.736,818,2.72,819,3.353,820,3.353,821,1.736,822,1.736,823,1.736,824,2.72,825,4.121,826,1.736,827,1.736,828,1.736,829,2.72,830,1.736,831,1.736,832,2.72,833,2.72,834,1.736,835,2.72,836,1.736,837,2.72,838,2.72,839,2.72,840,1.736,841,1.736,842,2.72,843,1.736,844,1.736]],["title/classes/TimeList.html",[0,0.196,224,1.43]],["body/classes/TimeList.html",[0,0.213,2,1.962,3,0.443,4,0.443,5,0.381,7,0.509,8,1.345,9,1.661,18,1.09,20,1.606,21,2.061,22,1.737,23,1.416,26,0.042,28,1.106,39,0.75,40,1.251,51,0.022,52,0.029,53,0.022,152,0.912,171,1.126,224,2.456,247,2.864,254,3.108,267,1.737,268,1.737,272,1.962,273,1.551,335,2.292,336,1.391,479,1.962,483,1.962,504,1.844,552,2.056,748,1.737,749,1.391,750,1.962,751,2.243,752,4.149,753,2.243,754,2.243,755,2.243,756,2.974,757,2.243,758,2.243,759,2.243,760,2.243,761,2.619,762,2.619,763,2.619,764,2.619,765,2.619,766,2.619,767,3.896,768,3.896,769,3.896,770,3.896,845,3.191,846,3.191,847,3.191,848,3.191,849,3.191,850,3.191,851,3.191]],["title/injectables/TimerService.html",[54,0.935,230,1.43]],["body/injectables/TimerService.html",[0,0.108,3,0.225,4,0.225,5,0.193,7,0.258,8,0.818,9,0.736,13,1.756,14,0.909,15,2.824,18,0.592,20,1.161,21,1.744,22,1.402,23,1.456,25,0.818,26,0.042,27,0.736,28,1.052,35,1.838,36,1.81,38,1.139,39,0.225,40,1.984,48,1.737,51,0.011,52,0.018,53,0.011,54,0.818,56,0.882,75,2.418,76,0.882,90,0.816,91,0.332,92,0.572,93,0.996,94,0.882,96,1.402,97,1.939,136,2.124,144,1.251,170,2.062,213,1.849,218,1.557,221,2.631,223,1.971,224,2.369,230,1.251,235,3.79,247,2.31,254,3.059,270,1.139,271,2.245,272,2.245,273,2.162,286,3.271,288,2.631,318,1.33,325,3.271,328,1.988,335,1.939,406,1.402,416,0.882,422,1.139,444,1.139,445,3.344,512,1.81,527,0.996,552,0.787,555,2.245,595,1.583,622,1.81,623,1.81,739,1.33,749,1.939,751,2.801,811,1.33,852,1.33,853,3.205,854,3.205,855,2.575,856,3.205,857,3.205,858,2.575,859,3.205,860,3.205,861,3.652,862,3.205,863,3.205,864,3.205,865,3.205,866,3.652,867,2.575,868,2.575,869,1.62,870,1.62,871,1.62,872,1.62,873,1.62,874,1.33,875,1.62,876,2.575,877,1.62,878,1.62,879,1.62,880,1.62,881,1.62,882,1.62,883,2.575,884,3.205,885,1.62,886,1.62,887,1.62,888,2.575,889,4.243,890,1.62,891,3.652,892,2.575,893,2.575,894,3.652,895,1.62,896,1.62,897,1.62,898,1.62,899,1.62,900,1.62,901,1.62,902,1.62,903,1.62,904,1.62,905,1.62,906,1.62,907,1.62,908,1.62,909,1.62,910,1.62,911,1.62,912,1.62,913,1.62,914,2.575,915,1.62,916,1.62,917,1.62,918,4.243,919,1.62,920,3.652,921,1.62,922,3.985,923,1.62,924,1.62,925,1.62,926,1.62,927,3.205,928,1.62,929,1.62,930,1.62,931,1.62,932,1.62,933,1.62,934,2.575,935,1.62,936,1.62,937,1.62,938,1.62,939,1.62,940,1.62,941,1.62,942,1.62,943,2.575,944,1.62,945,2.575,946,1.62,947,1.62,948,1.62]],["title/coverage.html",[949,3.288]],["body/coverage.html",[0,0.328,1,1.5,5,0.411,6,2.825,26,0.041,28,0.705,51,0.023,52,0.03,53,0.023,54,1.654,55,1.874,57,2.825,97,1.5,120,1.654,121,1.349,127,2.825,136,1.5,147,1.673,149,1.215,151,1.349,152,0.984,204,2.825,215,2.825,224,1.673,230,1.673,236,2.825,261,2.116,262,2.116,273,2.88,346,2.419,375,2.419,415,2.419,437,2.116,441,2.419,443,2.825,457,2.419,458,3.125,503,2.825,527,2.116,584,2.825,656,2.825,661,2.825,748,1.874,749,1.5,750,2.733,771,3.125,852,2.825,949,2.825,950,3.442,951,3.442,952,3.442,953,2.825,954,3.442,955,4.924,956,3.442,957,3.442,958,3.442,959,3.442,960,3.442,961,3.442,962,3.442,963,5.518,964,5.518,965,3.442,966,3.442,967,3.442,968,3.442,969,2.825,970,3.649,971,2.825,972,3.649,973,2.825,974,2.825,975,3.442,976,3.442]],["title/dependencies.html",[159,1.718,977,2.461]],["body/dependencies.html",[26,0.041,51,0.028,52,0.034,53,0.028,85,2.026,91,0.853,92,1.471,159,2.026,176,4.113,177,3.522,179,2.27,430,3.422,432,3.422,463,2.93,978,5.788,979,4.169,980,4.169,981,5.01,982,4.169,983,4.169,984,4.169,985,4.169,986,4.169,987,4.169,988,4.169,989,4.169,990,4.169,991,4.169,992,4.169]],["title/miscellaneous/enumerations.html",[993,1.196,994,2.903]],["body/miscellaneous/enumerations.html",[7,0.63,13,2.112,26,0.041,51,0.027,52,0.033,53,0.027,152,1.501,171,1.396,247,2.642,267,2.642,268,2.642,335,2.115,336,1.723,479,2.432,483,2.432,504,2.115,552,2.358,749,2.115,750,2.432,753,2.78,754,2.78,755,3.411,756,3.411,757,2.78,758,2.78,759,2.78,760,2.78,800,3.247,812,3.983,993,1.922,994,3.247,995,5.473,996,3.955,997,3.955]],["title/miscellaneous/functions.html",[993,1.196,998,2.903]],["body/miscellaneous/functions.html",[7,0.701,9,1.257,20,1.397,21,1.723,25,1.397,26,0.039,27,1.257,51,0.03,52,0.035,53,0.03,336,1.915,504,1.915,527,3.179,595,2.702,874,3.608,953,3.608,993,2.136,998,3.608,999,4.395,1000,4.395,1001,4.395,1002,4.395,1003,4.395,1004,4.395,1005,4.395,1006,4.395,1007,4.395]],["title/index.html",[7,0.469,1008,2.415]],["body/index.html",[2,2.357,26,0.04,51,0.026,52,0.032,53,0.026,56,2.087,121,2.254,122,2.087,140,1.502,149,1.827,151,2.029,156,1.502,157,3.537,158,1.67,159,1.863,160,2.357,161,2.357,162,2.357,163,2.087,164,3.147,165,3.147,166,3.147,167,3.147,168,2.819,169,2.926,170,1.863,171,1.353,192,2.087,230,2.515,406,2.592,423,3.574,424,3.147,425,3.147,426,3.147,427,3.031,434,3.147,435,3.147,441,2.694,501,3.147,748,2.087,1008,3.147,1009,5.413]],["title/modules.html",[158,1.746]],["body/modules.html",[26,0.036,51,0.03,52,0.036,53,0.03,157,2.755,158,1.952,168,2.44,177,3.892,423,2.755,427,2.44,1010,5.536,1011,5.536,1012,5.704,1013,4.48,1014,4.48]],["title/routes.html",[192,2.181]],["body/routes.html",[26,0.037,51,0.032,52,0.037,53,0.032,192,2.575]],["title/miscellaneous/variables.html",[993,1.196,1015,2.903]],["body/miscellaneous/variables.html",[7,0.643,13,1.993,26,0.041,28,1.128,51,0.027,52,0.033,53,0.027,75,2.745,328,2.674,458,2.835,462,3.452,517,4.031,555,2.48,771,2.835,969,3.311,970,4.523,971,3.311,972,3.311,973,4.031,974,4.031,993,1.96,1015,3.311,1016,4.911,1017,4.034,1018,4.034,1019,4.034,1020,4.034,1021,4.034,1022,4.034,1023,4.034,1024,4.911]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":273,"title":{},"body":{"components/HomePage.html":{},"classes/Settings.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["0.10.2",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["0.15.3",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["0.5rem",{"_index":412,"title":{},"body":{"components/HomePage.html":{}}}],["0.795",{"_index":403,"title":{},"body":{"components/HomePage.html":{}}}],["0/1",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["00",{"_index":629,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["00:00.00",{"_index":894,"title":{},"body":{"injectables/TimerService.html":{}}}],["01",{"_index":630,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["02",{"_index":631,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["03",{"_index":632,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["04",{"_index":633,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["04:00",{"_index":1005,"title":{},"body":{"miscellaneous/functions.html":{}}}],["05",{"_index":634,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["06",{"_index":635,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["07",{"_index":636,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["08",{"_index":637,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["08:30",{"_index":753,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["09",{"_index":638,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["0px",{"_index":743,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["1",{"_index":406,"title":{},"body":{"components/HomePage.html":{},"classes/Settings.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"index.html":{}}}],["1/1",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":422,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{}}}],["100",{"_index":375,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["11",{"_index":639,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["11.2.0",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":640,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["1200",{"_index":1004,"title":{},"body":{"miscellaneous/functions.html":{}}}],["12:00",{"_index":1003,"title":{},"body":{"miscellaneous/functions.html":{}}}],["13",{"_index":641,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["1315",{"_index":876,"title":{},"body":{"injectables/TimerService.html":{}}}],["13:15",{"_index":875,"title":{},"body":{"injectables/TimerService.html":{}}}],["14",{"_index":642,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["15",{"_index":280,"title":{},"body":{"components/HomePage.html":{}}}],["16",{"_index":643,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["16px",{"_index":357,"title":{},"body":{"components/HomePage.html":{}}}],["17",{"_index":644,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["18",{"_index":645,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["18:00",{"_index":754,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["19",{"_index":646,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["1].index",{"_index":561,"title":{},"body":{"classes/Settings.html":{}}}],["1px",{"_index":744,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["1rem",{"_index":413,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["2",{"_index":943,"title":{},"body":{"injectables/TimerService.html":{}}}],["2.0.0",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["2.4.7",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":647,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["20px",{"_index":352,"title":{},"body":{"components/HomePage.html":{}}}],["21",{"_index":648,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["22",{"_index":649,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["22px",{"_index":358,"title":{},"body":{"components/HomePage.html":{}}}],["23",{"_index":650,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["24",{"_index":652,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["25",{"_index":653,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["26",{"_index":654,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["26px",{"_index":355,"title":{},"body":{"components/HomePage.html":{}}}],["27",{"_index":655,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["28",{"_index":656,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["29",{"_index":657,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["2rem",{"_index":366,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["3",{"_index":501,"title":{},"body":{"injectables/NotificationService.html":{},"index.html":{}}}],["3/6",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":658,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["31",{"_index":659,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["32",{"_index":660,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["33",{"_index":661,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["34",{"_index":662,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["35",{"_index":663,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["350",{"_index":386,"title":{},"body":{"components/HomePage.html":{}}}],["350px",{"_index":384,"title":{},"body":{"components/HomePage.html":{}}}],["36",{"_index":415,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["37",{"_index":664,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["38",{"_index":665,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["39",{"_index":666,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["3rem",{"_index":740,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["4",{"_index":1009,"title":{},"body":{"index.html":{}}}],["40",{"_index":378,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["400",{"_index":1006,"title":{},"body":{"miscellaneous/functions.html":{}}}],["45",{"_index":410,"title":{},"body":{"components/HomePage.html":{}}}],["47",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["5.5.2",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["5/15",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":346,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["500",{"_index":390,"title":{},"body":{"components/HomePage.html":{}}}],["500px",{"_index":389,"title":{},"body":{"components/HomePage.html":{}}}],["50vw",{"_index":419,"title":{},"body":{"components/HomePage.html":{}}}],["6.6.0",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":393,"title":{},"body":{"components/HomePage.html":{}}}],["600px",{"_index":392,"title":{},"body":{"components/HomePage.html":{}}}],["65",{"_index":402,"title":{},"body":{"components/HomePage.html":{}}}],["6px",{"_index":745,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["7/19",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["8/17",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["8/28",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["850",{"_index":396,"title":{},"body":{"components/HomePage.html":{}}}],["850px",{"_index":395,"title":{},"body":{"components/HomePage.html":{}}}],["8c8c8c",{"_index":360,"title":{},"body":{"components/HomePage.html":{}}}],["_startstoptxt",{"_index":219,"title":{},"body":{"components/HomePage.html":{}}}],["a.index",{"_index":577,"title":{},"body":{"classes/Settings.html":{}}}],["aaaa",{"_index":468,"title":{},"body":{"injectables/NotificationService.html":{}}}],["absolute",{"_index":342,"title":{},"body":{"components/HomePage.html":{}}}],["actiontypeid",{"_index":475,"title":{},"body":{"injectables/NotificationService.html":{}}}],["activatedroutesnapshot",{"_index":449,"title":{},"body":{"guards/HomeResolver.html":{}}}],["actual_component",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["add",{"_index":512,"title":{},"body":{"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{}}}],["addalarm",{"_index":505,"title":{},"body":{"classes/Settings.html":{}}}],["addalarm(alarmvalue",{"_index":510,"title":{},"body":{"classes/Settings.html":{}}}],["addalarmcontainer",{"_index":741,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["added",{"_index":498,"title":{},"body":{"injectables/NotificationService.html":{}}}],["addlocalnotification",{"_index":465,"title":{},"body":{"injectables/NotificationService.html":{}}}],["addpause",{"_index":588,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["addpause(alarm",{"_index":600,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["aggiungo",{"_index":542,"title":{},"body":{"classes/Settings.html":{}}}],["alarm",{"_index":1,"title":{"classes/Alarm.html":{}},"body":{"classes/Alarm.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["alarm(labels.pause",{"_index":556,"title":{},"body":{"classes/Settings.html":{}}}],["alarm(labels.start",{"_index":530,"title":{},"body":{"classes/Settings.html":{}}}],["alarm(labels.stop",{"_index":533,"title":{},"body":{"classes/Settings.html":{}}}],["alarm.gethour",{"_index":727,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alarm.index",{"_index":304,"title":{},"body":{"components/HomePage.html":{},"classes/Settings.html":{}}}],["alarm.key",{"_index":731,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alarm.value",{"_index":732,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alarms",{"_index":504,"title":{},"body":{"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["alarms?.value",{"_index":821,"title":{},"body":{"injectables/StorageService.html":{}}}],["alarmsjson",{"_index":829,"title":{},"body":{"injectables/StorageService.html":{}}}],["alarmvalue",{"_index":515,"title":{},"body":{"classes/Settings.html":{}}}],["alert",{"_index":101,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["alert.present",{"_index":115,"title":{},"body":{"injectables/AlertService.html":{}}}],["alertcontroller",{"_index":58,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["alertservice",{"_index":55,"title":{"injectables/AlertService.html":{}},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["align",{"_index":339,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["alla",{"_index":544,"title":{},"body":{"classes/Settings.html":{}}}],["already",{"_index":570,"title":{},"body":{"classes/Settings.html":{}}}],["angular/common",{"_index":430,"title":{},"body":{"modules/HomePageModule.html":{},"dependencies.html":{}}}],["angular/compiler/src/output/output_ast",{"_index":260,"title":{},"body":{"components/HomePage.html":{}}}],["angular/core",{"_index":91,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":432,"title":{},"body":{"modules/HomePageModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"dependencies.html":{}}}],["any,canceltext",{"_index":116,"title":{},"body":{"injectables/AlertService.html":{}}}],["any,oktext",{"_index":117,"title":{},"body":{"injectables/AlertService.html":{}}}],["app",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["app.component",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":121,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{},"index.html":{}}}],["appcontainer",{"_index":367,"title":{},"body":{"components/HomePage.html":{}}}],["appmodule",{"_index":157,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["approutingmodule",{"_index":168,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["around",{"_index":374,"title":{},"body":{"components/HomePage.html":{}}}],["array",{"_index":514,"title":{},"body":{"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["async",{"_index":59,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["attachments",{"_index":486,"title":{},"body":{"injectables/NotificationService.html":{}}}],["available",{"_index":1014,"title":{},"body":{"modules.html":{}}}],["await",{"_index":102,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["b",{"_index":576,"title":{},"body":{"classes/Settings.html":{}}}],["b.index",{"_index":578,"title":{},"body":{"classes/Settings.html":{}}}],["background",{"_index":400,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["begin",{"_index":892,"title":{},"body":{"injectables/TimerService.html":{}}}],["between",{"_index":270,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{}}}],["blanktime",{"_index":853,"title":{},"body":{"injectables/TimerService.html":{}}}],["body",{"_index":469,"title":{},"body":{"injectables/NotificationService.html":{}}}],["bool",{"_index":439,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["boolean",{"_index":22,"title":{},"body":{"classes/Alarm.html":{},"classes/Settings.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["bootstrap",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"index.html":{}}}],["browse",{"_index":1012,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":275,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["buttons",{"_index":104,"title":{},"body":{"injectables/AlertService.html":{},"components/SettingsPopoverComponent.html":{}}}],["buttonscontainer",{"_index":738,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["calc",{"_index":870,"title":{},"body":{"injectables/TimerService.html":{}}}],["calcdiff",{"_index":859,"title":{},"body":{"injectables/TimerService.html":{}}}],["calcel",{"_index":603,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["cancel",{"_index":106,"title":{},"body":{"injectables/AlertService.html":{},"components/SettingsPopoverComponent.html":{}}}],["canceltext",{"_index":67,"title":{},"body":{"injectables/AlertService.html":{}}}],["capacitor/android",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":463,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"dependencies.html":{}}}],["case",{"_index":284,"title":{},"body":{"components/HomePage.html":{}}}],["center",{"_index":340,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["check",{"_index":293,"title":{},"body":{"components/HomePage.html":{},"classes/Settings.html":{}}}],["class",{"_index":0,"title":{"classes/Alarm.html":{},"classes/Settings.html":{},"classes/TimeList.html":{}},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Alarm.html":{},"classes/Settings.html":{},"classes/TimeList.html":{},"index.html":{}}}],["clearinterval(this.started",{"_index":934,"title":{},"body":{"injectables/TimerService.html":{}}}],["click",{"_index":238,"title":{},"body":{"components/HomePage.html":{}}}],["clickcounter",{"_index":272,"title":{},"body":{"components/HomePage.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["clockrunning",{"_index":860,"title":{},"body":{"injectables/TimerService.html":{}}}],["closed",{"_index":285,"title":{},"body":{"components/HomePage.html":{}}}],["cluster_appmodule",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":424,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":425,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_imports",{"_index":426,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepageroutingmodule",{"_index":434,"title":{},"body":{"modules/HomePageRoutingModule.html":{},"index.html":{}}}],["cluster_homepageroutingmodule_providers",{"_index":435,"title":{},"body":{"modules/HomePageRoutingModule.html":{},"index.html":{}}}],["codes",{"_index":86,"title":{},"body":{"injectables/AlertService.html":{}}}],["color",{"_index":359,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["column",{"_index":370,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["columns",{"_index":706,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["common/utility",{"_index":528,"title":{},"body":{"classes/Settings.html":{}}}],["commonmodule",{"_index":429,"title":{},"body":{"modules/HomePageModule.html":{}}}],["component",{"_index":120,"title":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["components",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"index.html":{}}}],["console.log(\"adding",{"_index":493,"title":{},"body":{"injectables/NotificationService.html":{}}}],["console.log(\"alarm",{"_index":302,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(\"cancel",{"_index":679,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(\"current",{"_index":305,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(\"initialising",{"_index":816,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(\"loading",{"_index":673,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(\"resetting",{"_index":322,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(\"retrieving",{"_index":837,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(\"saved",{"_index":916,"title":{},"body":{"injectables/TimerService.html":{}}}],["console.log(\"saving",{"_index":676,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["console.log(\"scheduled",{"_index":303,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(\"selected",{"_index":682,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(\"settings",{"_index":824,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(\"status",{"_index":840,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log('canceled",{"_index":314,"title":{},"body":{"components/HomePage.html":{}}}],["console.log('click",{"_index":300,"title":{},"body":{"components/HomePage.html":{}}}],["console.log('confirmed",{"_index":312,"title":{},"body":{"components/HomePage.html":{}}}],["console.log('getting",{"_index":722,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log('ondiddismiss",{"_index":331,"title":{},"body":{"components/HomePage.html":{}}}],["console.log('platform",{"_index":455,"title":{},"body":{"guards/HomeResolver.html":{}}}],["console.log(alarm",{"_index":684,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(alarmsjson",{"_index":831,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(msg",{"_index":562,"title":{},"body":{"classes/Settings.html":{}}}],["console.log(pause",{"_index":557,"title":{},"body":{"classes/Settings.html":{}}}],["console.log(t",{"_index":299,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(this.settings",{"_index":675,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(this.settings.alarms",{"_index":694,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(this.settings.alarms.length",{"_index":844,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(this.timelist",{"_index":324,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(value",{"_index":699,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["const",{"_index":100,"title":{},"body":{"injectables/AlertService.html":{},"modules/AppRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"injectables/StorageService.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["constructor(alertcontroller",{"_index":63,"title":{},"body":{"injectables/AlertService.html":{}}}],["constructor(key",{"_index":19,"title":{},"body":{"classes/Alarm.html":{}}}],["constructor(platform",{"_index":444,"title":{},"body":{"guards/HomeResolver.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["constructor(popovercontroller",{"_index":597,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["constructor(private",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"injectables/StorageService.html":{}}}],["constructor(public",{"_index":95,"title":{},"body":{"injectables/AlertService.html":{}}}],["constructor(storageservice",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(timerservice",{"_index":229,"title":{},"body":{"components/HomePage.html":{}}}],["container",{"_index":338,"title":{},"body":{"components/HomePage.html":{}}}],["content",{"_index":372,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["context",{"_index":973,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":112,"title":{},"body":{"injectables/AlertService.html":{}}}],["copy",{"_index":687,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["cordova",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":274,"title":{},"body":{"components/HomePage.html":{}}}],["counter",{"_index":239,"title":{},"body":{"components/HomePage.html":{}}}],["coverage",{"_index":949,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":551,"title":{},"body":{"classes/Settings.html":{}}}],["cssclass",{"_index":108,"title":{},"body":{"injectables/AlertService.html":{},"components/SettingsPopoverComponent.html":{}}}],["current",{"_index":271,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["current.gethours",{"_index":939,"title":{},"body":{"injectables/TimerService.html":{}}}],["current.getminutes",{"_index":940,"title":{},"body":{"injectables/TimerService.html":{}}}],["currenttime",{"_index":295,"title":{},"body":{"components/HomePage.html":{}}}],["custompickeroptions",{"_index":587,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["d",{"_index":496,"title":{},"body":{"injectables/NotificationService.html":{}}}],["date",{"_index":254,"title":{},"body":{"components/HomePage.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["dateformat",{"_index":755,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["dateidx",{"_index":945,"title":{},"body":{"injectables/TimerService.html":{}}}],["datestr",{"_index":941,"title":{},"body":{"injectables/TimerService.html":{}}}],["day",{"_index":309,"title":{},"body":{"components/HomePage.html":{},"injectables/NotificationService.html":{}}}],["declarations",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"index.html":{}}}],["decoration",{"_index":362,"title":{},"body":{"components/HomePage.html":{}}}],["defailt",{"_index":802,"title":{},"body":{"injectables/StorageService.html":{}}}],["default",{"_index":75,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["default_val",{"_index":268,"title":{},"body":{"components/HomePage.html":{},"classes/Settings.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["default_val.start",{"_index":531,"title":{},"body":{"classes/Settings.html":{}}}],["default_val.stop",{"_index":534,"title":{},"body":{"classes/Settings.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["delete",{"_index":520,"title":{},"body":{"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{}}}],["deletealarm",{"_index":506,"title":{},"body":{"classes/Settings.html":{}}}],["deletealarm(alarm",{"_index":518,"title":{},"body":{"classes/Settings.html":{}}}],["deleted",{"_index":583,"title":{},"body":{"classes/Settings.html":{}}}],["deletepause",{"_index":589,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["deletepause(alarm",{"_index":607,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["dependencies",{"_index":159,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":76,"title":{},"body":{"injectables/AlertService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["device",{"_index":796,"title":{},"body":{"injectables/StorageService.html":{}}}],["diff",{"_index":767,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["difference",{"_index":871,"title":{},"body":{"injectables/TimerService.html":{}}}],["different",{"_index":1002,"title":{},"body":{"miscellaneous/functions.html":{}}}],["diffms",{"_index":768,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["digit",{"_index":889,"title":{},"body":{"injectables/TimerService.html":{}}}],["direction",{"_index":369,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["directive",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["directives",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["dismiss",{"_index":610,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["dismissclick",{"_index":590,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["display",{"_index":79,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["documentation",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["done",{"_index":315,"title":{},"body":{"components/HomePage.html":{}}}],["doxygen",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["duration",{"_index":10,"title":{},"body":{"classes/Alarm.html":{}}}],["dynamic",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":546,"title":{},"body":{"classes/Settings.html":{}}}],["echotimer",{"_index":333,"title":{},"body":{"components/HomePage.html":{}}}],["element",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{}}}],["enabled",{"_index":11,"title":{},"body":{"classes/Alarm.html":{},"classes/Settings.html":{}}}],["end",{"_index":416,"title":{},"body":{"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["endregion",{"_index":836,"title":{},"body":{"injectables/StorageService.html":{}}}],["entrycomponents",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":752,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["enumerations",{"_index":994,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":970,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":884,"title":{},"body":{"injectables/TimerService.html":{}}}],["ex",{"_index":874,"title":{},"body":{"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["existingalarm",{"_index":565,"title":{},"body":{"classes/Settings.html":{}}}],["existingalarm.length",{"_index":568,"title":{},"body":{"classes/Settings.html":{}}}],["exists",{"_index":571,"title":{},"body":{"classes/Settings.html":{}}}],["export",{"_index":39,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["exports",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"index.html":{}}}],["extra",{"_index":490,"title":{},"body":{"injectables/NotificationService.html":{}}}],["f",{"_index":579,"title":{},"body":{"classes/Settings.html":{}}}],["fabcontainer",{"_index":417,"title":{},"body":{"components/HomePage.html":{}}}],["false",{"_index":555,"title":{},"body":{"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":818,"title":{},"body":{"injectables/StorageService.html":{}}}],["fff",{"_index":736,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["fine",{"_index":545,"title":{},"body":{"classes/Settings.html":{}}}],["flex",{"_index":368,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["font",{"_index":350,"title":{},"body":{"components/HomePage.html":{}}}],["for(let",{"_index":938,"title":{},"body":{"injectables/TimerService.html":{}}}],["formsmodule",{"_index":431,"title":{},"body":{"modules/HomePageModule.html":{}}}],["full",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":236,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["functions",{"_index":998,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funziona",{"_index":717,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["getalarmbyindex",{"_index":772,"title":{},"body":{"injectables/StorageService.html":{}}}],["getalarmbyindex(idx",{"_index":786,"title":{},"body":{"injectables/StorageService.html":{}}}],["getalarmcount",{"_index":773,"title":{},"body":{"injectables/StorageService.html":{}}}],["getalarms",{"_index":774,"title":{},"body":{"injectables/StorageService.html":{}}}],["getcurrenttimeasindex",{"_index":861,"title":{},"body":{"injectables/TimerService.html":{}}}],["gethour",{"_index":16,"title":{},"body":{"classes/Alarm.html":{}}}],["gethoursoptions",{"_index":591,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["gethoursoptions(alarm",{"_index":612,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["getlastalarm",{"_index":775,"title":{},"body":{"injectables/StorageService.html":{}}}],["getminutesoptions",{"_index":592,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["getsettings",{"_index":776,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstartedtimes",{"_index":862,"title":{},"body":{"injectables/TimerService.html":{}}}],["getstatus",{"_index":777,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstoppedtimes",{"_index":863,"title":{},"body":{"injectables/TimerService.html":{}}}],["getstoredsettings",{"_index":778,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstoredstatus",{"_index":779,"title":{},"body":{"injectables/StorageService.html":{}}}],["gettime",{"_index":864,"title":{},"body":{"injectables/TimerService.html":{}}}],["gettimelist",{"_index":865,"title":{},"body":{"injectables/TimerService.html":{}}}],["graph",{"_index":1013,"title":{},"body":{"modules.html":{}}}],["greenyellow",{"_index":746,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["grow",{"_index":405,"title":{},"body":{"components/HomePage.html":{}}}],["guard",{"_index":441,"title":{"guards/HomeResolver.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["guards",{"_index":442,"title":{},"body":{"guards/HomeResolver.html":{}}}],["h",{"_index":726,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["handler",{"_index":110,"title":{},"body":{"injectables/AlertService.html":{}}}],["handler:(value:any",{"_index":698,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["header",{"_index":70,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{}}}],["height",{"_index":354,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["hetminute",{"_index":17,"title":{},"body":{"classes/Alarm.html":{}}}],["hh",{"_index":481,"title":{},"body":{"injectables/NotificationService.html":{}}}],["hh:mm",{"_index":336,"title":{},"body":{"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["hh:mm:ss",{"_index":760,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["hidden",{"_index":408,"title":{},"body":{"components/HomePage.html":{}}}],["history",{"_index":207,"title":{},"body":{"components/HistoryComponent.html":{}}}],["history'},{'name",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["history.component.html",{"_index":209,"title":{},"body":{"components/HistoryComponent.html":{}}}],["history.component.scss",{"_index":208,"title":{},"body":{"components/HistoryComponent.html":{}}}],["historycomponent",{"_index":147,"title":{"components/HistoryComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["home",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["home'},{'name",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["home.page",{"_index":433,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home.page.html",{"_index":217,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":216,"title":{},"body":{"components/HomePage.html":{}}}],["home.resolve",{"_index":438,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["homepage",{"_index":149,"title":{"components/HomePage.html":{}},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{},"index.html":{}}}],["homepagemodule",{"_index":423,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["homepageroutingmodule",{"_index":427,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["homeresolver",{"_index":437,"title":{"guards/HomeResolver.html":{}},"body":{"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"coverage.html":{}}}],["honeydew",{"_index":747,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["hour",{"_index":36,"title":{},"body":{"classes/Alarm.html":{},"injectables/NotificationService.html":{},"injectables/TimerService.html":{}}}],["hourminute",{"_index":758,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["hourminuteseconds",{"_index":759,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["hours",{"_index":311,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["house",{"_index":474,"title":{},"body":{"injectables/NotificationService.html":{}}}],["html",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["icon",{"_index":365,"title":{},"body":{"components/HomePage.html":{}}}],["id",{"_index":471,"title":{},"body":{"injectables/NotificationService.html":{}}}],["identifier",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["idx",{"_index":523,"title":{},"body":{"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["if(this.running",{"_index":925,"title":{},"body":{"injectables/TimerService.html":{}}}],["implements",{"_index":205,"title":{},"body":{"components/HistoryComponent.html":{},"guards/HomeResolver.html":{},"components/SettingsPopoverComponent.html":{}}}],["import",{"_index":90,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["import('./pages/home/home.module').then",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["increment",{"_index":248,"title":{},"body":{"components/HomePage.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["initialize",{"_index":801,"title":{},"body":{"injectables/StorageService.html":{}}}],["initializesettings",{"_index":780,"title":{},"body":{"injectables/StorageService.html":{}}}],["initializestatus",{"_index":781,"title":{},"body":{"injectables/StorageService.html":{}}}],["injectable",{"_index":54,"title":{"injectables/AlertService.html":{},"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}},"body":{"injectables/AlertService.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["injectables",{"_index":56,"title":{},"body":{"injectables/AlertService.html":{},"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"index.html":{}}}],["inner",{"_index":742,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["instantiate",{"_index":805,"title":{},"body":{"injectables/StorageService.html":{}}}],["interface",{"_index":748,"title":{"interfaces/Status.html":{}},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":529,"title":{},"body":{"classes/Settings.html":{},"interfaces/Status.html":{}}}],["ion",{"_index":364,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["ionic/angular",{"_index":92,"title":{},"body":{"injectables/AlertService.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"guards/HomeResolver.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"dependencies.html":{}}}],["ionic/core",{"_index":671,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["ionicmodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["ionicmodule.forroot",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["isrunning",{"_index":751,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["item",{"_index":735,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["items",{"_index":377,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["json.parse(alarms.value",{"_index":822,"title":{},"body":{"injectables/StorageService.html":{}}}],["json.parse(res.value",{"_index":839,"title":{},"body":{"injectables/StorageService.html":{}}}],["json.stringify(status",{"_index":834,"title":{},"body":{"injectables/StorageService.html":{}}}],["json.stringify(this.settings.alarms",{"_index":830,"title":{},"body":{"injectables/StorageService.html":{}}}],["justify",{"_index":371,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["key",{"_index":12,"title":{},"body":{"classes/Alarm.html":{},"classes/Settings.html":{},"injectables/StorageService.html":{}}}],["keys",{"_index":812,"title":{},"body":{"injectables/StorageService.html":{},"miscellaneous/enumerations.html":{}}}],["keys.status",{"_index":835,"title":{},"body":{"injectables/StorageService.html":{}}}],["l'array",{"_index":549,"title":{},"body":{"classes/Settings.html":{}}}],["l'elemento",{"_index":543,"title":{},"body":{"classes/Settings.html":{}}}],["labels",{"_index":267,"title":{},"body":{"components/HomePage.html":{},"classes/Settings.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["labels.pause",{"_index":553,"title":{},"body":{"classes/Settings.html":{}}}],["labels.start",{"_index":250,"title":{},"body":{"components/HomePage.html":{},"classes/Settings.html":{}}}],["labels.stop",{"_index":292,"title":{},"body":{"components/HomePage.html":{},"classes/Settings.html":{}}}],["last",{"_index":792,"title":{},"body":{"injectables/StorageService.html":{}}}],["late",{"_index":306,"title":{},"body":{"components/HomePage.html":{}}}],["left",{"_index":343,"title":{},"body":{"components/HomePage.html":{}}}],["legend",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/SettingsPopoverComponent.html":{},"index.html":{}}}],["line",{"_index":353,"title":{},"body":{"components/HomePage.html":{}}}],["lists",{"_index":282,"title":{},"body":{"components/HomePage.html":{}}}],["literal",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["load",{"_index":616,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["loadchildren",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaddefaultsettings",{"_index":782,"title":{},"body":{"injectables/StorageService.html":{}}}],["loadsettings",{"_index":593,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["local",{"_index":622,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["localnotification",{"_index":461,"title":{},"body":{"injectables/NotificationService.html":{}}}],["localnotifications",{"_index":464,"title":{},"body":{"injectables/NotificationService.html":{}}}],["localnotifications.schedule",{"_index":494,"title":{},"body":{"injectables/NotificationService.html":{}}}],["m",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["manage",{"_index":278,"title":{},"body":{"components/HomePage.html":{}}}],["margin",{"_index":361,"title":{},"body":{"components/HomePage.html":{}}}],["matching",{"_index":52,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["media(min",{"_index":382,"title":{},"body":{"components/HomePage.html":{}}}],["message",{"_index":66,"title":{},"body":{"injectables/AlertService.html":{}}}],["metadata",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["methods",{"_index":14,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["min",{"_index":739,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{}}}],["minute",{"_index":482,"title":{},"body":{"injectables/NotificationService.html":{}}}],["minutes",{"_index":38,"title":{},"body":{"classes/Alarm.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{}}}],["miscellaneous",{"_index":993,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":483,"title":{},"body":{"injectables/NotificationService.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["models/interfaces",{"_index":269,"title":{},"body":{"components/HomePage.html":{}}}],["module",{"_index":156,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"index.html":{}}}],["modules",{"_index":158,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["month",{"_index":480,"title":{},"body":{"injectables/NotificationService.html":{}}}],["more",{"_index":385,"title":{},"body":{"components/HomePage.html":{}}}],["msg",{"_index":77,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{}}}],["msg.length",{"_index":500,"title":{},"body":{"injectables/NotificationService.html":{}}}],["msg.substring(0",{"_index":499,"title":{},"body":{"injectables/NotificationService.html":{}}}],["msg:'a",{"_index":569,"title":{},"body":{"classes/Settings.html":{}}}],["msg:'alarm",{"_index":582,"title":{},"body":{"classes/Settings.html":{}}}],["name",{"_index":27,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["name:'duration",{"_index":713,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["name:'hours",{"_index":707,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["name:'minutes",{"_index":710,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["new",{"_index":97,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["newstoppedduration",{"_index":928,"title":{},"body":{"injectables/TimerService.html":{}}}],["newstoppedduration:any",{"_index":926,"title":{},"body":{"injectables/TimerService.html":{}}}],["nex",{"_index":513,"title":{},"body":{"classes/Settings.html":{}}}],["ngmodule",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["ngoninit",{"_index":210,"title":{},"body":{"components/HistoryComponent.html":{},"components/SettingsPopoverComponent.html":{}}}],["non",{"_index":716,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["none",{"_index":363,"title":{},"body":{"components/HomePage.html":{}}}],["notification",{"_index":459,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notifications",{"_index":495,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notificationservice",{"_index":457,"title":{"injectables/NotificationService.html":{}},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["null",{"_index":40,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["num",{"_index":893,"title":{},"body":{"injectables/TimerService.html":{}}}],["number",{"_index":21,"title":{},"body":{"classes/Alarm.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["obj",{"_index":724,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["object",{"_index":517,"title":{},"body":{"classes/Settings.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":688,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["offset",{"_index":220,"title":{},"body":{"components/HomePage.html":{}}}],["ok",{"_index":113,"title":{},"body":{"injectables/AlertService.html":{},"components/SettingsPopoverComponent.html":{}}}],["oktext",{"_index":68,"title":{},"body":{"injectables/AlertService.html":{}}}],["onfabtimerclick",{"_index":225,"title":{},"body":{"components/HomePage.html":{}}}],["oninit",{"_index":206,"title":{},"body":{"components/HistoryComponent.html":{},"components/SettingsPopoverComponent.html":{}}}],["onpause",{"_index":866,"title":{},"body":{"injectables/TimerService.html":{}}}],["ontimechange",{"_index":594,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["ontimechange(val",{"_index":618,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["open",{"_index":241,"title":{},"body":{"components/HomePage.html":{},"injectables/NotificationService.html":{}}}],["open_product",{"_index":476,"title":{},"body":{"injectables/NotificationService.html":{}}}],["optional",{"_index":9,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":696,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["options.push(obj",{"_index":728,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["options.push({text:x,value:x",{"_index":730,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["options:this.gethoursoptions(alarm",{"_index":709,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["options:this.getminutesoptions",{"_index":712,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["order",{"_index":1001,"title":{},"body":{"miscellaneous/functions.html":{}}}],["original",{"_index":689,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["out",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"classes/Settings.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["over",{"_index":611,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["overflow",{"_index":407,"title":{},"body":{"components/HomePage.html":{}}}],["overview",{"_index":1008,"title":{"index.html":{}},"body":{"index.html":{}}}],["p",{"_index":356,"title":{},"body":{"components/HomePage.html":{}}}],["package",{"_index":977,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":737,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["param",{"_index":96,"title":{},"body":{"injectables/AlertService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":337,"title":{},"body":{"components/HomePage.html":{}}}],["path",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["pathmatch",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pause",{"_index":552,"title":{},"body":{"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"miscellaneous/enumerations.html":{}}}],["pause.index",{"_index":559,"title":{},"body":{"classes/Settings.html":{}}}],["photo.id",{"_index":472,"title":{},"body":{"injectables/NotificationService.html":{}}}],["photo.id.tostring",{"_index":487,"title":{},"body":{"injectables/NotificationService.html":{}}}],["photo.reminders[0].repeat",{"_index":485,"title":{},"body":{"injectables/NotificationService.html":{}}}],["photo.timestamp",{"_index":492,"title":{},"body":{"injectables/NotificationService.html":{}}}],["photo.webviewpath",{"_index":489,"title":{},"body":{"injectables/NotificationService.html":{}}}],["picker",{"_index":719,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["picker.present",{"_index":721,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["pickerclassname",{"_index":718,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["pickercontroller",{"_index":598,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["pickeroptions",{"_index":670,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["platform",{"_index":445,"title":{},"body":{"guards/HomeResolver.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["platform.pause",{"_index":883,"title":{},"body":{"injectables/TimerService.html":{}}}],["plugins",{"_index":462,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["poi",{"_index":547,"title":{},"body":{"classes/Settings.html":{}}}],["pop",{"_index":243,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["popover",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["popover.component",{"_index":263,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["popover.component.html",{"_index":586,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.scss",{"_index":585,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts",{"_index":584,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["popover.component.ts:109",{"_index":609,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:117",{"_index":625,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:16",{"_index":628,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:160",{"_index":613,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:17",{"_index":668,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:173",{"_index":614,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:20",{"_index":651,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:26",{"_index":667,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:32",{"_index":599,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:39",{"_index":627,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:40",{"_index":626,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:43",{"_index":617,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:52",{"_index":621,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:61",{"_index":602,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:71",{"_index":601,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:80",{"_index":608,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:88",{"_index":615,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:97",{"_index":619,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.ondiddismiss",{"_index":330,"title":{},"body":{"components/HomePage.html":{}}}],["popover.present",{"_index":329,"title":{},"body":{"components/HomePage.html":{}}}],["popover/settings",{"_index":262,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["popovercontroller",{"_index":231,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["posistion",{"_index":788,"title":{},"body":{"injectables/StorageService.html":{}}}],["position",{"_index":341,"title":{},"body":{"components/HomePage.html":{}}}],["positional",{"_index":526,"title":{},"body":{"classes/Settings.html":{}}}],["prefix:'duration",{"_index":714,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["prefix:'h",{"_index":708,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["prefix:'m",{"_index":711,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["preloadallmodules",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":203,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["presentconfirm",{"_index":60,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentconfirm(header",{"_index":65,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentconfirmalert",{"_index":61,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentconfirmalert(msg",{"_index":72,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentwarningalert",{"_index":62,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentwarningalert(msg",{"_index":87,"title":{},"body":{"injectables/AlertService.html":{}}}],["private",{"_index":218,"title":{},"body":{"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["production",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":71,"title":{},"body":{"injectables/AlertService.html":{}}}],["promise(async",{"_index":98,"title":{},"body":{"injectables/AlertService.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["provide",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":93,"title":{},"body":{"injectables/AlertService.html":{},"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["providers",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"index.html":{}}}],["public",{"_index":15,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{}}}],["push",{"_index":572,"title":{},"body":{"classes/Settings.html":{}}}],["px",{"_index":387,"title":{},"body":{"components/HomePage.html":{}}}],["range",{"_index":558,"title":{},"body":{"classes/Settings.html":{}}}],["read",{"_index":799,"title":{},"body":{"injectables/StorageService.html":{}}}],["ready",{"_index":456,"title":{},"body":{"guards/HomeResolver.html":{}}}],["recover",{"_index":281,"title":{},"body":{"components/HomePage.html":{}}}],["redirectto",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["region",{"_index":827,"title":{},"body":{"injectables/StorageService.html":{}}}],["reload",{"_index":605,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["reorder",{"_index":574,"title":{},"body":{"classes/Settings.html":{}}}],["repeats",{"_index":484,"title":{},"body":{"injectables/NotificationService.html":{}}}],["require",{"_index":974,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":85,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"dependencies.html":{}}}],["res.succeded",{"_index":704,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["res.value",{"_index":838,"title":{},"body":{"injectables/StorageService.html":{}}}],["reset",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/TimerService.html":{},"index.html":{}}}],["resetbuttoncontainer",{"_index":421,"title":{},"body":{"components/HomePage.html":{}}}],["resolve",{"_index":99,"title":{},"body":{"injectables/AlertService.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{}}}],["resolve('cancel",{"_index":118,"title":{},"body":{"injectables/AlertService.html":{}}}],["resolve('ok",{"_index":119,"title":{},"body":{"injectables/AlertService.html":{}}}],["resolve(false",{"_index":111,"title":{},"body":{"injectables/AlertService.html":{}}}],["resolve(route",{"_index":448,"title":{},"body":{"guards/HomeResolver.html":{}}}],["resolve(true",{"_index":114,"title":{},"body":{"injectables/AlertService.html":{}}}],["resolved",{"_index":332,"title":{},"body":{"components/HomePage.html":{}}}],["result",{"_index":51,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":53,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":48,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"guards/HomeResolver.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["returns",{"_index":35,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["rgb(20",{"_index":734,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["rgba(48",{"_index":409,"title":{},"body":{"components/HomePage.html":{}}}],["rgba(51",{"_index":414,"title":{},"body":{"components/HomePage.html":{}}}],["rgba(66",{"_index":401,"title":{},"body":{"components/HomePage.html":{}}}],["right",{"_index":344,"title":{},"body":{"components/HomePage.html":{}}}],["riordino",{"_index":548,"title":{},"body":{"classes/Settings.html":{}}}],["role",{"_index":107,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["root",{"_index":94,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["root'},{'name",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["route",{"_index":453,"title":{},"body":{"guards/HomeResolver.html":{}}}],["router",{"_index":446,"title":{},"body":{"guards/HomeResolver.html":{}}}],["routereusestrategy",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":440,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":451,"title":{},"body":{"guards/HomeResolver.html":{}}}],["routes",{"_index":192,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routing.module",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["routing.module.ts",{"_index":189,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["row",{"_index":399,"title":{},"body":{"components/HomePage.html":{}}}],["running",{"_index":286,"title":{},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{}}}],["rxjs",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":563,"title":{},"body":{"classes/Settings.html":{}}}],["sart",{"_index":246,"title":{},"body":{"components/HomePage.html":{}}}],["save",{"_index":595,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["savedstatus",{"_index":914,"title":{},"body":{"injectables/TimerService.html":{}}}],["savedstatus.clickcounter",{"_index":924,"title":{},"body":{"injectables/TimerService.html":{}}}],["savedstatus.timelist",{"_index":919,"title":{},"body":{"injectables/TimerService.html":{}}}],["savedstatus?.isrunning",{"_index":917,"title":{},"body":{"injectables/TimerService.html":{}}}],["savesettings",{"_index":783,"title":{},"body":{"injectables/StorageService.html":{}}}],["savesettings(settings",{"_index":806,"title":{},"body":{"injectables/StorageService.html":{}}}],["savestatus",{"_index":784,"title":{},"body":{"injectables/StorageService.html":{}}}],["savestatus(status",{"_index":808,"title":{},"body":{"injectables/StorageService.html":{}}}],["saving",{"_index":828,"title":{},"body":{"injectables/StorageService.html":{}}}],["schedule",{"_index":477,"title":{},"body":{"injectables/NotificationService.html":{}}}],["secondary",{"_index":109,"title":{},"body":{"injectables/AlertService.html":{}}}],["selector",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["service",{"_index":283,"title":{},"body":{"components/HomePage.html":{}}}],["service/storage/storage.service",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["setings",{"_index":242,"title":{},"body":{"components/HomePage.html":{}}}],["setinterval(this.clockrunning.bind(this",{"_index":931,"title":{},"body":{"injectables/TimerService.html":{}}}],["setting",{"_index":800,"title":{},"body":{"injectables/StorageService.html":{},"miscellaneous/enumerations.html":{}}}],["settings",{"_index":152,"title":{"classes/Settings.html":{}},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["settings.alarms",{"_index":820,"title":{},"body":{"injectables/StorageService.html":{}}}],["settingscontainer",{"_index":733,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["settingspopovercomponent",{"_index":151,"title":{"components/SettingsPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{},"index.html":{}}}],["showalarmpicker",{"_index":596,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["showalarmpicker(alarm",{"_index":624,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["showsettings",{"_index":226,"title":{},"body":{"components/HomePage.html":{}}}],["size",{"_index":351,"title":{},"body":{"components/HomePage.html":{}}}],["size:2rem",{"_index":380,"title":{},"body":{"components/HomePage.html":{}}}],["size:3rem",{"_index":388,"title":{},"body":{"components/HomePage.html":{}}}],["size:4rem",{"_index":391,"title":{},"body":{"components/HomePage.html":{}}}],["size:5rem",{"_index":394,"title":{},"body":{"components/HomePage.html":{}}}],["size:7rem",{"_index":397,"title":{},"body":{"components/HomePage.html":{}}}],["smallicon",{"_index":473,"title":{},"body":{"injectables/NotificationService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["space",{"_index":373,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["spec\\.ts",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":521,"title":{},"body":{"classes/Settings.html":{}}}],["src/.../environment.prod.ts",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interfaces.ts",{"_index":995,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../keys.ts",{"_index":996,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../notification.service.ts",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../storage.service.ts",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utility.ts",{"_index":999,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/common/utility",{"_index":907,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/common/utility.ts",{"_index":953,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/history/history/history.component.ts",{"_index":204,"title":{},"body":{"components/HistoryComponent.html":{},"coverage.html":{}}}],["src/app/components/history/history/history.component.ts:12",{"_index":212,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/components/history/history/history.component.ts:8",{"_index":211,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/components/settingspopover/settings",{"_index":261,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["src/app/models/alarm",{"_index":669,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["src/app/models/alarm.ts",{"_index":6,"title":{},"body":{"classes/Alarm.html":{},"coverage.html":{}}}],["src/app/models/alarm.ts:1",{"_index":24,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/alarm.ts:18",{"_index":32,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/alarm.ts:19",{"_index":33,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/alarm.ts:20",{"_index":30,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/alarm.ts:21",{"_index":31,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/alarm.ts:22",{"_index":29,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/alarm.ts:28",{"_index":34,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/alarm.ts:37",{"_index":37,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/interfaces",{"_index":811,"title":{},"body":{"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["src/app/models/interfaces.ts",{"_index":750,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/interfaces.ts:23",{"_index":845,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/interfaces.ts:32",{"_index":848,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/interfaces.ts:33",{"_index":849,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/interfaces.ts:34",{"_index":846,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/interfaces.ts:35",{"_index":847,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/interfaces.ts:36",{"_index":850,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/interfaces.ts:37",{"_index":851,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/keys",{"_index":813,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/models/keys.ts",{"_index":997,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/settings",{"_index":672,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["src/app/models/settings.ts",{"_index":503,"title":{},"body":{"classes/Settings.html":{},"coverage.html":{}}}],["src/app/models/settings.ts:32",{"_index":509,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/models/settings.ts:39",{"_index":524,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/models/settings.ts:49",{"_index":511,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/models/settings.ts:5",{"_index":508,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/models/settings.ts:94",{"_index":519,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/pages/home/home",{"_index":436,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":428,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":215,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:132",{"_index":245,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:148",{"_index":237,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:161",{"_index":240,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:18",{"_index":251,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:19",{"_index":257,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:20",{"_index":256,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:21",{"_index":255,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:22",{"_index":258,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:24",{"_index":232,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:35",{"_index":253,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:36",{"_index":252,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:57",{"_index":249,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:67",{"_index":233,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.resolve.ts",{"_index":443,"title":{},"body":{"guards/HomeResolver.html":{},"coverage.html":{}}}],["src/app/pages/home/home.resolve.ts:13",{"_index":452,"title":{},"body":{"guards/HomeResolver.html":{}}}],["src/app/pages/home/home.resolve.ts:6",{"_index":447,"title":{},"body":{"guards/HomeResolver.html":{}}}],["src/app/service/alert/alert.service",{"_index":264,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["src/app/service/alert/alert.service.ts",{"_index":57,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["src/app/service/alert/alert.service.ts:25",{"_index":74,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/service/alert/alert.service.ts:52",{"_index":88,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/service/alert/alert.service.ts:7",{"_index":64,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/service/alert/alert.service.ts:70",{"_index":69,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/service/alert/alert.service.ts:9",{"_index":89,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/service/notification/notification.service.ts",{"_index":458,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/service/notification/notification.service.ts:10",{"_index":460,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/storage/storage.service",{"_index":265,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["src/app/service/storage/storage.service.ts",{"_index":771,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/service/storage/storage.service.ts:107",{"_index":797,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:122",{"_index":793,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:129",{"_index":794,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:136",{"_index":790,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:14",{"_index":810,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:145",{"_index":787,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:15",{"_index":785,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:152",{"_index":791,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:161",{"_index":789,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:26",{"_index":798,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:44",{"_index":803,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:51",{"_index":804,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:62",{"_index":807,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:76",{"_index":809,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:91",{"_index":795,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/timer/timer.service",{"_index":266,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{}}}],["src/app/service/timer/timer.service.ts",{"_index":852,"title":{},"body":{"injectables/TimerService.html":{},"coverage.html":{}}}],["src/app/service/timer/timer.service.ts:100",{"_index":890,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:109",{"_index":872,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:125",{"_index":869,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:13",{"_index":897,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:15",{"_index":904,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:16",{"_index":906,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:165",{"_index":879,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:169",{"_index":880,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:17",{"_index":900,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:173",{"_index":877,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:177",{"_index":878,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:18",{"_index":898,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:185",{"_index":873,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:19",{"_index":895,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:197",{"_index":881,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:20",{"_index":903,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:204",{"_index":882,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:21",{"_index":905,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:22",{"_index":901,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:23",{"_index":899,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:25",{"_index":868,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:28",{"_index":896,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:29",{"_index":902,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:52",{"_index":886,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:71",{"_index":887,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:83",{"_index":885,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/environments/environment.prod.ts",{"_index":969,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":971,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":972,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":335,"title":{},"body":{"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"miscellaneous/enumerations.html":{}}}],["start/stop",{"_index":234,"title":{},"body":{"components/HomePage.html":{}}}],["started",{"_index":221,"title":{},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{}}}],["startedlist",{"_index":854,"title":{},"body":{"injectables/TimerService.html":{}}}],["starting",{"_index":564,"title":{},"body":{"classes/Settings.html":{}}}],["startstoptimer",{"_index":227,"title":{},"body":{"components/HomePage.html":{}}}],["state",{"_index":450,"title":{},"body":{"guards/HomeResolver.html":{}}}],["statements",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":749,"title":{"interfaces/Status.html":{}},"body":{"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["statusjson",{"_index":833,"title":{},"body":{"injectables/StorageService.html":{}}}],["stop",{"_index":247,"title":{},"body":{"components/HomePage.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"miscellaneous/enumerations.html":{}}}],["stopped",{"_index":222,"title":{},"body":{"components/HomePage.html":{}}}],["stoppedduration",{"_index":855,"title":{},"body":{"injectables/TimerService.html":{}}}],["stoppedduration:any",{"_index":910,"title":{},"body":{"injectables/TimerService.html":{}}}],["stoppedlist",{"_index":856,"title":{},"body":{"injectables/TimerService.html":{}}}],["storage",{"_index":623,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["storage.get({key",{"_index":819,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.set",{"_index":832,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage/storage.service",{"_index":908,"title":{},"body":{"injectables/TimerService.html":{}}}],["storageservice",{"_index":136,"title":{"injectables/StorageService.html":{}},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["stored",{"_index":606,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["str",{"_index":700,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["string",{"_index":20,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["strong",{"_index":349,"title":{},"body":{"components/HomePage.html":{}}}],["styles",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["styleurls",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["subheader",{"_index":73,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{}}}],["subscribe",{"_index":911,"title":{},"body":{"injectables/TimerService.html":{}}}],["succeded",{"_index":516,"title":{},"body":{"classes/Settings.html":{}}}],["support",{"_index":1010,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":78,"title":{},"body":{"injectables/AlertService.html":{}}}],["svg",{"_index":1011,"title":{},"body":{"modules.html":{}}}],["t",{"_index":297,"title":{},"body":{"components/HomePage.html":{}}}],["table",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["templateurl",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["temporary",{"_index":604,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["test",{"_index":470,"title":{},"body":{"injectables/NotificationService.html":{}}}],["text",{"_index":105,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["text:'ok",{"_index":697,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["text:x,value:x",{"_index":725,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["then(res",{"_index":84,"title":{},"body":{"injectables/AlertService.html":{},"guards/HomeResolver.html":{}}}],["this._startstoptxt",{"_index":290,"title":{},"body":{"components/HomePage.html":{}}}],["this.alarms",{"_index":536,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.filter(x",{"_index":566,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.find(x",{"_index":580,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.length",{"_index":550,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.push(end",{"_index":538,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.push(pause",{"_index":573,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.push(start",{"_index":537,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.sort((a",{"_index":575,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.splice(idx,1",{"_index":581,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms[idx].index",{"_index":540,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms[idx].value",{"_index":539,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms[this.alarms.length",{"_index":560,"title":{},"body":{"classes/Settings.html":{}}}],["this.alert.presentconfirmalert(msg",{"_index":317,"title":{},"body":{"components/HomePage.html":{}}}],["this.alert.presentwarningalert(res.msg",{"_index":705,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.alertcontroller.create",{"_index":103,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.blanktime",{"_index":936,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.calcdiff",{"_index":933,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.clickcounter",{"_index":325,"title":{},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{}}}],["this.diff",{"_index":763,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["this.diffms",{"_index":764,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["this.dismissclick",{"_index":678,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.duration",{"_index":45,"title":{},"body":{"classes/Alarm.html":{}}}],["this.enabled",{"_index":44,"title":{},"body":{"classes/Alarm.html":{}}}],["this.getminutesoptions",{"_index":715,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.getstoredstatus",{"_index":826,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.hours.foreach(x",{"_index":723,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.index",{"_index":43,"title":{},"body":{"classes/Alarm.html":{}}}],["this.initializesettings",{"_index":814,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.initializestatus",{"_index":815,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.key",{"_index":41,"title":{},"body":{"classes/Alarm.html":{}}}],["this.loaddefaultsettings",{"_index":817,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.loadsettings",{"_index":674,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.minutes.foreach(x",{"_index":729,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.myservice.presentconfirmalert('message",{"_index":83,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.notification",{"_index":466,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.offset",{"_index":279,"title":{},"body":{"components/HomePage.html":{}}}],["this.onpause",{"_index":912,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.onresume",{"_index":913,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.pickercontroller.create(options",{"_index":720,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.platform.pause.subscribe(async",{"_index":947,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.platform.ready",{"_index":454,"title":{},"body":{"guards/HomeResolver.html":{},"injectables/StorageService.html":{}}}],["this.popovercontroller.create",{"_index":326,"title":{},"body":{"components/HomePage.html":{}}}],["this.popovercontroller.dismiss",{"_index":695,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.presenttoast(msg",{"_index":502,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.reset",{"_index":318,"title":{},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{}}}],["this.running",{"_index":918,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.savesettings(this.settings",{"_index":823,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.settings",{"_index":680,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["this.settings.addalarm(str",{"_index":703,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.settings.alarms",{"_index":691,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["this.settings.alarms.length",{"_index":842,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.settings.alarms[end",{"_index":843,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.settings.alarms[idx",{"_index":841,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.settings.deletealarm(alarm",{"_index":685,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.settings.updatealaram(time",{"_index":693,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.showalarmpicker(alarm",{"_index":683,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.start",{"_index":761,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["this.started",{"_index":930,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.startstoptimer",{"_index":313,"title":{},"body":{"components/HomePage.html":{}}}],["this.status",{"_index":825,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.stop",{"_index":762,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["this.stoppedduration",{"_index":927,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.storageservice.getalarmbyindex(this.timerservice.clickcounter",{"_index":294,"title":{},"body":{"components/HomePage.html":{}}}],["this.storageservice.getalarmcount",{"_index":298,"title":{},"body":{"components/HomePage.html":{}}}],["this.storageservice.getlastalarm().index",{"_index":310,"title":{},"body":{"components/HomePage.html":{}}}],["this.storageservice.getsettings",{"_index":686,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.storageservice.getstatus",{"_index":915,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.storageservice.getstoredsettings",{"_index":681,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.storageservice.savesettings(this.settings",{"_index":677,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.storageservice.savestatus(status",{"_index":948,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.time",{"_index":935,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timebegan",{"_index":920,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timelist",{"_index":288,"title":{},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{}}}],["this.timelist.start.push(new",{"_index":929,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timelist.start[0",{"_index":921,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timelist.stop.push(this.timestopped",{"_index":932,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timelist.stop[this.timelist.stop.length",{"_index":923,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timerservice",{"_index":287,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.clickcounter",{"_index":301,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.getcurrenttimeasindex",{"_index":296,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.gettimelist",{"_index":321,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.isrunning",{"_index":291,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.reset",{"_index":323,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.start",{"_index":320,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.stop",{"_index":319,"title":{},"body":{"components/HomePage.html":{}}}],["this.timestopped",{"_index":922,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.tmpsettings.alarms",{"_index":690,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.total",{"_index":765,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["this.totalms",{"_index":766,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["this.updategui",{"_index":289,"title":{},"body":{"components/HomePage.html":{}}}],["this.value",{"_index":42,"title":{},"body":{"classes/Alarm.html":{}}}],["this.value.split",{"_index":47,"title":{},"body":{"classes/Alarm.html":{}}}],["this.zeroprefix(hour",{"_index":942,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.zeroprefix(min",{"_index":944,"title":{},"body":{"injectables/TimerService.html":{}}}],["this_expr",{"_index":259,"title":{},"body":{"components/HomePage.html":{}}}],["time",{"_index":223,"title":{},"body":{"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{}}}],["timebegan",{"_index":857,"title":{},"body":{"injectables/TimerService.html":{}}}],["timecontainer",{"_index":376,"title":{},"body":{"components/HomePage.html":{}}}],["timelist",{"_index":224,"title":{"classes/TimeList.html":{}},"body":{"components/HomePage.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["timelistcontainer",{"_index":398,"title":{},"body":{"components/HomePage.html":{}}}],["timer",{"_index":235,"title":{},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{}}}],["timerfab",{"_index":418,"title":{},"body":{"components/HomePage.html":{}}}],["timerfabtxt",{"_index":420,"title":{},"body":{"components/HomePage.html":{}}}],["timerservice",{"_index":230,"title":{"injectables/TimerService.html":{}},"body":{"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"injectables/TimerService.html":{},"coverage.html":{},"index.html":{}}}],["timerservice.gettime",{"_index":334,"title":{},"body":{"components/HomePage.html":{}}}],["timeslist",{"_index":404,"title":{},"body":{"components/HomePage.html":{}}}],["timestamp",{"_index":491,"title":{},"body":{"injectables/NotificationService.html":{}}}],["timestext",{"_index":411,"title":{},"body":{"components/HomePage.html":{}}}],["timestopped",{"_index":858,"title":{},"body":{"injectables/TimerService.html":{}}}],["timestopped:any",{"_index":909,"title":{},"body":{"injectables/TimerService.html":{}}}],["timestr",{"_index":1007,"title":{},"body":{"miscellaneous/functions.html":{}}}],["timetostring",{"_index":527,"title":{},"body":{"classes/Settings.html":{},"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["timetostring(alarmvalue",{"_index":554,"title":{},"body":{"classes/Settings.html":{}}}],["timetostring(datestr",{"_index":946,"title":{},"body":{"injectables/TimerService.html":{}}}],["timetostring(default_val.start",{"_index":532,"title":{},"body":{"classes/Settings.html":{}}}],["timetostring(default_val.stop",{"_index":535,"title":{},"body":{"classes/Settings.html":{}}}],["timetostring(timestr",{"_index":1000,"title":{},"body":{"miscellaneous/functions.html":{}}}],["timetostring(val",{"_index":541,"title":{},"body":{"classes/Settings.html":{}}}],["title",{"_index":467,"title":{},"body":{"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{}}}],["tmp",{"_index":46,"title":{},"body":{"classes/Alarm.html":{}}}],["tmp[0",{"_index":49,"title":{},"body":{"classes/Alarm.html":{}}}],["tmp[1",{"_index":50,"title":{},"body":{"classes/Alarm.html":{}}}],["today",{"_index":307,"title":{},"body":{"components/HomePage.html":{}}}],["todo",{"_index":276,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["tomorrow",{"_index":478,"title":{},"body":{"injectables/NotificationService.html":{}}}],["tomorrow.tolocalestring",{"_index":497,"title":{},"body":{"injectables/NotificationService.html":{}}}],["top",{"_index":345,"title":{},"body":{"components/HomePage.html":{}}}],["total",{"_index":769,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["totalms",{"_index":770,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["transform",{"_index":347,"title":{},"body":{"components/HomePage.html":{}}}],["translatey",{"_index":348,"title":{},"body":{"components/HomePage.html":{}}}],["translucent",{"_index":327,"title":{},"body":{"components/HomePage.html":{}}}],["tree",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["true",{"_index":328,"title":{},"body":{"components/HomePage.html":{},"guards/HomeResolver.html":{},"classes/Settings.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":28,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":244,"title":{},"body":{"components/HomePage.html":{}}}],["update",{"_index":525,"title":{},"body":{"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{}}}],["updatealaram",{"_index":507,"title":{},"body":{"classes/Settings.html":{}}}],["updatealaram(val",{"_index":522,"title":{},"body":{"classes/Settings.html":{}}}],["updategui",{"_index":228,"title":{},"body":{"components/HomePage.html":{}}}],["url",{"_index":488,"title":{},"body":{"injectables/NotificationService.html":{}}}],["use",{"_index":82,"title":{},"body":{"injectables/AlertService.html":{}}}],["useclass",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":277,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["val",{"_index":381,"title":{},"body":{"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{}}}],["val.detail.value",{"_index":692,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["value",{"_index":13,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.hours.value",{"_index":701,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["value.minutes.value",{"_index":702,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["values",{"_index":620,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["var",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{}}}],["variable",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1015,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":213,"title":{},"body":{"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["wait",{"_index":81,"title":{},"body":{"injectables/AlertService.html":{}}}],["want",{"_index":316,"title":{},"body":{"components/HomePage.html":{}}}],["white",{"_index":379,"title":{},"body":{"components/HomePage.html":{}}}],["width",{"_index":383,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["wooops",{"_index":80,"title":{},"body":{"injectables/AlertService.html":{}}}],["working",{"_index":308,"title":{},"body":{"components/HomePage.html":{}}}],["works",{"_index":214,"title":{},"body":{"components/HistoryComponent.html":{}}}],["x.index",{"_index":567,"title":{},"body":{"classes/Settings.html":{}}}],["year",{"_index":479,"title":{},"body":{"injectables/NotificationService.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["yearmonth",{"_index":757,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["yyyy",{"_index":756,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["zero",{"_index":937,"title":{},"body":{"injectables/TimerService.html":{}}}],["zeroprefix",{"_index":867,"title":{},"body":{"injectables/TimerService.html":{}}}],["zeroprefix(num",{"_index":888,"title":{},"body":{"injectables/TimerService.html":{}}}],["zeros",{"_index":891,"title":{},"body":{"injectables/TimerService.html":{}}}],["zone.js",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Alarm.html":{"url":"classes/Alarm.html","title":"class - Alarm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Alarm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/Alarm.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                duration\n                            \n                            \n                                enabled\n                            \n                            \n                                index\n                            \n                            \n                                key\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHour\n                            \n                            \n                                    Public\n                                hetMinute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string, value: string, index: number, enabled: boolean, duration: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/MODELS/Alarm.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        index\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        enabled\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        duration\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            duration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MODELS/Alarm.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MODELS/Alarm.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            index\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MODELS/Alarm.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MODELS/Alarm.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MODELS/Alarm.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHour\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHour()\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/Alarm.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Alarm hour\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hetMinute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hetMinute()\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/Alarm.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Alarm minutes\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Alarm {\n    // Constructor\n    constructor(\n        key: string = null, \n        value: string = null, \n        index: number = null, \n        enabled: boolean = null, \n        duration: number = null\n    ) {\n        this.key      = key,\n        this.value    = value,\n        this.index    = index,\n        this.enabled  = enabled,\n        this.duration = duration\n    }\n\n    // Properties\n    key: string;\n    value: string;\n    enabled: boolean;\n    index: number;\n    duration?: number;\n\n    /**\n     * \n     * @returns Alarm hour\n     */\n    public getHour() {\n        let tmp = this.value.split(\":\");\n        return tmp[0];\n    };\n\n    /**\n     * \n     * @returns Alarm minutes\n     */\n    public hetMinute() {\n        let tmp = this.value.split(\":\");\n        return tmp[1];\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Alert/alert.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertController\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                presentConfirm\n                            \n                            \n                                    Async\n                                presentConfirmAlert\n                            \n                            \n                                    Async\n                                presentWarningAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Alert/alert.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentConfirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentConfirm(header: any, message: any, cancelText: any, okText: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alert/alert.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    header\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cancelText\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    okText\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentConfirmAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentConfirmAlert(msg: string, subheader: string | null, header: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alert/alert.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Are you sure?'\n                                    \n\n                                    \n                                        message to display\n\n                                    \n                                \n                                \n                                    subheader\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        (optional) subheader to display (Default null)\n\n                                    \n                                \n                                \n                                    header\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'WOOOPS'\n                                    \n\n                                    \n                                        (optional) header to display (Default 'WAIT')\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Use as:\nthis.myservice.presentConfirmAlert('message')\n.then(res => {\nif (res) {\n// codes\n}\n});\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentWarningAlert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentWarningAlert(msg: string, subheader: string | null, header: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alert/alert.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Are you sure?'\n                                    \n\n                                \n                                \n                                    subheader\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    header\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'WOOOPS'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alertController\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlertController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SERVICE/Alert/alert.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(public alertController: AlertController) { }\n\n  /**\n   * \n   * @param msg message to display\n   * @param subheader (optional) subheader to display (Default null)\n   * @param header (optional) header to display (Default 'WAIT')\n   * @returns \n   * Use as:\n   * this.myservice.presentConfirmAlert('message')\n   * .then(res => {\n   *   if (res) {\n   *     // codes\n   *   }\n   * });\n   */\n  async presentConfirmAlert(msg: string = 'Are you sure?', subheader: string | null = null, header: string = 'WOOOPS'): Promise {\n    return new Promise(async (resolve) => {\n      const alert = await this.alertController.create({\n        header: header,\n        subHeader: subheader,\n        message: msg,\n        buttons: [\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: (cancel) => {\n              resolve(false);\n            }\n          }, {\n            text: 'Continue',\n            handler: (ok) => {\n              resolve(true);\n            }\n          }\n        ]\n      });\n      alert.present();\n    });\n  }\n\n\n  async presentWarningAlert(msg: string = 'Are you sure?', subheader: string | null = null, header: string = 'WOOOPS'): Promise {\n    return new Promise(async (resolve) => {\n      const alert = await this.alertController.create({\n        header: header,\n        subHeader: subheader,\n        message: msg,\n        buttons: [\n          {\n            text: 'OK',\n            role: 'cancel',\n            cssClass: 'secondary',\n          }\n        ]\n      });\n      alert.present();\n    });\n  }\n\n  async presentConfirm(header: any, message: any,cancelText: any,okText: any): Promise {\n    return new Promise(async (resolve) => {\n      const alert = await this.alertController.create({\n        header: header,\n        message: message,\n        buttons: [\n          {\n            text: cancelText,\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: (cancel) => {\n              resolve('cancel');\n            }\n          }, {\n            text: okText,\n            handler: (ok) => {\n              resolve('ok');\n            }\n          }\n        ]\n      });\n      alert.present();\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { StorageService } from './SERVICE/Storage/storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n  constructor(private storageService: StorageService) { }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HistoryComponent', 'selector': 'app-history'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'SettingsPopoverComponent', 'selector': 'app-settings-popover'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [\n    BrowserModule, \n    IonicModule.forRoot(), \n    AppRoutingModule\n  ],\n  providers: [{ provide: RouteReuseStrategy, useClass: IonicRouteStrategy }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    loadChildren: () => \"import('./PAGES/home/home.module').then( m => m.HomePageModule)\"\n  },\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoryComponent.html":{"url":"components/HistoryComponent.html","title":"component - HistoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HistoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/COMPONENTS/history/history/history.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-history\n            \n\n            \n                styleUrls\n                ./history.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./history.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/COMPONENTS/history/history/history.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/history/history/history.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.scss'],\n})\nexport class HistoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n\n    \n\n    \n        \n  history works!\n\n\n    \n\n    \n                \n                    ./history.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  history works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HistoryComponent', 'selector': 'app-history'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'SettingsPopoverComponent', 'selector': 'app-settings-popover'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HistoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/PAGES/home/home.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _startStopTxt\n                            \n                            \n                                    Public\n                                alert\n                            \n                            \n                                    Public\n                                alertController\n                            \n                            \n                                    Private\n                                offset\n                            \n                            \n                                    Private\n                                started\n                            \n                            \n                                    Private\n                                stopped\n                            \n                            \n                                    Private\n                                time\n                            \n                            \n                                    Private\n                                timeList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                OnFabTimerClick\n                            \n                            \n                                Reset\n                            \n                            \n                                    Async\n                                showSettings\n                            \n                            \n                                StartStopTimer\n                            \n                            \n                                UpdateGUI\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(timerService: TimerService, popoverController: PopoverController, storageService: StorageService, alertController: AlertController, alert: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/PAGES/home/home.page.ts:24\n                            \n                        \n\n                \n                    \n                            CONSTRUCTOR\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timerService\n                                                  \n                                                        \n                                                                        TimerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverController\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alert\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            OnFabTimerClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    OnFabTimerClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:67\n                \n            \n\n\n            \n                \n                    Start/Stop timer function\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Reset\n                        \n                        \n                    \n                \n            \n            \n                \nReset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:148\n                \n            \n\n\n            \n                \n                    Reset timer and click counter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            showSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:161\n                \n            \n\n\n            \n                \n                    Open Setings pop-up\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            StartStopTimer\n                        \n                        \n                    \n                \n            \n            \n                \nStartStopTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:132\n                \n            \n\n\n            \n                \n                    Sart or Stop timer,\nand increment click counter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            UpdateGUI\n                        \n                        \n                    \n                \n            \n            \n                \nUpdateGUI()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _startStopTxt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : LABELS.START\n                        \n                    \n                        \n                            \n                                    Defined in src/app/PAGES/home/home.page.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alert\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AlertService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/PAGES/home/home.page.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alertController\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlertController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/PAGES/home/home.page.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            offset\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/PAGES/home/home.page.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            started\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/PAGES/home/home.page.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stopped\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/PAGES/home/home.page.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/PAGES/home/home.page.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timeList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimeList\n\n                        \n                    \n                    \n                        \n                            Default value : new TimeList()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/PAGES/home/home.page.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { Component } from '@angular/core';\nimport { AlertController, PopoverController } from '@ionic/angular';\nimport { SettingsPopoverComponent } from 'src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component';\nimport { AlertService } from 'src/app/SERVICE/Alert/alert.service';\nimport { StorageService } from 'src/app/SERVICE/Storage/storage.service';\nimport { TimerService } from 'src/app/SERVICE/Timer/timer.service';\nimport { TimeList, LABELS, DEFAULT_VAL } from '../../MODELS/Interfaces';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n\n\n  private _startStopTxt: string = LABELS.START;\n  private time: string;\n  private stopped: Date[] = [];\n  private started: Date[] = [];\n  private timeList: TimeList = new TimeList();\n  \n  private offset;  // time offset between current time and alarm time\n\n  // private clickCounter: number = 0; // count the number of click on Start/Stop timer button\n\n  /**\n   * CONSTRUCTOR\n   */\n  constructor(\n    private timerService: TimerService,\n    private popoverController: PopoverController,\n    private storageService: StorageService,\n    public alertController: AlertController,\n    public alert: AlertService\n  ) { \n\n    // ToDo\n    // let User manage the offset\n    this.offset = 15;\n\n    // ToDo\n    // recover time lists from timer service\n    // in case of app closed while running\n\n    // this.timerService. ...\n\n    // this.timeList. ...\n\n    \n    this.UpdateGUI();\n\n  }\n\n\n  UpdateGUI() {\n    this._startStopTxt = this.timerService.isRunning() ? LABELS.STOP : LABELS.START;\n  }\n\n\n\n\n  /**\n   * Start/Stop timer function\n   */\n  async OnFabTimerClick() {\n    \n    // check for alarm\n    let alarm = this.storageService.getAlarmByIndex(this.timerService.clickCounter);\n    let currentTime = this.timerService.getCurrentTimeAsIndex();\n\n    if (alarm) {\n\n      let t = this.storageService.getAlarmCount();\n      console.log(t);\n      console.log('click count: ', this.timerService.clickCounter);\n\n\n      let msg = null;\n\n      console.log(\"Alarm: \", alarm);\n      console.log(\"Scheduled: \", alarm.index);\n      console.log(\"Current: \", currentTime);\n      // check if it is too late for today working day\n      if (currentTime > (this.storageService.getLastAlarm().index)) {\n        msg = \"You are out of your working hours!\";\n      }\n\n      if (currentTime  {\n        if (res) {\n          console.log('Confirmed');\n          this.StartStopTimer();\n        } else {\n          console.log('Canceled')\n        }\n      })\n\n\n    } \n    else if (this.timerService.clickCounter == this.storageService.getAlarmCount()) {\n      this.StartStopTimer();\n    }\n    \n    else {\n      // this.StartStopTimer();\n      let subheader = \"You are done for today!\";\n      let msg = \"Do you want to reset timer?\"\n      await this.alert.presentConfirmAlert(msg, subheader)\n      .then( res => {\n        if (res) {\n          console.log('Confirmed');\n          this.Reset();\n        } else {\n          console.log('Canceled')\n        }\n      })\n    }\n  }\n\n\n  /**\n   * Sart or Stop timer,\n   * and increment click counter\n   */\n  StartStopTimer() {\n    if (this.timerService.isRunning()) \n    {\n      this.timerService.stop();\n    } \n    else \n    {\n      this.timerService.start();\n    }\n    this.UpdateGUI();\n    this.timeList = this.timerService.GetTimeList();\n  }\n\n  /**\n   * Reset timer and click counter\n   */\n  Reset() {\n    console.log(\"Resetting...\");\n    this.timerService.reset();\n    this.timeList = this.timerService.GetTimeList();\n    // console.log(this.timeList)\n    // this.clickCounter = 0;\n  }\n\n\n\n  /**\n   * Open Setings pop-up\n   */\n  async showSettings() {\n    const popover = await this.popoverController.create({\n      component: SettingsPopoverComponent,\n      translucent: true\n    });\n    await popover.present();\n    const { role } = await popover.onDidDismiss();\n    console.log('onDidDismiss resolved with role', role);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      EchoTimer\n    \n    \n    \n      \n              \n      \n    \n  \n\n\n\n\n  \n\n    \n\n      \n      {{timerService.GetTime()}}\n\n      \n\n        \n          \n            Start\n          \n          \n            {{time | date : 'HH:mm'}}\n          \n        \n        \n        \n          \n            Stop\n          \n          \n              {{time | date : 'HH:mm'}}\n          \n        \n\n        \n          \n            Partial\n          \n          \n              {{time}}\n          \n        \n\n\n      \n\n    \n\n    \n    \n      \n        \n          {{_startStopTxt}}\n        \n      \n    \n      \n    \n    \n      Reset\n    \n\n  \n    \n\n  \n    \n\n    \n                \n                    home.page.scss\n                \n                #container {\n  text-align: center;\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n#container strong {\n  font-size: 20px;\n  line-height: 26px;\n}\n\n#container p {\n  font-size: 16px;\n  line-height: 22px;\n\n  color: #8c8c8c;\n\n  margin: 0;\n}\n\n#container a {\n  text-decoration: none;\n}\n\nion-header{\n  ion-icon{\n    font-size: 2rem;\n  }\n}\n\n.appContainer{\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  height: 100%;\n  .timeContainer{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 40%;\n    .time{\n      color: white;\n      font-size:2rem; // default val\n    }\n    @media(min-width: 350px) //if more than 350 px\n    {\n      .time{\n        font-size:3rem;\n      }\n    }\n    @media(min-width: 500px) //if more than 500 px\n    {\n      .time{\n        font-size:4rem;\n      }\n    }\n    @media(min-width: 600px) //if more than 600 px\n    {\n      .time{\n        font-size:5rem;\n      }\n    }\n    @media(min-width: 850px) //if more than 850 px\n    {\n      .time{\n        font-size:7rem;\n      }\n    }\n    .timeListContainer{\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n      height: 50%;\n      width: 100%;\n      // background-color: rgba(66, 65, 65, 0.795);\n      .timesList{\n        display: flex;\n        flex-direction: column;\n        // flex-grow: 1;\n        width: 50%;\n        overflow: hidden;\n        // background-color: rgba(48, 45, 45, 0.795);\n        .timesText{\n          margin: 0.5rem 1rem;\n        }\n      }\n      .left{\n        // background-color: rgba(51, 36, 36, 0.795);\n        align-items: flex-end;\n      }\n    }\n  }\n  \n  .fabContainer{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    height: 50%;\n    .timerFab{\n      width: 50vw;\n      height: 50vw;\n      .timerFabTxt{\n        font-size:2rem; // default val\n      }\n      @media(min-width: 350px) //if more than 350 px\n      {\n        .timerFabTxt{\n          font-size:3rem;\n        }\n      }\n      @media(min-width: 500px) //if more than 500 px\n      {\n        .timerFabTxt{\n          font-size:4rem;\n        }\n      }\n      @media(min-width: 600px) //if more than 600 px\n      {\n        .timerFabTxt{\n          font-size:5rem;\n        }\n      }\n      @media(min-width: 850px) //if more than 850 px\n      {\n        .timerFabTxt{\n          font-size:7rem;\n        }\n      }\n    }\n  }\n\n  .resetButtonContainer{\n    height: 10%;\n    ion-button {\n      height: 100%;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                EchoTimer                                                              {{timerService.GetTime()}}                                    Start                                {{time | date : \\'HH:mm\\'}}                                                        Stop                                  {{time | date : \\'HH:mm\\'}}                                                Partial                                  {{time}}                                                            {{_startStopTxt}}                                      Reset            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HistoryComponent', 'selector': 'app-history'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'SettingsPopoverComponent', 'selector': 'app-settings-popover'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nSettingsPopoverComponent\n\nSettingsPopoverComponent\n\nHomePageModule -->\n\nSettingsPopoverComponent->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/PAGES/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                        \n                            SettingsPopoverComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { SettingsPopoverComponent } from 'src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule\n  ],\n  declarations: [\n    HomePage,\n    SettingsPopoverComponent]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageRoutingModule\n\n\n\ncluster_HomePageRoutingModule_providers\n\n\n\n\nTimerService\n\nTimerService\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageRoutingModule -->\n\nTimerService->HomePageRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/PAGES/home/home-routing.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TimerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TimerService } from 'src/app/SERVICE/Timer/timer.service';\nimport { HomePage } from './home.page';\nimport { HomeResolver } from './home.resolve';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n    resolve: {\n      bool: HomeResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    TimerService,\n    HomeResolver]\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/HomeResolver.html":{"url":"guards/HomeResolver.html","title":"guard - HomeResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    HomeResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/PAGES/home/home.resolve.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/PAGES/home/home.resolve.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.resolve.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from \"@angular/router\";\nimport { Platform } from \"@ionic/angular\";\n\n@Injectable()\nexport class HomeResolver implements Resolve {\n\n    constructor(\n        private platform: Platform,\n        private router: Router\n    ) { }\n\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {        \n        this.platform.ready()\n        .then(res => {\n            if (res) {\n                console.log('Platform ready')\n                return true\n            }\n        })\n    }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Notification/notification.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                notification\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Notification/notification.service.ts:10\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            notification\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LocalNotification\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SERVICE/Notification/notification.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LocalNotification, Plugins } from '@capacitor/core';\nconst { LocalNotifications } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  private notification: LocalNotification;\n\n  constructor() { }\n\n\n  /*\n\n  async addLocalNotification() {\n\n    this.notification = {\n      title: \"aaaa\",\n      body: `You open this ${test}`,\n      id: photo.id,\n      smallIcon: 'house',\n      actionTypeId: 'OPEN_PRODUCT',\n      schedule: {\n        at: tomorrow,\n        every: \"day\",\n        // on: \t{ year: year, month: month, day: day, hour: hh, minute: mm },\n        repeats: photo.reminders[0].repeat\n      },\n      attachments: [{id: photo.id.toString(), url: photo.webviewPath}],\n      extra: {\n        timeStamp: photo.timeStamp\n      }\n    };\n\n    console.log(\"Adding notification...\", this.notification);\n\n    await LocalNotifications.schedule({\n      notifications: [\n        this.notification\n      ]\n    });\n    \n    let d = tomorrow.toLocaleString();\n    let msg = 'Added notification at ' + d;\n    msg = msg.substring(0, msg.length - 3);\n    this.presentToast(msg);\n  }\n\n\n\n  */\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Settings.html":{"url":"classes/Settings.html","title":"class - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/Settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alarms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAlarm\n                            \n                            \n                                deleteAlarm\n                            \n                            \n                                updateAlaram\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/MODELS/Settings.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            alarms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Alarm[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MODELS/Settings.ts:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addAlarm\n                        \n                        \n                    \n                \n            \n            \n                \naddAlarm(alarmValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/Settings.ts:49\n                \n            \n\n\n            \n                \n                    Add a nex alarm to the alarm array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alarmValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nstring \"hh:mm\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { succeded: boolean; msg: string; }\n\n                    \n                    \n                        Object {succeded: boolean, msg: string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAlarm\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAlarm(alarm: Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/Settings.ts:94\n                \n            \n\n\n            \n                \n                    Delete a specific alarm from alarms array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                                Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        alarm to delete (type Alarm)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { succeded: boolean; msg: string; }\n\n                    \n                    \n                        Object {succeded: boolean, msg: string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAlaram\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAlaram(val: string, idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/Settings.ts:39\n                \n            \n\n\n            \n                \n                    Update Alarm by positional index\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string\n\n                                    \n                                \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        number\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { timeToString } from \"../COMMON/Utility\";\nimport { Alarm } from \"./Alarm\";\nimport { LABELS, DEFAULT_VAL } from \"./Interfaces\";\n\nexport class Settings {\n    \n    \n    constructor() {\n        \n        const start = new Alarm(LABELS.START, DEFAULT_VAL.START, timeToString(DEFAULT_VAL.START), true);\n        const end = new Alarm(LABELS.STOP, DEFAULT_VAL.STOP, timeToString(DEFAULT_VAL.STOP), true);\n\n\n        this.alarms = [\n            // {\n            //     key: LABELS.START,\n            //     value: DEFAULT_VAL.START,\n            //     index: timeToString(DEFAULT_VAL.START),\n            //     enabled: true\n            // },\n            // {\n            //     key: LABELS.STOP,\n            //     value: DEFAULT_VAL.STOP,\n            //     index: timeToString(DEFAULT_VAL.STOP),\n            //     enabled: true\n            // }\n        ]\n        this.alarms.push(start);\n        this.alarms.push(end);\n    };\n\n    alarms?: Alarm[];\n\n    /**\n     * Update Alarm by positional index\n     * @param val string\n     * @param idx number\n     */\n    updateAlaram(val: string, idx: number) {\n        this.alarms[idx].value = val;\n        this.alarms[idx].index = timeToString(val);\n    };\n\n    /**\n     * Add a nex alarm to the alarm array\n     * @param alarmValue - string \"hh:mm\"\n     * @returns Object {succeded: boolean, msg: string}\n     */\n    addAlarm(alarmValue: string) {\n        // aggiungo l'elemento alla fine e poi riordino l'array\n        // const idx = this.alarms.length;\n        // create pause element\n\n        // const pause: Alarm = {\n        //     key: LABELS.PAUSE,\n        //     value: alarmValue,\n        //     index: timeToString(alarmValue),\n        //     enabled: false\n        // }\n        const pause = new Alarm(LABELS.PAUSE, alarmValue, timeToString(alarmValue), false);\n\n        console.log(pause);\n        // ChecK if out of range\n        if (pause.index  this.alarms[this.alarms.length - 1].index) {\n            let msg = 'PAUSE OUT OF RANGE!';\n            console.log(msg);\n            return {succeded: false, msg: msg};\n        }\n        // check if there is an alarm with the same index\n        //     => same starting time\n        var existingAlarm = this.alarms.filter(x => x.index == pause.index);\n        if (existingAlarm.length > 0) {\n            return {succeded: false, msg:'A PAUSE at the same time ALREADY EXISTS!'};;\n        }\n        // push the new alarm\n        this.alarms.push(pause);\n        // reorder the alarm array\n        this.alarms.sort((a, b) => {\n            if (a.index && b.index) {\n                if (a.index > b.index) return 1;\n                if (a.index  x.index == alarm.index);\n        // var f = this.alarms.find(x => x.index == alarm.index);\n        for (var idx = this.alarms.length - 1; idx >= 0; --idx) {\n            if (this.alarms[idx].index == alarm.index) {\n                this.alarms.splice(idx,1);\n                return {succeded: true, msg:'Alarm deleted'};\n            }\n        }\n        return {succeded: false, msg:'Alarm not deleted'};\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsPopoverComponent.html":{"url":"components/SettingsPopoverComponent.html","title":"component - SettingsPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsPopoverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-popover\n            \n\n            \n                styleUrls\n                ./settings-popover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-popover.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alert\n                            \n                            \n                                    Public\n                                alertController\n                            \n                            \n                                    Private\n                                customPickerOptions\n                            \n                            \n                                hours\n                            \n                            \n                                minutes\n                            \n                            \n                                    Private\n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddPause\n                            \n                            \n                                    Async\n                                Cancel\n                            \n                            \n                                DeletePause\n                            \n                            \n                                    Async\n                                DismissClick\n                            \n                            \n                                getHoursOptions\n                            \n                            \n                                getMinutesOptions\n                            \n                            \n                                    Async\n                                loadSettings\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTimeChange\n                            \n                            \n                                Save\n                            \n                            \n                                    Async\n                                showAlarmPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popoverController: PopoverController, storageService: StorageService, pickerController: PickerController, alertController: AlertController, alert: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popoverController\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pickerController\n                                                  \n                                                        \n                                                                    PickerController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alert\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            AddPause\n                        \n                        \n                    \n                \n            \n            \n                \nAddPause(alarm: Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:71\n                \n            \n\n\n            \n                \n                    Add a pause to the time array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                                Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            Cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:61\n                \n            \n\n\n            \n                \n                    Calcel the current temporary user settings and reload stored settings\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            DeletePause\n                        \n                        \n                    \n                \n            \n            \n                \nDeletePause(alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:80\n                \n            \n\n\n            \n                \n                    Delete pause\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alarm\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            DismissClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    DismissClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:109\n                \n            \n\n\n            \n                \n                    Dismiss settings pop-over\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHoursOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetHoursOptions(alarm: Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                                Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMinutesOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetMinutesOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:88\n                \n            \n\n\n            \n                \n                    Load User Settings\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onTimeChange\n                        \n                        \n                    \n                \n            \n            \n                \nonTimeChange(val, idx)\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:97\n                \n            \n\n\n            \n                \n                    Update time values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    val\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : string (HH:mm)\n\n                                    \n                                \n                                \n                                    idx\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : index of the Alarms array to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Save\n                        \n                        \n                    \n                \n            \n            \n                \nSave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:52\n                \n            \n\n\n            \n                \n                    Save new settings on the local storage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            showAlarmPicker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showAlarmPicker(alarm: Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                                Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alert\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AlertService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alertController\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlertController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            customPickerOptions\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hours\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n      \"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \n      \"12\", \"13\", \"14\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n      \"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \n      \"12\", \"13\", \"14\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\",\n      \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\",\n      \"37\", \"38\", \"39\", \"40\"\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Settings\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlertController, PickerController, PopoverController } from '@ionic/angular';\nimport { Alarm } from 'src/app/MODELS/Alarm';\nimport { StorageService } from 'src/app/SERVICE/Storage/storage.service';\nimport { PickerOptions } from \"@ionic/core\";\nimport { Settings } from 'src/app/MODELS/Settings';\nimport { AlertService } from 'src/app/SERVICE/Alert/alert.service';\n\n@Component({\n  selector: 'app-settings-popover',\n  templateUrl: './settings-popover.component.html',\n  styleUrls: ['./settings-popover.component.scss'],\n})\nexport class SettingsPopoverComponent implements OnInit {\n\n  private customPickerOptions; \n  private settings: Settings;\n\n\n  hours: string[] = \n    [\n      \"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \n      \"12\", \"13\", \"14\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"\n    ];\n\n  minutes: string[] = \n    [\n      \"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \n      \"12\", \"13\", \"14\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\",\n      \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\",\n      \"37\", \"38\", \"39\", \"40\"\n    ];\n\n\n  constructor(\n    private popoverController: PopoverController,\n    private storageService: StorageService,\n    private pickerController: PickerController,\n    public alertController: AlertController,\n    public alert: AlertService\n  ) {}\n\n  ngOnInit() {\n    console.log(\"Loading settings...\")\n    this.loadSettings();\n    console.log(this.settings)\n  }\n\n  /**\n   * Save new settings on the local storage\n   */\n  Save() {\n    console.log(\"Saving settings...\")\n    this.storageService.SaveSettings(this.settings);\n    this.DismissClick();\n  }\n  \n  /**\n   * Calcel the current temporary user settings and reload stored settings\n   */\n  async Cancel() {\n    console.log(\"Cancel\")\n    this.settings = await this.storageService.getStoredSettings();\n    this.DismissClick();\n  }\n\n\n  /**\n   * Add a pause to the time array\n   */\n  AddPause(alarm: Alarm = null) {\n    console.log(\"Selected alarm: \", alarm);\n    this.showAlarmPicker(alarm);\n  }\n\n  /**\n   * Delete pause\n   * @param alarm \n   */\n  DeletePause(alarm) {\n    console.log(alarm);\n    this.settings.deleteAlarm(alarm);\n  }\n\n  /**\n   * Load User Settings\n   */\n  async loadSettings() {\n    this.settings = this.storageService.getSettings();\n  }\n\n  /**\n   * Update time values\n   * @param val : string (HH:mm)\n   * @param idx : index of the Alarms array to update\n   */\n   onTimeChange(val, idx) {\n    // let copy = Object.assign({}, original );\n    // this.tmpSettings.alarms = Object.assign([], this.settings.alarms); //{...this.settings};\n    let time = val.detail.value;\n    this.settings.updateAlaram(time, idx);\n    console.log(this.settings.alarms);\n  }\n\n\n  /**\n   * Dismiss settings pop-over\n   */\n  async DismissClick() {\n    await this.popoverController.dismiss();\n  }\n\n\n\n\n\n  async showAlarmPicker(alarm: Alarm = null) {\n    let options: PickerOptions = {\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: 'cancel'\n        },\n        {\n          text:'Ok',\n          handler:(value:any) => {\n            // console.log(value);\n            var str: string = value.hours.value + ':' + value.minutes.value;\n            let res = this.settings.addAlarm(str);\n\n            if (res.succeded == false) {\n\n            }\n            this.alert.presentWarningAlert(res.msg);\n            \n          }\n        }\n      ],\n      columns:[{\n        name:'hours',\n        prefix:'H',\n        options:this.getHoursOptions(alarm)\n      }, {\n        name:'minutes',\n        prefix:'m',\n        options:this.getMinutesOptions()\n      }, {\n        name:'duration',\n        prefix:'duration',\n        options: this.getMinutesOptions()\n      }],\n      // ToDo - non funziona\n      // cssClass : 'pickerClassName'\n    };\n    let picker = await this.pickerController.create(options);\n    picker.present()\n  }\n\n\n  getHoursOptions(alarm: Alarm = null){\n    console.log('Getting hours...');\n    let options = [];\n    this.hours.forEach(x => {\n      let obj = {text:x,value:x};\n      if (alarm != null) {\n        let h = alarm.getHour();\n      }\n      options.push(obj);\n    });\n    return options;\n  }\n\n  getMinutesOptions(){\n    let options = [];\n    this.minutes.forEach(x => {\n      options.push({text:x,value:x});\n    });\n    return options;\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n  \n    Settings\n  \n  \n  \n    \n    \n    \n      {{alarm.key}}\n      \n      \n    \n    \n    \n    \n      \n        \n          \n            \n              \n                {{alarm.key}}\n              \n              \n                {{alarm.value}}\n              \n            \n            \n          \n        \n      \n      \n      \n        Delete\n      \n    \n    \n  \n\n\n\n  \n  \n    \n      Add pause\n    \n  \n\n  \n  \n    \n      Cancel\n      OK\n    \n  \n\n\n    \n\n    \n                \n                    ./settings-popover.component.scss\n                \n                \n.settingsContainer{\n\n    // background-color: rgb(20, 20, 20);\n    background-color: var(--ion-item-background, var(--ion-background-color, #fff));\n\n    .title{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: 1rem;\n    }\n    \n    .buttonsContainer{\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        ion-buttons{\n            width: 100%;\n            ion-button{\n                width: 50%;\n                min-height: 3rem;\n            }\n        }\n    }\n\n\n    .addAlarmContainer {\n        min-height: 2rem;\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        ion-item {\n            width: 100%;\n            --inner-padding-end: 0px;\n            --padding-start: 0px;\n        }\n        ion-buttons{\n            width: 100%;\n            ion-button{\n                width: 100%;\n                min-height: 3rem;\n            }\n        }\n    }\n\n    .alarm {\n        display: flex;\n        width: 100%;\n        justify-content: space-between;\n        padding: 1px 6px;\n    }\n\n    .pickerClassName {\n        color: greenyellow;\n        background-color: honeydew;\n    }\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Settings                        {{alarm.key}}                                                                                              {{alarm.key}}                                            {{alarm.value}}                                                                                  Delete                              Add pause                    Cancel      OK      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HistoryComponent', 'selector': 'app-history'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'SettingsPopoverComponent', 'selector': 'app-settings-popover'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Status.html":{"url":"interfaces/Status.html","title":"interface - Status","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Status\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/Interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clickCounter\n                                \n                                \n                                        isRunning\n                                \n                                \n                                        timeList\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clickCounter\n                                    \n                                \n                                \n                                    \n                                        clickCounter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRunning\n                                    \n                                \n                                \n                                    \n                                        isRunning:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeList\n                                    \n                                \n                                \n                                    \n                                        timeList:         TimeList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimeList\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum LABELS {\n    START  = \"IN\",\n    STOP   = \"OUT\",\n    PAUSE  = \"PAUSE\"\n}\n\nexport enum DEFAULT_VAL {\n    START  = \"08:30\",\n    STOP   = \"18:00\",\n}\n\nexport enum DateFormat {\n    Year = \"YYYY\",\n    YearMonth =\t\"YYYY-MM\",\n    HourMinute = \"HH:mm\",\n    HourMinuteSeconds = \"HH:mm:ss\"\n}\n\nexport enum SETTINGS {\n    ALARMS = \"Alarms\"\n}\n\nexport class TimeList {\n    constructor() {\n        this.start = [];\n        this.stop = [];\n        this.diff = [];\n        this.diffms = [];\n        this.total = null;\n        this.totalms = 0;\n    };\n    start?: Date[];\n    stop?: Date[];\n    diff?: string[];\n    diffms?: number[];\n    total?: string;\n    totalms?: number;\n}\n\n\n\n\n\nexport interface Status {\n    isRunning: boolean,\n    timeList: TimeList,\n    clickCounter: number\n}\n\n\n\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Storage/storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                settings\n                            \n                            \n                                    Private\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarmByIndex\n                            \n                            \n                                getAlarmCount\n                            \n                            \n                                getAlarms\n                            \n                            \n                                getLastAlarm\n                            \n                            \n                                getSettings\n                            \n                            \n                                getStatus\n                            \n                            \n                                    Async\n                                getStoredSettings\n                            \n                            \n                                    Async\n                                getStoredStatus\n                            \n                            \n                                    Async\n                                initializeSettings\n                            \n                            \n                                    Async\n                                initializeStatus\n                            \n                            \n                                loadDefaultSettings\n                            \n                            \n                                SaveSettings\n                            \n                            \n                                SaveStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Storage/storage.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAlarmByIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetAlarmByIndex(idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:145\n                \n            \n\n\n            \n                \n                    Get alarm by index\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index of the alarm in the alarms array\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        alarm at index posistion\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAlarmCount\n                        \n                        \n                    \n                \n            \n            \n                \ngetAlarmCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        alarms number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAlarms\n                        \n                        \n                    \n                \n            \n            \n                \ngetAlarms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Alarms array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLastAlarm\n                        \n                        \n                    \n                \n            \n            \n                \ngetLastAlarm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the last alarm in the alarms array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSettings\n                        \n                        \n                    \n                \n            \n            \n                \ngetSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        current settings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStatus\n                        \n                        \n                    \n                \n            \n            \n                \ngetStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        current status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getStoredSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStoredSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:91\n                \n            \n\n\n            \n                \n                    Return the stored settings from the device local storage\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getStoredStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStoredStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:107\n                \n            \n\n\n            \n                \n                    Return the stored status from the device local storage or null\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            initializeSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:26\n                \n            \n\n\n            \n                \n                    Read Setting from local storage or initialize the defailt setting\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            initializeStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:44\n                \n            \n\n\n            \n                \n                    Read status from local storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadDefaultSettings\n                        \n                        \n                    \n                \n            \n            \n                \nloadDefaultSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:51\n                \n            \n\n\n            \n                \n                    Instantiate a new Settings class with the default values\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            SaveSettings\n                        \n                        \n                    \n                \n            \n            \n                \nSaveSettings(settings: Settings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:62\n                \n            \n\n\n            \n                \n                    Save settings on the local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                                Settings\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            SaveStatus\n                        \n                        \n                    \n                \n            \n            \n                \nSaveStatus(status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:76\n                \n            \n\n\n            \n                \n                    Save status on the local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Settings\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SERVICE/Storage/storage.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Status\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SERVICE/Storage/storage.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Plugins } from '@capacitor/core';\nimport { Platform } from '@ionic/angular';\nimport { SETTINGS, Status } from 'src/app/MODELS/Interfaces';\nimport { KEYS } from 'src/app/MODELS/Keys';\nimport { Settings } from 'src/app/MODELS/Settings';\nconst { Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n  \n  private settings: Settings;\n  private status: Status;\n  \n  constructor(private platform: Platform) {\n    this.initializeSettings();\n    this.initializeStatus();\n  }\n  \n  \n  /**\n  * Read Setting from local storage or initialize the defailt setting\n  */\n  async initializeSettings() {\n    console.log(\"Initialising settings...\");\n    this.loadDefaultSettings();\n    await this.platform.ready();\n    // Fetch ALARMS\n    const alarms = await Storage.get({key: SETTINGS.ALARMS});\n    if (alarms?.value != null) {\n      this.settings.alarms = JSON.parse(alarms.value);\n    } else {\n      this.SaveSettings(this.settings);\n    }\n    console.log(\"Settings: \", this.settings);\n  }\n  \n  \n  /**\n  * Read status from local storage\n  */\n  async initializeStatus() {\n    this.status = await this.getStoredStatus();\n  }\n  \n  /**\n  * Instantiate a new Settings class with the default values\n  */\n  loadDefaultSettings() {\n    this.settings = new Settings();\n  }\n  \n  \n  //#region ------------- Saving on local storage methods --------------------------\n  \n  /**\n  * Save settings on the local storage\n  * @param {Settings} settings\n  */\n  SaveSettings(settings: Settings) {\n    console.log(\"Saving settings to storage...\");\n    let alarmsJSON = JSON.stringify(this.settings.alarms);\n    console.log(alarmsJSON);\n    Storage.set({\n      key: SETTINGS.ALARMS,\n      value: alarmsJSON\n    });\n  }\n  \n  /**\n  * Save status on the local storage\n  * @param {Status} status\n  */\n  SaveStatus(status: Status) {\n    let statusJSON: string = JSON.stringify(status);\n    console.log(\"Saving status to storage...\");\n    Storage.set({\n      key: KEYS.STATUS,\n      value: statusJSON\n    });\n  }\n  \n  //#endregion \n  \n  \n  /**\n  * Return the stored settings from the device local storage\n  */\n  async getStoredSettings() {\n    console.log(\"Retrieving settings from storage...\");\n    // Fetch ALARMS\n    const res = await Storage.get({key: SETTINGS.ALARMS});\n    if (res.value != null) {\n      this.settings.alarms = JSON.parse(res.value);\n      console.log(\"Settings: \", this.settings)\n      return this.settings\n    }\n    return null;\n  }\n  \n  /**\n  * Return the stored status from the device local storage or null\n  * @returns \n  */\n  async getStoredStatus() {\n    console.log(\"Retrieving status from storage...\");\n    const res = await Storage.get({key: KEYS.STATUS});\n    if (res.value != null) {\n      this.status = JSON.parse(res.value);\n      console.log(\"Status: \", this.status);\n      return this.status\n    }\n    return null;\n  }\n  \n  \n  /**\n  * @returns {Settings} current settings\n  */\n  getSettings() {\n    return this.settings;\n  }\n  \n  /**\n   * @returns {Status} current status\n   */\n  getStatus() {\n    return this.status;\n  }\n  \n  /**\n  * @returns Alarms array\n  */\n  getAlarms() {\n    return this.settings.alarms;\n  }\n  \n  /**\n  * Get alarm by index\n  * @param idx index of the alarm in the alarms array\n  * @returns alarm at index posistion\n  */\n  getAlarmByIndex(idx: number) {\n    return this.settings.alarms[idx];\n  }\n  \n  /**\n  * @returns the last alarm in the alarms array\n  */\n  getLastAlarm() {\n    let end = this.settings.alarms.length - 1;\n    return this.settings.alarms[end];\n  }\n\n  /**\n   * \n   * @returns alarms number\n   */\n  getAlarmCount() {\n    console.log(this.settings.alarms.length);\n    return this.settings.alarms.length;\n  }\n  \n  \n  \n  \n  \n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeList.html":{"url":"classes/TimeList.html","title":"class - TimeList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/Interfaces.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                diff\n                            \n                            \n                                    Optional\n                                diffms\n                            \n                            \n                                    Optional\n                                start\n                            \n                            \n                                    Optional\n                                stop\n                            \n                            \n                                    Optional\n                                total\n                            \n                            \n                                    Optional\n                                totalms\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/MODELS/Interfaces.ts:23\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            diff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MODELS/Interfaces.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            diffms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MODELS/Interfaces.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MODELS/Interfaces.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MODELS/Interfaces.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            total\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MODELS/Interfaces.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            totalms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/MODELS/Interfaces.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum LABELS {\n    START  = \"IN\",\n    STOP   = \"OUT\",\n    PAUSE  = \"PAUSE\"\n}\n\nexport enum DEFAULT_VAL {\n    START  = \"08:30\",\n    STOP   = \"18:00\",\n}\n\nexport enum DateFormat {\n    Year = \"YYYY\",\n    YearMonth =\t\"YYYY-MM\",\n    HourMinute = \"HH:mm\",\n    HourMinuteSeconds = \"HH:mm:ss\"\n}\n\nexport enum SETTINGS {\n    ALARMS = \"Alarms\"\n}\n\nexport class TimeList {\n    constructor() {\n        this.start = [];\n        this.stop = [];\n        this.diff = [];\n        this.diffms = [];\n        this.total = null;\n        this.totalms = 0;\n    };\n    start?: Date[];\n    stop?: Date[];\n    diff?: string[];\n    diffms?: number[];\n    total?: string;\n    totalms?: number;\n}\n\n\n\n\n\nexport interface Status {\n    isRunning: boolean,\n    timeList: TimeList,\n    clickCounter: number\n}\n\n\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimerService.html":{"url":"injectables/TimerService.html","title":"injectable - TimerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Timer/timer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                blankTime\n                            \n                            \n                                    Public\n                                clickCounter\n                            \n                            \n                                    Public\n                                platform\n                            \n                            \n                                    Private\n                                running\n                            \n                            \n                                    Public\n                                started\n                            \n                            \n                                    Public\n                                startedList\n                            \n                            \n                                    Public\n                                stoppedDuration\n                            \n                            \n                                    Public\n                                stoppedList\n                            \n                            \n                                    Public\n                                storageService\n                            \n                            \n                                    Public\n                                time\n                            \n                            \n                                    Public\n                                timeBegan\n                            \n                            \n                                    Public\n                                timeList\n                            \n                            \n                                    Public\n                                timeStopped\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcDiff\n                            \n                            \n                                clockRunning\n                            \n                            \n                                getCurrentTimeAsIndex\n                            \n                            \n                                GetStartedTimes\n                            \n                            \n                                GetStoppedTimes\n                            \n                            \n                                GetTime\n                            \n                            \n                                GetTimeList\n                            \n                            \n                                isRunning\n                            \n                            \n                                onPause\n                            \n                            \n                                reset\n                            \n                            \n                                start\n                            \n                            \n                                stop\n                            \n                            \n                                zeroPrefix\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calcDiff\n                        \n                        \n                    \n                \n            \n            \n                \ncalcDiff()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:125\n                \n            \n\n\n            \n                \n                    Calc difference between Start Date and End Date\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clockRunning\n                        \n                        \n                    \n                \n            \n            \n                \nclockRunning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentTimeAsIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentTimeAsIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:185\n                \n            \n\n\n            \n                \n                    Get the current hour and minutes as number (ex. 13:15 => 1315)\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            GetStartedTimes\n                        \n                        \n                    \n                \n            \n            \n                \nGetStartedTimes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            GetStoppedTimes\n                        \n                        \n                    \n                \n            \n            \n                \nGetStoppedTimes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            GetTime\n                        \n                        \n                    \n                \n            \n            \n                \nGetTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            GetTimeList\n                        \n                        \n                    \n                \n            \n            \n                \nGetTimeList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isRunning\n                        \n                        \n                    \n                \n            \n            \n                \nisRunning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:197\n                \n            \n\n\n            \n                \n                    Return true if timer is running\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPause\n                        \n                        \n                    \n                \n            \n            \n                \nonPause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:204\n                \n            \n\n\n            \n                \n                    Save the current status to local storage on platform.pause event\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:83\n                \n            \n\n\n            \n                \n                    Reset timer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            start\n                        \n                        \n                    \n                \n            \n            \n                \nstart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:52\n                \n            \n\n\n            \n                \n                    Start timer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:71\n                \n            \n\n\n            \n                \n                    Stop timer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            zeroPrefix\n                        \n                        \n                    \n                \n            \n            \n                \nzeroPrefix(num, digit)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:100\n                \n            \n\n\n            \n                \n                    Add digit-1 zeros at the begin of the number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    num\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    digit\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        number of zeros\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            blankTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"00:00.00\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SERVICE/Timer/timer.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clickCounter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SERVICE/Timer/timer.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Platform\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SERVICE/Timer/timer.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            running\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SERVICE/Timer/timer.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            started\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SERVICE/Timer/timer.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SERVICE/Timer/timer.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stoppedDuration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SERVICE/Timer/timer.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stoppedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SERVICE/Timer/timer.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StorageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SERVICE/Timer/timer.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"00:00.00\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SERVICE/Timer/timer.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeBegan\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SERVICE/Timer/timer.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimeList\n\n                        \n                    \n                    \n                        \n                            Default value : new TimeList\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SERVICE/Timer/timer.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeStopped\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SERVICE/Timer/timer.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { timeToString } from 'src/app/COMMON/Utility';\nimport { Status, TimeList } from 'src/app/MODELS/Interfaces';\nimport { StorageService } from '../Storage/storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimerService {\n\n\n  private running = false\n\n  public timeBegan = null\n  public timeStopped:any = null\n  public stoppedDuration:any = 0\n  public started = null\n  public blankTime = \"00:00.00\"\n  public time: string = \"00:00.00\"\n  public timeList: TimeList = new TimeList;\n  public stoppedList: Date[] = [];\n  public startedList: Date[] = [];\n\n  public clickCounter: number = 0;\n\n  constructor(\n    public platform: Platform,\n    public storageService: StorageService\n  ) { \n    // subscribe to on pause event\n    this.onPause();\n    // this.onResume();\n    var savedStatus: Status = this.storageService.getStatus();\n    console.log(\"Saved status: \", savedStatus);\n\n    if (savedStatus?.isRunning) {\n\n      this.running = true;\n      this.timeList = savedStatus.timeList;\n      this.timeBegan = this.timeList.start[0];\n      this.timeStopped = this.timeList.stop[this.timeList.stop.length];\n      this.clickCounter = savedStatus.clickCounter;\n    }\n\n  }\n\n\n  /**\n   * Start timer\n   */\n  start() {\n    if(this.running) return;\n    if (this.timeBegan === null) {\n        this.reset();\n        this.timeBegan = new Date();\n    }\n    if (this.timeStopped !== null) {\n      let newStoppedDuration:any = (+new Date() - this.timeStopped)\n      this.stoppedDuration = this.stoppedDuration + newStoppedDuration;\n    }\n    this.timeList.start.push(new Date());\n    this.started = setInterval(this.clockRunning.bind(this), 10);\n    this.running = true;\n    this.clickCounter++;\n  }\n    \n  /**\n   * Stop timer\n   */\n  stop() {\n    this.running = false;\n    this.timeStopped = new Date();\n    this.timeList.stop.push(this.timeStopped);\n    this.calcDiff();\n    clearInterval(this.started);\n    // this.clickCounter++;\n  }\n  \n  /**\n   * Reset timer\n   */\n  reset() {\n      this.running = false;\n      clearInterval(this.started);\n      this.stoppedDuration = 0;\n      this.timeBegan = null;\n      this.timeStopped = null;\n      this.time = this.blankTime;\n      this.timeList = new TimeList;\n      this.clickCounter = 0;\n  }\n  \n  /**\n   * Add digit-1 zeros at the begin of the number\n   * @param num \n   * @param digit number of zeros\n   * @returns \n   */\n  zeroPrefix(num, digit) {\n    let zero = '';\n    for(let i = 0; i  1315)\n   */\n   getCurrentTimeAsIndex() {\n    let current = new Date();\n    let hour = current.getHours()\n    let min = current.getMinutes()\n    let dateStr = this.zeroPrefix(hour, 2) + \":\" + this.zeroPrefix(min, 2);\n    let dateIdx = timeToString(dateStr);\n    return dateIdx;\n  }\n\n  /**\n   * Return true if timer is running\n   */\n  isRunning(): boolean {\n    return this.running;\n  }\n\n  /**\n   * Save the current status to local storage on platform.pause event\n   */\n  onPause() {\n    this.platform.pause.subscribe(async () => {\n      var status: Status = {\n        isRunning : this.running, \n        timeList: this.timeList,\n        clickCounter: this.clickCounter\n      };   \n      this.storageService.SaveStatus(status);\n    })\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/COMMON/Utility.ts\n            \n            function\n            timeToString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/COMPONENTS/history/history/history.component.ts\n            \n            component\n            HistoryComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts\n            \n            component\n            SettingsPopoverComponent\n            \n                36 %\n                (7/19)\n            \n        \n        \n            \n                \n                src/app/MODELS/Alarm.ts\n            \n            class\n            Alarm\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/MODELS/Interfaces.ts\n            \n            class\n            TimeList\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/MODELS/Interfaces.ts\n            \n            interface\n            Status\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/MODELS/Settings.ts\n            \n            class\n            Settings\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/PAGES/home/home.page.ts\n            \n            component\n            HomePage\n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                src/app/PAGES/home/home.resolve.ts\n            \n            guard\n            HomeResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Alert/alert.service.ts\n            \n            injectable\n            AlertService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Notification/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Notification/notification.service.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Storage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                47 %\n                (8/17)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Storage/storage.service.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Timer/timer.service.ts\n            \n            injectable\n            TimerService\n            \n                28 %\n                (8/28)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ~11.2.0\n        \n            @angular/core : ~11.2.0\n        \n            @angular/forms : ~11.2.0\n        \n            @angular/platform-browser : ~11.2.0\n        \n            @angular/platform-browser-dynamic : ~11.2.0\n        \n            @angular/router : ~11.2.0\n        \n            @capacitor/android : ^2.4.7\n        \n            @capacitor/core : 2.4.7\n        \n            @ionic/angular : ^5.5.2\n        \n            cordova-res : ^0.15.3\n        \n            doxygen : ^0.4.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DateFormat   (src/.../Interfaces.ts)\n                        \n                        \n                            DEFAULT_VAL   (src/.../Interfaces.ts)\n                        \n                        \n                            KEYS   (src/.../Keys.ts)\n                        \n                        \n                            LABELS   (src/.../Interfaces.ts)\n                        \n                        \n                            SETTINGS   (src/.../Interfaces.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/MODELS/Interfaces.ts\n    \n        \n            \n                \n                    \n                        \n                        DateFormat\n                    \n                \n                        \n                            \n                                 Year\n                            \n                        \n                        \n                            \n                                Value : YYYY\n                            \n                        \n                        \n                            \n                                 YearMonth\n                            \n                        \n                        \n                            \n                                Value : YYYY-MM\n                            \n                        \n                        \n                            \n                                 HourMinute\n                            \n                        \n                        \n                            \n                                Value : HH:mm\n                            \n                        \n                        \n                            \n                                 HourMinuteSeconds\n                            \n                        \n                        \n                            \n                                Value : HH:mm:ss\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DEFAULT_VAL\n                    \n                \n                        \n                            \n                                 START\n                            \n                        \n                        \n                            \n                                Value : 08:30\n                            \n                        \n                        \n                            \n                                 STOP\n                            \n                        \n                        \n                            \n                                Value : 18:00\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LABELS\n                    \n                \n                        \n                            \n                                 START\n                            \n                        \n                        \n                            \n                                Value : IN\n                            \n                        \n                        \n                            \n                                 STOP\n                            \n                        \n                        \n                            \n                                Value : OUT\n                            \n                        \n                        \n                            \n                                 PAUSE\n                            \n                        \n                        \n                            \n                                Value : PAUSE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SETTINGS\n                    \n                \n                        \n                            \n                                 ALARMS\n                            \n                        \n                        \n                            \n                                Value : Alarms\n                            \n                        \n            \n        \n\n    src/app/MODELS/Keys.ts\n    \n        \n            \n                \n                    \n                        \n                        KEYS\n                    \n                \n                        \n                            \n                                 SETTINGS\n                            \n                        \n                        \n                            \n                                Value : Setting\n                            \n                        \n                        \n                            \n                                 STATUS\n                            \n                        \n                        \n                            \n                                Value : Status\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            timeToString   (src/.../Utility.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/COMMON/Utility.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            timeToString\n                        \n                        \n                    \n                \n            \n            \n                \ntimeToString(timeStr)\n                \n            \n\n\n\n\n            \n                \n                    To order the different alarms we save the HH:mm string as a number\nex. \n     12:00 => 1200 \n     04:00 => 400\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeStr\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_HomePageRoutingModule\n\n\n\ncluster_HomePageRoutingModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nSettingsPopoverComponent\n\nSettingsPopoverComponent\n\nHomePageModule -->\n\nSettingsPopoverComponent->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nTimerService\n\nTimerService\n\nHomePageRoutingModule -->\n\nTimerService->HomePageRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                               (src/.../notification.service.ts)\n                        \n                        \n                               (src/.../storage.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/SERVICE/Notification/notification.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Plugins\n                        \n                    \n\n\n            \n        \n\n    src/app/SERVICE/Storage/storage.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Plugins\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
