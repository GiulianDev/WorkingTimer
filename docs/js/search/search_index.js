var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AdvertisementService.html",[0,0.751,1,1.961]],["body/injectables/AdvertisementService.html",[0,1.165,1,3.04,2,1.747,3,0.48,4,0.48,5,0.42,6,3.131,7,0.543,8,1.403,9,2.993,10,5.862,11,4.607,12,1.163,13,1.281,14,3.775,15,3.775,16,1.279,17,0.036,18,3.984,19,3.775,20,0.864,21,0.753,22,3.775,23,4.8,24,4.8,25,3.775,26,3.775,27,3.775,28,3.131,29,3.131,30,1.927,31,1.747,32,0.48,33,0.308,34,3.775,35,3.775,36,2.338,37,3.775,38,3.775,39,3.775,40,3.775,41,3.982,42,3.131,43,3.775,44,3.775,45,3.442,46,3.775,47,1.449,48,3.131,49,4.8,50,3.775,51,3.775,52,3.131,53,3.775,54,2.707,55,1.449,56,3.775,57,3.775,58,3.775,59,0.021,60,0.027,61,0.021]],["title/injectables/AlarmService.html",[0,0.751,62,1.753]],["body/injectables/AlarmService.html",[0,0.784,2,0.99,3,0.272,4,0.272,5,0.238,7,0.465,8,0.944,12,0.472,13,1.324,16,1.394,17,0.036,20,0.941,21,0.427,30,1.092,31,0.99,32,0.272,33,0.174,36,0.901,47,1.24,59,0.012,60,0.018,61,0.012,62,1.829,63,1.775,64,0.944,65,2.06,66,1.13,67,3.228,68,2.762,69,3.892,70,4.336,71,2.006,72,4.336,73,2.746,74,4.336,75,3.23,76,2.679,77,1.833,78,1.775,79,2.06,80,3.23,81,1.137,82,1.037,83,0.865,84,2.139,85,1.345,86,1.529,87,4.336,88,1.801,89,3.109,90,1.564,91,2.139,92,1.78,93,0.821,94,2.791,95,2.156,96,2.317,97,1.78,98,2.978,99,2.139,100,2.06,101,2.139,102,2.139,103,2.139,104,2.139,105,2.679,106,3.23,107,2.771,108,2.139,109,1.534,110,2.139,111,2.139,112,2.139,113,1.534,114,1.534,115,1.355,116,1.534,117,1.355,118,1.534,119,1.534,120,2.139,121,1.775,122,1.534,123,3.23,124,1.638,125,2.679,126,3.23,127,2.139,128,1.495,129,3.23,130,2.139,131,2.139,132,2.139,133,2.139,134,2.465,135,2.139,136,1.355,137,1.775,138,2.06,139,1.355,140,1.775,141,2.139,142,2.139,143,1.534,144,1.534,145,1.36,146,0.821,147,1.775,148,1.775,149,1.649,150,2.139,151,2.139,152,1.092,153,1.775,154,1.775,155,2.139,156,2.139,157,1.775,158,1.355,159,2.139,160,2.139,161,1.775,162,2.139,163,1.775,164,2.139,165,3.23,166,2.139,167,0.75,168,2.139,169,2.139,170,2.139,171,2.139,172,2.679,173,2.139,174,2.139,175,2.139,176,2.139,177,2.139,178,2.139,179,1.534,180,2.139,181,2.139,182,1.534,183,2.139,184,2.139,185,1.649,186,2.317,187,1.534,188,1.775,189,2.139,190,2.139,191,2.139,192,0.99,193,2.139,194,1.775,195,2.139,196,1.775,197,2.139,198,2.317,199,2.139,200,3.23,201,2.139]],["title/classes/Alarms.html",[33,0.252,77,1.085]],["body/classes/Alarms.html",[3,0.284,4,0.284,5,0.248,7,0.682,8,0.975,12,0.88,13,1.286,16,1.374,17,0.036,20,0.797,32,0.284,33,0.182,36,1.405,55,1.281,59,0.013,60,0.019,61,0.013,64,0.975,65,2.094,66,1.207,67,3.313,68,2.552,76,2.768,77,1.806,81,1.295,82,1.181,83,0.946,85,1.435,86,1.386,88,1.848,90,1.506,92,1.169,93,0.857,95,1.533,96,1.602,97,0.783,98,3.146,100,1.681,105,1.853,107,2.685,109,1.602,113,1.602,114,1.602,115,1.415,116,1.602,117,1.415,118,1.602,119,1.602,124,2.231,125,2.768,136,2.113,138,1.865,144,1.602,145,1.681,149,1.703,167,1.169,179,3.177,182,1.602,188,1.853,202,1.415,203,1.853,204,3.994,205,2.768,206,3.337,207,3.337,208,2.234,209,3.337,210,2.234,211,1.703,212,2.768,213,2.529,214,4.126,215,2.539,216,2.393,217,3.337,218,2.234,219,2.234,220,2.234,221,2.234,222,3.337,223,3.337,224,3.337,225,3.337,226,3.337,227,2.234,228,3.337,229,2.768,230,4.741,231,2.234,232,2.234,233,2.234,234,2.234,235,2.234,236,3.337,237,3.337,238,1.865,239,3.337,240,2.234,241,2.234,242,2.234,243,2.234,244,2.234,245,1.602,246,2.234,247,1.853,248,1.034,249,2.539,250,1.14,251,2.234,252,1.853,253,1.853,254,3.337,255,2.234,256,2.393,257,2.768,258,2.234,259,1.853,260,1.853,261,3.313,262,1.853,263,2.234,264,1.853,265,1.853,266,1.853,267,1.853,268,1.853,269,1.853,270,1.853,271,1.853,272,1.853,273,1.853,274,1.853,275,1.853,276,1.853,277,2.234,278,1.853,279,3.313,280,2.768,281,0.94,282,4.43,283,2.234,284,2.234,285,2.234,286,3.337]],["title/injectables/AlertService.html",[0,0.751,287,1.753]],["body/injectables/AlertService.html",[0,0.863,2,1.128,3,0.31,4,0.31,5,0.271,7,0.35,8,1.04,9,2.829,12,0.537,13,1.193,16,1.232,17,0.036,18,3.681,20,0.64,21,0.486,30,1.244,31,1.128,32,0.31,33,0.199,47,1.613,59,0.014,60,0.02,61,0.014,64,1.04,66,1.319,68,1.646,81,1.35,82,1.232,83,0.981,85,1.461,86,1.04,92,1.799,93,0.935,95,2.215,97,1.473,124,1.769,128,1.945,138,1.769,215,2.509,287,2.015,288,2.021,289,3.974,290,3.558,291,3.558,292,3.558,293,2.437,294,2.437,295,3.558,296,5.541,297,4.203,298,4.203,299,2.437,300,4.94,301,3.558,302,4.833,303,2.437,304,4.203,305,4.203,306,3.486,307,4.203,308,4.621,309,3.681,310,4.621,311,3.558,312,3.558,313,2.437,314,2.437,315,0.935,316,2.437,317,4.203,318,3.014,319,3.014,320,2.38,321,4.203,322,3.486,323,3.112,324,4.257,325,3.014,326,3.486,327,4.203,328,4.621,329,2.437,330,2.437,331,3.486,332,2.437,333,4.203,334,2.437,335,2.437,336,2.437,337,2.437]],["title/components/AppComponent.html",[338,1.085,339,1.303]],["body/components/AppComponent.html",[3,0.499,4,0.499,5,0.436,12,0.865,13,0.952,17,0.036,20,0.885,21,0.783,31,2.277,32,0.499,33,0.32,59,0.022,60,0.028,61,0.022,66,0.952,78,3.255,79,2.492,81,1.147,82,1.432,83,0.783,122,2.815,167,1.974,250,2.512,338,1.883,339,2.372,340,2.786,341,2.485,342,2.485,343,2.485,344,2.485,345,3.255,346,2.485,347,3.749,348,3.353,349,3.116,350,5.374,351,3.116,352,4.92,353,3.925,354,3.925,355,2.485,356,3.116,357,2.485,358,2.485,359,2.485,360,2.004,361,2.485,362,1.506,363,2.485,364,1.652,365,1.256,366,2.485,367,2.485,368,2.485]],["title/modules/AppModule.html",[369,1.961,370,1.961]],["body/modules/AppModule.html",[3,0.501,4,0.501,5,0.438,17,0.036,20,1.066,21,0.787,32,0.501,33,0.321,59,0.022,60,0.028,61,0.022,71,1.824,238,1.659,315,1.513,339,2.627,348,2.232,370,3.884,371,1.824,372,2.518,373,3.269,374,3.269,375,3.269,376,3.269,377,3.356,378,3.124,379,3.941,380,4.092,381,3.124,382,4.933,383,3.124,384,4.933,385,3.269,386,2.826,387,4.933,388,2.232,389,3.269,390,4.933,391,3.941,392,3.269,393,3.941,394,3.941,395,3.269,396,3.941,397,3.941]],["title/modules/AppRoutingModule.html",[369,1.961,377,1.753]],["body/modules/AppRoutingModule.html",[3,0.546,4,0.546,5,0.477,17,0.036,20,0.935,21,0.857,32,0.546,33,0.35,47,1.648,59,0.024,60,0.029,61,0.024,371,1.986,377,2.944,381,2.718,383,3.292,388,2.431,398,4.293,399,3.561,400,5.199,401,4.313,402,3.167,403,4.313,404,3.729,405,4.293,406,4.293,407,4.293,408,4.293,409,4.293,410,4.293,411,4.293,412,4.293,413,4.293,414,3.561]],["title/components/HistoryComponent.html",[338,1.085,360,1.581]],["body/components/HistoryComponent.html",[3,0.493,4,0.493,5,0.431,7,0.557,8,1.427,12,1.178,13,1.185,16,1.033,17,0.036,20,0.697,21,0.774,32,0.493,33,0.316,59,0.022,60,0.027,61,0.022,82,1.301,100,1.632,167,1.965,250,2.492,338,1.872,339,1.632,340,2.764,341,2.455,342,2.455,343,2.455,344,2.455,346,2.455,347,3.737,348,3.342,349,3.091,351,3.091,355,2.455,356,3.091,357,2.455,358,2.455,359,2.455,360,2.863,361,2.455,362,1.488,363,2.455,364,1.632,365,1.241,366,2.455,367,2.455,368,2.455,415,3.215,416,3.501,417,4.432,418,5.609,419,5.343,420,4.881,421,4.652,422,3.876,423,3.876,424,4.881]],["title/components/HomePage.html",[338,1.085,362,1.188]],["body/components/HomePage.html",[1,3.043,3,0.178,4,0.178,5,0.155,7,0.201,8,0.674,9,2.078,12,0.753,13,1.282,16,1.008,17,0.036,20,0.886,21,0.279,32,0.178,33,0.114,36,0.588,45,2.111,47,0.885,52,1.159,54,1.654,55,1.451,59,0.008,60,0.013,61,0.008,62,2.438,64,0.674,65,2.388,66,0.339,68,2.158,71,2.158,79,1.812,81,0.408,82,0.785,83,0.931,85,0.829,86,0.998,90,0.86,92,1.426,95,0.536,97,0.808,98,1.93,100,1.239,115,0.885,116,1.002,128,1.362,134,1.864,139,1.46,145,2.3,146,1.13,152,0.713,167,1.197,172,1.159,185,0.713,192,2.082,215,1.503,238,0.588,245,1.002,248,1.581,250,1.177,256,1.654,281,0.971,287,2.141,289,3.446,300,1.159,302,1.912,309,2.711,315,0.536,319,2.711,320,1.935,323,1.46,325,2.111,338,1.197,339,0.588,340,1.306,341,0.885,342,0.885,343,0.885,344,0.885,346,0.885,347,2.577,348,2.438,349,1.46,351,1.46,355,0.885,356,1.46,357,0.885,358,0.885,359,0.885,360,0.713,361,0.885,362,1.311,363,0.885,364,1.239,365,0.447,366,1.46,367,0.885,368,0.885,404,1.654,425,1.159,426,2.944,427,2.306,428,3.78,429,3.78,430,2.111,431,2.944,432,2.297,433,3.416,434,3.416,435,3.416,436,3.416,437,1.397,438,2.078,439,3.571,440,2.306,441,1.397,442,2.944,443,3.345,444,1.912,445,1.397,446,3.136,447,3.416,448,1.397,449,2.306,450,2.306,451,1.912,452,2.306,453,1.397,454,2.306,455,1.744,456,2.306,457,1.397,458,2.944,459,1.397,460,1.397,461,1.397,462,1.397,463,1.397,464,1.397,465,1.397,466,1.397,467,1.397,468,1.397,469,0.885,470,0.885,471,1.159,472,1.397,473,1.159,474,1.159,475,1.159,476,1.159,477,1.397,478,1.002,479,0.885,480,2.306,481,1.912,482,1.397,483,1.397,484,1.159,485,1.397,486,1.397,487,1.397,488,1.397,489,1.397,490,1.002,491,1.397,492,1.397,493,1.002,494,1.397,495,2.442,496,1.397,497,2.306,498,1.397,499,2.306,500,1.397,501,1.397,502,1.397,503,1.397,504,1.397,505,1.397,506,1.397,507,1.397,508,3.416,509,1.397,510,1.397,511,2.306,512,1.397,513,1.397,514,2.306,515,1.397,516,1.397,517,1.397,518,1.397,519,2.306,520,1.912,521,1.002,522,1.397,523,1.002,524,2.306,525,2.944,526,2.306,527,1.397,528,1.397,529,1.397,530,1.159,531,1.397,532,1.397,533,2.306,534,1.397,535,1.397,536,1.397,537,1.159,538,1.397,539,1.397,540,1.397,541,1.397,542,1.397,543,1.397,544,2.306,545,2.306,546,2.306,547,2.834,548,2.834,549,3.136,550,1.397,551,1.912,552,1.159,553,1.397,554,2.711,555,1.159,556,1.397,557,1.397,558,4.251,559,1.397,560,2.306,561,3.869,562,1.397,563,1.159,564,1.397,565,1.397,566,3.136,567,1.397,568,1.397,569,1.397,570,2.442,571,1.397,572,1.159,573,1.397,574,4.251,575,3.136,576,2.834,577,2.834,578,2.834,579,1.159,580,1.397,581,2.111,582,1.397,583,2.442,584,1.397,585,1.397,586,2.306,587,4.5,588,4.086,589,2.306,590,4.5,591,2.306,592,4.5,593,2.306,594,2.306,595,2.306,596,2.306,597,2.306,598,2.306,599,2.306,600,2.306,601,2.306,602,2.306,603,1.397,604,1.159,605,2.442,606,1.397,607,2.306,608,2.944,609,1.397,610,1.397,611,1.397,612,1.397,613,1.397,614,2.306,615,1.397,616,1.397,617,1.159,618,1.397,619,2.306,620,1.397,621,1.397,622,2.306,623,3.78,624,1.397,625,1.002]],["title/modules/HomePageModule.html",[369,1.961,626,1.961]],["body/modules/HomePageModule.html",[3,0.506,4,0.506,5,0.443,17,0.036,20,1.084,21,0.795,32,0.506,33,0.325,59,0.022,60,0.028,61,0.022,71,1.843,238,1.677,315,1.529,362,2.281,364,2.502,371,1.843,372,2.535,378,3.144,380,4.119,381,3.144,383,3.144,389,4.119,392,3.304,404,2.856,469,2.522,470,2.522,471,3.304,626,3.917,627,3.304,628,3.304,629,3.304,630,3.365,631,3.983,632,4.965,633,3.304,634,4.965,635,3.304,636,3.304]],["title/modules/HomePageRoutingModule.html",[369,1.961,630,1.753]],["body/modules/HomePageRoutingModule.html",[3,0.521,4,0.521,5,0.455,17,0.036,20,1.057,21,0.817,32,0.521,33,0.334,47,1.572,59,0.023,60,0.028,61,0.023,71,1.895,238,1.724,318,2.937,338,1.435,362,1.939,371,1.895,372,2.579,378,3.199,381,2.594,383,3.199,388,2.32,395,4.191,399,3.398,401,4.191,402,3.102,403,3.398,414,3.398,438,3.055,476,3.398,630,3.388,636,3.398,637,3.398,638,3.398,639,4.096,640,3.469,641,4.096,642,4.096,643,4.096]],["title/guards/HomeResolver.html",[640,1.961,644,2.221]],["body/guards/HomeResolver.html",[0,1.194,3,0.499,4,0.499,5,0.436,7,0.564,8,1.438,12,1.084,13,1.194,16,1.046,17,0.036,20,0.967,21,0.783,32,0.499,33,0.32,36,1.652,59,0.022,60,0.028,61,0.022,65,2.071,66,1.194,68,2.487,81,1.438,82,1.311,83,0.982,100,1.652,124,1.652,128,1.816,306,3.255,315,1.506,318,4.04,388,2.222,416,2.815,640,3.116,645,3.925,646,3.255,647,2.815,648,4.246,649,6.008,650,3.925,651,4.92,652,5.634,653,5.374,654,5.634,655,3.925,656,3.925,657,3.255,658,3.925,659,3.925]],["title/injectables/NotificationService.html",[0,0.751,660,1.961]],["body/injectables/NotificationService.html",[0,0.944,2,1.277,3,0.351,4,0.351,5,0.307,7,0.397,8,1.137,9,2.915,12,0.993,13,1.386,16,1.466,17,0.036,18,2.79,20,0.811,21,0.551,30,1.409,31,1.277,32,0.351,33,0.225,47,1.059,59,0.015,60,0.022,61,0.015,64,1.137,65,2.404,66,0.944,81,1.137,82,1.037,83,1.029,85,1.093,86,1.317,90,1.641,92,1.579,93,1.059,97,0.967,124,1.897,138,1.162,145,1.638,167,0.967,185,1.986,186,1.979,192,2.387,211,1.409,215,2.3,281,1.638,320,2.551,443,2.79,493,2.79,521,3.231,660,2.463,661,2.289,662,4.505,663,4.279,664,4.505,665,3.89,666,4.892,667,4.892,668,3.89,669,4.892,670,3.89,671,3.89,672,2.759,673,3.227,674,2.759,675,5.852,676,3.89,677,2.759,678,2.759,679,2.759,680,3.89,681,3.89,682,3.89,683,2.759,684,2.289,685,3.89,686,4.505,687,2.759,688,2.759,689,2.759,690,3.89,691,2.289,692,3.89,693,2.289,694,3.227,695,4.505,696,2.289,697,2.759,698,2.759,699,2.759,700,2.759,701,2.759,702,2.759,703,2.759,704,2.463,705,3.89,706,2.759,707,2.759,708,1.747,709,2.759,710,2.759,711,2.289,712,2.759,713,2.759,714,2.759,715,2.759,716,2.759,717,2.759,718,3.89,719,2.759,720,2.759,721,2.759]],["title/interfaces/PickerColumnOption.html",[722,1.581,723,1.961]],["body/interfaces/PickerColumnOption.html",[3,0.526,4,0.526,5,0.461,7,0.595,17,0.035,32,0.526,59,0.023,60,0.029,61,0.023,64,1.486,66,1.524,83,1.197,85,1.456,86,1.678,88,2.776,89,4.118,90,1.609,229,4.763,323,3.636,555,4.763,722,2.114,723,3.221,724,2.97,725,3.435,726,5.742]],["title/classes/Settings.html",[33,0.252,365,0.991]],["body/classes/Settings.html",[3,0.318,4,0.318,5,0.278,7,0.672,8,1.059,12,0.94,13,1.135,16,1.136,17,0.036,20,0.652,32,0.318,33,0.204,36,1.525,47,1.906,55,1.391,59,0.014,60,0.02,61,0.014,64,1.059,66,1.135,77,1.814,81,1.059,82,0.966,83,0.933,85,1.407,86,1.059,88,2.297,90,1.059,92,0.876,93,1.636,94,1.792,96,1.792,97,1.639,98,3.11,107,2.932,115,1.582,124,2.09,136,1.582,137,2.072,138,1.795,139,2.294,140,2.072,144,1.792,145,1.525,146,0.959,147,2.072,148,2.072,149,2.643,152,1.275,153,2.072,154,2.072,167,1.494,179,2.598,182,1.792,202,1.582,205,2.072,211,1.85,212,3.005,213,2.961,214,4.625,215,2.793,216,3.057,238,1.525,245,3.057,247,3.879,248,1.677,249,2.534,250,1.275,252,2.072,253,2.072,256,2.598,257,3.005,259,2.072,260,2.072,261,3.536,262,2.072,264,3.536,265,2.072,266,2.072,267,2.072,268,2.072,269,2.072,270,2.072,271,2.072,272,2.072,273,2.072,274,2.072,275,2.072,276,2.072,278,2.072,279,3.536,280,3.005,281,1.795,365,1.497,727,2.072,728,3.623,729,3.005,730,3.623,731,3.623,732,3.623,733,3.623,734,2.498,735,2.498,736,2.498,737,3.005,738,2.498,739,2.498,740,2.498,741,2.498,742,2.498,743,3.623,744,2.498,745,3.623,746,2.498,747,2.498,748,2.498,749,2.498,750,2.498,751,2.498,752,2.498,753,2.498,754,2.498,755,2.498,756,3.623,757,3.623]],["title/components/SettingsPopoverComponent.html",[338,1.085,364,1.303]],["body/components/SettingsPopoverComponent.html",[3,0.167,4,0.167,5,0.146,7,0.405,8,0.64,9,2.654,12,0.483,13,1.332,16,1.253,17,0.036,20,0.82,21,0.262,32,0.167,33,0.107,45,0.942,48,3.032,54,2.021,59,0.007,60,0.012,61,0.007,62,2.372,64,0.64,65,2.391,66,0.958,68,1.827,73,2.5,77,1.281,79,1.763,81,1.154,82,1.215,83,0.964,85,1.016,86,0.961,89,0.942,90,0.64,92,1.153,93,0.504,95,1.608,97,0.768,98,2.882,100,1.539,107,2.236,119,0.942,128,1.014,134,1.388,136,2.315,138,1.186,139,1.388,143,1.571,145,1.662,146,0.841,149,1.119,152,1.119,158,1.388,163,1.09,167,1.538,185,1.119,194,2.338,211,1.679,213,2.083,248,1.014,249,2.016,250,1.119,287,2.07,289,3.372,309,3.004,315,0.504,319,2.621,320,1.596,322,2.728,323,1.388,324,3.901,325,1.571,326,1.818,331,1.818,338,0.988,339,0.553,340,1.241,341,0.832,342,0.832,343,0.832,344,0.832,346,0.832,347,2.5,348,2.236,349,1.388,351,1.388,355,0.832,356,1.388,357,0.832,358,0.832,359,0.832,360,0.671,361,0.832,362,0.504,363,0.832,364,1.385,365,1.836,366,1.785,367,0.832,368,0.832,416,1.571,417,2.338,421,2.728,439,3.275,451,1.818,469,3.504,470,3.504,473,1.09,474,1.09,475,1.09,478,0.942,481,1.818,484,2.728,490,0.942,521,2.021,547,1.09,548,3.275,549,3.474,551,1.09,552,1.818,554,0.942,558,1.09,561,2.338,566,3.032,570,3.474,572,2.338,574,4.248,575,2.728,576,1.818,577,3.275,578,3.474,579,1.09,581,2.832,583,2.338,588,3.78,604,1.818,605,3.032,617,1.09,696,1.818,729,1.09,737,2.728,758,1.09,759,2.818,760,2.191,761,2.818,762,2.818,763,2.818,764,2.818,765,2.021,766,2.191,767,2.191,768,3.289,769,3.289,770,2.191,771,2.191,772,2.191,773,1.314,774,4.188,775,2.191,776,2.191,777,1.314,778,1.314,779,2.191,780,2.191,781,2.191,782,1.818,783,2.191,784,1.314,785,1.314,786,2.191,787,2.191,788,1.314,789,2.191,790,1.314,791,2.191,792,1.314,793,1.314,794,1.571,795,2.191,796,1.314,797,2.191,798,1.314,799,1.314,800,1.314,801,1.314,802,1.314,803,1.314,804,1.314,805,1.314,806,2.191,807,1.314,808,2.818,809,1.314,810,1.09,811,1.314,812,1.314,813,1.314,814,1.314,815,1.314,816,2.818,817,2.818,818,2.818,819,1.314,820,1.314,821,1.314,822,1.314,823,1.09,824,1.818,825,1.314,826,1.314,827,1.314,828,1.314,829,1.314,830,1.314,831,2.191,832,1.314,833,1.314,834,1.09,835,1.314,836,1.314,837,1.314,838,1.314,839,1.314,840,1.314,841,2.191,842,1.314,843,1.314,844,1.314,845,1.314,846,1.314,847,1.314,848,1.314,849,2.191,850,2.191,851,2.191,852,2.191,853,2.191,854,2.191,855,2.191,856,2.191,857,1.314,858,2.191,859,2.191,860,1.314,861,2.191,862,2.818,863,2.191,864,1.314,865,1.314,866,2.191,867,3.289,868,2.191,869,2.191,870,1.314,871,3.289,872,2.191,873,2.191,874,1.314,875,1.314,876,2.191,877,2.191,878,1.314,879,3.289,880,1.314,881,2.818,882,1.314,883,1.314,884,2.191,885,2.191,886,1.314,887,1.314,888,1.314,889,1.314,890,3.289,891,1.314,892,2.191,893,1.314,894,1.314,895,1.314]],["title/interfaces/Status.html",[722,1.581,896,1.433]],["body/interfaces/Status.html",[3,0.493,4,0.493,5,0.431,7,0.557,12,0.854,17,0.036,32,0.713,33,0.316,55,1.488,59,0.022,60,0.027,61,0.022,64,1.427,77,1.711,83,1.066,85,1.185,88,2.473,90,1.689,95,1.488,146,1.488,192,2.259,248,1.794,365,1.241,432,3.094,455,1.979,479,3.552,704,2.455,708,2.455,722,1.979,724,2.78,896,2.259,897,2.455,898,4.022,899,4.049,900,2.78,901,3.501,902,2.78,903,2.78,904,2.78,905,2.78,906,3.215,907,3.215,908,3.215,909,3.215,910,3.215,911,3.215,912,3.215,913,3.215,914,3.215,915,3.215]],["title/injectables/StorageService.html",[0,0.751,79,1.303]],["body/injectables/StorageService.html",[0,0.635,2,0.756,3,0.208,4,0.208,5,0.182,7,0.661,8,1.095,9,2.798,11,2.171,12,0.36,13,1.379,16,1.552,17,0.036,20,0.787,21,0.326,30,0.834,31,0.756,32,0.208,33,0.267,47,1.438,55,0.627,59,0.009,60,0.015,61,0.009,64,0.765,65,1.842,66,1.116,73,2.771,77,1.843,79,1.102,81,1.343,82,1.225,83,0.984,85,1.116,86,0.957,90,1.198,92,0.917,93,0.627,94,3.534,95,1.892,97,1.148,98,2.439,100,1.577,107,2.122,109,2.687,113,1.171,114,1.171,117,1.034,122,1.171,124,2.354,128,1.516,134,1.034,138,1.577,143,1.877,145,1.102,152,0.834,157,1.355,158,3.722,161,2.717,167,0.572,185,1.913,192,1.898,196,1.355,213,3.121,281,0.687,315,0.627,320,2.478,365,1.927,490,1.171,647,1.171,648,3.139,657,1.355,684,2.717,782,3.63,794,4.01,810,1.355,823,2.717,824,3.402,834,1.355,896,2.694,916,1.355,917,2.618,918,2.618,919,3.747,920,3.747,921,3.747,922,3.747,923,2.618,924,3.747,925,3.747,926,3.747,927,3.747,928,3.747,929,2.618,930,2.618,931,2.618,932,2.618,933,2.618,934,1.633,935,2.618,936,1.633,937,2.618,938,1.633,939,1.633,940,1.633,941,2.618,942,1.633,943,1.633,944,2.618,945,1.633,946,4.376,947,1.633,948,1.633,949,1.633,950,3.747,951,3.108,952,2.618,953,1.633,954,1.633,955,2.618,956,2.618,957,1.633,958,4.778,959,2.618,960,1.633,961,2.618,962,1.633,963,1.633,964,1.355,965,1.355,966,1.633,967,1.633,968,1.633,969,1.633,970,3.276,971,3.747,972,3.747,973,1.633,974,1.633,975,1.633,976,1.633,977,1.633,978,1.633,979,2.618,980,4.101,981,1.633,982,3.276,983,3.276,984,3.276,985,1.633,986,1.633,987,3.276,988,2.618,989,1.633,990,1.633,991,2.618,992,1.633,993,2.618,994,2.618,995,3.276,996,3.276,997,1.633,998,1.633,999,1.633,1000,1.633,1001,1.633,1002,1.633,1003,2.618,1004,1.633,1005,1.633,1006,1.633,1007,1.633,1008,1.633,1009,1.633,1010,2.618,1011,1.633,1012,1.633,1013,1.633,1014,1.633,1015,1.633,1016,1.355]],["title/classes/TimeList.html",[33,0.252,432,1.581]],["body/classes/TimeList.html",[3,0.458,4,0.458,5,0.4,7,0.518,12,1.138,13,1.43,17,0.036,32,0.694,33,0.294,55,1.382,59,0.02,60,0.026,61,0.02,64,1.361,66,1.496,77,1.632,83,1.155,85,1.325,88,1.666,90,1.652,95,1.382,146,1.981,192,2.526,202,2.28,248,1.666,365,1.153,432,2.786,455,2.635,479,2.28,704,2.28,708,2.28,722,1.838,896,1.666,897,2.28,898,2.582,899,3.863,900,2.582,901,3.34,902,2.582,903,2.582,904,2.582,905,2.582,906,2.987,907,2.987,908,2.987,909,2.987,910,2.987,911,2.987,912,4.282,913,4.282,914,4.282,915,4.282,1017,3.601,1018,3.601,1019,3.601,1020,3.601,1021,3.601,1022,3.601,1023,3.601]],["title/injectables/TimerService.html",[0,0.751,438,1.581]],["body/injectables/TimerService.html",[0,0.691,2,0.84,3,0.231,4,0.231,5,0.202,7,0.261,8,0.832,12,0.627,13,1.462,16,1.479,17,0.036,20,0.824,21,0.362,30,0.926,31,0.84,32,0.231,33,0.148,36,1.818,41,1.505,42,2.361,55,1.904,59,0.01,60,0.016,61,0.01,64,0.832,65,1.478,66,0.691,68,2.857,71,2.12,73,1.149,79,2.196,81,0.832,82,0.759,83,1.107,85,1.048,86,1.554,88,1.625,90,1.339,92,1.864,93,0.697,95,2.075,97,1.605,100,1.929,117,1.149,118,1.301,121,1.505,124,1.818,138,1.198,145,1.478,146,1.839,149,2.204,152,0.926,158,1.149,167,0.997,185,0.926,186,1.301,192,2.414,211,1.792,215,0.926,249,0.926,281,1.198,315,0.697,430,2.518,432,2.664,438,1.453,443,3.435,455,2.339,478,1.301,479,2.517,493,2.851,495,2.912,520,1.505,530,1.505,537,3.582,563,1.505,625,2.041,647,1.301,648,3.657,660,3.304,663,2.361,673,1.505,711,1.505,794,2.041,896,2.12,898,2.851,964,1.505,1016,1.505,1024,1.505,1025,3.511,1026,3.511,1027,2.846,1028,3.511,1029,3.511,1030,2.846,1031,3.511,1032,3.511,1033,3.511,1034,3.511,1035,2.518,1036,3.511,1037,3.975,1038,3.511,1039,2.041,1040,2.846,1041,1.815,1042,1.815,1043,1.815,1044,1.815,1045,1.815,1046,1.815,1047,1.815,1048,1.815,1049,1.815,1050,1.815,1051,1.815,1052,1.815,1053,1.815,1054,1.815,1055,1.815,1056,2.361,1057,3.8,1058,1.815,1059,3.297,1060,2.361,1061,2.361,1062,3.975,1063,1.815,1064,1.815,1065,1.815,1066,1.815,1067,1.815,1068,1.815,1069,1.815,1070,1.815,1071,1.815,1072,1.815,1073,1.815,1074,1.815,1075,1.815,1076,1.815,1077,1.815,1078,1.815,1079,1.815,1080,1.815,1081,2.846,1082,1.815,1083,1.815,1084,1.815,1085,4.581,1086,1.815,1087,3.975,1088,1.815,1089,4.318,1090,1.815,1091,1.815,1092,2.846,1093,2.846,1094,1.815,1095,1.815,1096,3.511,1097,1.815,1098,1.815,1099,1.815,1100,1.815,1101,2.846,1102,1.815,1103,1.815,1104,1.815,1105,1.815,1106,1.815,1107,1.815,1108,1.815,1109,1.815,1110,1.815,1111,1.815]],["title/coverage.html",[1112,3.495]],["body/coverage.html",[0,1.344,1,1.951,5,0.343,6,2.555,17,0.036,33,0.389,55,2.431,59,0.017,60,0.024,61,0.017,62,1.745,63,2.555,77,1.471,79,1.297,83,0.615,97,1.08,146,1.612,187,2.209,203,2.555,249,1.573,287,1.745,288,2.555,338,1.798,339,1.297,345,2.555,360,1.573,362,1.183,364,1.297,365,1.344,415,2.555,425,2.555,432,1.573,438,1.573,444,4.255,455,2.144,469,1.951,470,1.951,523,2.209,554,2.209,581,2.209,625,2.209,640,1.951,644,2.209,646,2.555,660,1.951,661,2.555,722,2.144,723,1.951,725,2.555,727,2.555,758,2.555,765,2.209,896,1.943,897,2.659,916,2.555,1024,2.555,1035,2.209,1039,2.209,1112,2.555,1113,2.555,1114,3.081,1115,3.081,1116,4.065,1117,2.209,1118,6.235,1119,2.209,1120,6.177,1121,2.555,1122,2.555,1123,3.483,1124,3.962,1125,3.962,1126,3.483,1127,3.081,1128,4.199,1129,3.081,1130,3.081,1131,3.081,1132,4.199,1133,3.081,1134,3.081,1135,3.081,1136,3.081,1137,3.081,1138,3.081,1139,3.081,1140,3.081,1141,3.081,1142,3.081,1143,3.081,1144,3.081,1145,3.081,1146,3.081,1147,3.081,1148,2.555,1149,3.483,1150,2.555,1151,3.483,1152,2.555,1153,2.555,1154,3.081,1155,3.081]],["title/dependencies.html",[372,1.899,1156,2.592]],["body/dependencies.html",[17,0.036,21,0.832,28,3.458,29,3.458,59,0.023,60,0.029,61,0.023,128,1.929,315,1.6,372,2.128,385,4.236,386,3.663,388,2.361,633,3.458,635,3.458,691,3.458,693,3.458,694,3.458,965,3.458,1157,6.009,1158,4.169,1159,4.169,1160,4.169,1161,5.107,1162,4.169,1163,5.755,1164,4.169,1165,4.169,1166,5.107,1167,4.169,1168,4.169,1169,4.169,1170,4.169,1171,4.169,1172,4.169,1173,4.169,1174,4.169,1175,4.169,1176,4.169,1177,4.169,1178,4.169,1179,4.169,1180,4.169,1181,4.169]],["title/miscellaneous/enumerations.html",[1182,1.323,1183,3.086]],["body/miscellaneous/enumerations.html",[7,0.674,17,0.035,59,0.026,60,0.031,61,0.026,86,1.749,248,2.17,704,2.97,708,2.97,897,2.97,900,3.93,901,3.93,902,3.363,903,3.363,904,3.363,905,3.363,1182,2.394,1183,3.89,1184,4.69]],["title/miscellaneous/functions.html",[1182,1.323,1185,3.086]],["body/miscellaneous/functions.html",[7,0.638,16,1.182,17,0.034,59,0.025,60,0.03,61,0.025,66,1.287,81,1.549,82,1.413,85,1.076,90,1.549,93,1.702,211,2.264,281,1.867,1035,3.802,1039,3.802,1056,3.679,1057,4.704,1059,4.398,1060,3.679,1061,3.679,1116,3.18,1117,4.067,1119,4.067,1126,3.679,1182,2.264,1185,3.679,1186,4.398,1187,5.302,1188,4.435,1189,5.302,1190,4.435]],["title/index.html",[7,0.373,430,1.859,1191,2.592]],["body/index.html",[17,0.032,59,0.028,60,0.032,61,0.028,446,4.105,1113,4.105,1192,4.949]],["title/modules.html",[371,1.95]],["body/modules.html",[17,0.031,59,0.027,60,0.031,61,0.027,370,3,371,2.192,377,2.683,386,4.181,626,3,630,2.683,1193,5.83,1194,5.83,1195,6.003,1196,4.737,1197,4.737]],["title/overview.html",[1198,3.495]],["body/overview.html",[2,1.921,17,0.035,59,0.023,60,0.029,61,0.023,71,1.921,198,2.976,202,2.628,238,1.747,281,1.747,339,2.56,340,2.35,362,2.115,364,2.32,370,3.85,371,1.921,372,2.6,373,3.443,374,3.443,375,3.443,376,3.443,377,3.121,378,3.225,402,2.35,438,2.813,626,3.888,627,3.443,628,3.443,629,3.443,630,3.339,637,3.443,638,3.443,644,2.976,724,2.976,1198,3.443,1199,5.511,1200,4.15,1201,4.15]],["title/routes.html",[402,2.386]],["body/routes.html",[17,0.032,59,0.028,60,0.032,61,0.028,402,2.818]],["title/miscellaneous/variables.html",[1182,1.323,1202,3.086]],["body/miscellaneous/variables.html",[7,0.476,17,0.036,36,1.855,59,0.019,60,0.025,61,0.019,77,1.736,83,1.243,85,1.467,86,1.814,92,2.175,146,2.027,149,1.689,187,3.16,198,3.16,216,3.16,238,1.393,249,2.529,365,1.41,455,2.696,523,3.16,723,2.79,765,3.16,896,2.292,951,2.745,1116,2.373,1117,2.373,1119,2.373,1121,3.654,1122,3.654,1123,2.745,1124,2.745,1125,2.745,1148,2.745,1149,4.381,1150,2.745,1151,2.745,1152,3.654,1153,3.654,1182,1.689,1186,4.562,1202,2.745,1203,4.953,1204,4.406,1205,3.309,1206,3.309,1207,4.953,1208,4.406,1209,3.309,1210,3.309,1211,3.309,1212,3.309,1213,3.309,1214,3.309,1215,3.309,1216,3.309,1217,3.309,1218,3.309,1219,3.309,1220,3.309,1221,4.406,1222,3.309,1223,3.309]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":55,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["0.15.3",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["0.5rem",{"_index":616,"title":{},"body":{"components/HomePage.html":{}}}],["0.795",{"_index":608,"title":{},"body":{"components/HomePage.html":{}}}],["0.9rem",{"_index":895,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["0/1",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["00:00.00",{"_index":1062,"title":{},"body":{"injectables/TimerService.html":{}}}],["04:00",{"_index":223,"title":{},"body":{"classes/Alarms.html":{}}}],["08:30",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0px",{"_index":884,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["1",{"_index":281,"title":{},"body":{"classes/Alarms.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["1.0.2",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":625,"title":{},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["10/20",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":581,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["1000",{"_index":718,"title":{},"body":{"injectables/NotificationService.html":{}}}],["12.0.1",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["1200",{"_index":222,"title":{},"body":{"classes/Alarms.html":{}}}],["12:00",{"_index":221,"title":{},"body":{"classes/Alarms.html":{}}}],["1315",{"_index":190,"title":{},"body":{"injectables/AlarmService.html":{}}}],["13:15",{"_index":189,"title":{},"body":{"injectables/AlarmService.html":{}}}],["15",{"_index":487,"title":{},"body":{"components/HomePage.html":{}}}],["16",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":564,"title":{},"body":{"components/HomePage.html":{}}}],["18:00",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1970",{"_index":676,"title":{},"body":{"injectables/NotificationService.html":{}}}],["1].index",{"_index":259,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["1px",{"_index":885,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["1rem",{"_index":617,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["2",{"_index":198,"title":{},"body":{"injectables/AlarmService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":876,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["2077ef9a63d2b398840261c8221a0c9b",{"_index":38,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["20px",{"_index":559,"title":{},"body":{"components/HomePage.html":{}}}],["22px",{"_index":565,"title":{},"body":{"components/HomePage.html":{}}}],["24",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["26px",{"_index":562,"title":{},"body":{"components/HomePage.html":{}}}],["28",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["2rem",{"_index":572,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["3",{"_index":1201,"title":{},"body":{"overview.html":{}}}],["3.1.0",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["350",{"_index":591,"title":{},"body":{"components/HomePage.html":{}}}],["350px",{"_index":589,"title":{},"body":{"components/HomePage.html":{}}}],["36",{"_index":619,"title":{},"body":{"components/HomePage.html":{}}}],["3px",{"_index":894,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["3rem",{"_index":881,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["4",{"_index":1199,"title":{},"body":{"overview.html":{}}}],["40",{"_index":584,"title":{},"body":{"components/HomePage.html":{}}}],["400",{"_index":224,"title":{},"body":{"classes/Alarms.html":{}}}],["439209432321129530",{"_index":685,"title":{},"body":{"injectables/NotificationService.html":{}}}],["45",{"_index":614,"title":{},"body":{"components/HomePage.html":{}}}],["5.5.2",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["5/16",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":554,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["500",{"_index":595,"title":{},"body":{"components/HomePage.html":{}}}],["500px",{"_index":594,"title":{},"body":{"components/HomePage.html":{}}}],["50vw",{"_index":622,"title":{},"body":{"components/HomePage.html":{}}}],["5px",{"_index":891,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["6",{"_index":1200,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":598,"title":{},"body":{"components/HomePage.html":{}}}],["600px",{"_index":597,"title":{},"body":{"components/HomePage.html":{}}}],["65",{"_index":607,"title":{},"body":{"components/HomePage.html":{}}}],["6px",{"_index":886,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["7.20.0",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["7/21",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["7/29",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["850",{"_index":601,"title":{},"body":{"components/HomePage.html":{}}}],["850px",{"_index":600,"title":{},"body":{"components/HomePage.html":{}}}],["8c8c8c",{"_index":567,"title":{},"body":{"components/HomePage.html":{}}}],["90",{"_index":893,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["_alarms",{"_index":67,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{}}}],["_id",{"_index":662,"title":{},"body":{"injectables/NotificationService.html":{}}}],["_startstoptxt",{"_index":428,"title":{},"body":{"components/HomePage.html":{}}}],["a.index",{"_index":279,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["absolute",{"_index":550,"title":{},"body":{"components/HomePage.html":{}}}],["accessors",{"_index":76,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{}}}],["activatedroutesnapshot",{"_index":652,"title":{},"body":{"guards/HomeResolver.html":{}}}],["actual_component",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["add",{"_index":211,"title":{},"body":{"classes/Alarms.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["addalarmcontainer",{"_index":882,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["addalarmn",{"_index":730,"title":{},"body":{"classes/Settings.html":{}}}],["addalarmn(alarmvalue",{"_index":733,"title":{},"body":{"classes/Settings.html":{}}}],["added",{"_index":713,"title":{},"body":{"injectables/NotificationService.html":{}}}],["addlocalnotification",{"_index":665,"title":{},"body":{"injectables/NotificationService.html":{}}}],["addlocalnotification(msg",{"_index":671,"title":{},"body":{"injectables/NotificationService.html":{}}}],["addpause",{"_index":766,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["addpause(alarm",{"_index":776,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["adid",{"_index":49,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["admob",{"_index":22,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["admob.addlistener(banneradpluginevents.loaded",{"_index":40,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["admob.addlistener(banneradpluginevents.sizechanged",{"_index":44,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["admob.initialize",{"_index":34,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["admob.showbanner(options",{"_index":58,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["admobbannersize",{"_index":23,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["adsize",{"_index":50,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["advertisementservice",{"_index":1,"title":{"injectables/AdvertisementService.html":{}},"body":{"injectables/AdvertisementService.html":{},"components/HomePage.html":{},"coverage.html":{}}}],["aggiungo",{"_index":269,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["alarm",{"_index":98,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["alarm(key",{"_index":168,"title":{},"body":{"injectables/AlarmService.html":{}}}],["alarm(labels.pause",{"_index":252,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["alarm(labels.start",{"_index":147,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{}}}],["alarm(labels.stop",{"_index":153,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{}}}],["alarm(savedalarm.key",{"_index":131,"title":{},"body":{"injectables/AlarmService.html":{}}}],["alarm.getminutesidex",{"_index":865,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alarm.index",{"_index":245,"title":{},"body":{"classes/Alarms.html":{},"components/HomePage.html":{},"classes/Settings.html":{}}}],["alarm.key",{"_index":871,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alarm.update(val.detail.value",{"_index":827,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alarm.value",{"_index":872,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alarms",{"_index":77,"title":{"classes/Alarms.html":{}},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alarms(alarms",{"_index":234,"title":{},"body":{"classes/Alarms.html":{}}}],["alarms?.value",{"_index":973,"title":{},"body":{"injectables/StorageService.html":{}}}],["alarmservice",{"_index":62,"title":{"injectables/AlarmService.html":{}},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["alarmsjson",{"_index":988,"title":{},"body":{"injectables/StorageService.html":{}}}],["alarmtmp",{"_index":761,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alarmtmpindex",{"_index":762,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alarmtmpvalue",{"_index":763,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alarmvalue",{"_index":247,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["alert",{"_index":319,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["alert.present",{"_index":333,"title":{},"body":{"injectables/AlertService.html":{}}}],["alertcontroller",{"_index":289,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["alertservice",{"_index":287,"title":{"injectables/AlertService.html":{}},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["align",{"_index":548,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["all'interno",{"_index":838,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alla",{"_index":271,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["allarmi",{"_index":181,"title":{},"body":{"injectables/AlarmService.html":{}}}],["already",{"_index":267,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["angular/common",{"_index":633,"title":{},"body":{"modules/HomePageModule.html":{},"dependencies.html":{}}}],["angular/compiler/src/output/output_ast",{"_index":468,"title":{},"body":{"components/HomePage.html":{}}}],["angular/core",{"_index":21,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":635,"title":{},"body":{"modules/HomePageModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"dependencies.html":{}}}],["any,canceltext",{"_index":334,"title":{},"body":{"injectables/AlertService.html":{}}}],["any,oktext",{"_index":335,"title":{},"body":{"injectables/AlertService.html":{}}}],["app",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["app.component",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":339,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appcontainer",{"_index":573,"title":{},"body":{"components/HomePage.html":{}}}],["appmodule",{"_index":370,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":377,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["around",{"_index":580,"title":{},"body":{"components/HomePage.html":{}}}],["array",{"_index":213,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["async",{"_index":9,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["available",{"_index":1197,"title":{},"body":{"modules.html":{}}}],["await",{"_index":320,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["b",{"_index":278,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["b.index",{"_index":280,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["background",{"_index":605,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["banner",{"_index":10,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["banneradoptions",{"_index":24,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["banneradpluginevents",{"_index":25,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["banneradposition",{"_index":26,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["banneradposition.bottom_center",{"_index":53,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["banneradsize",{"_index":27,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["banneradsize.banner",{"_index":51,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["bar",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["begin",{"_index":1060,"title":{},"body":{"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["between",{"_index":478,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{}}}],["blanktime",{"_index":1025,"title":{},"body":{"injectables/TimerService.html":{}}}],["body",{"_index":698,"title":{},"body":{"injectables/NotificationService.html":{}}}],["bool",{"_index":642,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["boolean",{"_index":88,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["bootstrap",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["browse",{"_index":1195,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":481,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["buttons",{"_index":322,"title":{},"body":{"injectables/AlertService.html":{},"components/SettingsPopoverComponent.html":{}}}],["buttonscontainer",{"_index":880,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["calc",{"_index":1042,"title":{},"body":{"injectables/TimerService.html":{}}}],["calcdiff",{"_index":1031,"title":{},"body":{"injectables/TimerService.html":{}}}],["calcel",{"_index":779,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["cancel",{"_index":324,"title":{},"body":{"injectables/AlertService.html":{},"components/SettingsPopoverComponent.html":{}}}],["canceltext",{"_index":297,"title":{},"body":{"injectables/AlertService.html":{}}}],["capacitor",{"_index":28,"title":{},"body":{"injectables/AdvertisementService.html":{},"dependencies.html":{}}}],["capacitor/android",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["capacitor/app",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":691,"title":{},"body":{"injectables/NotificationService.html":{},"dependencies.html":{}}}],["capacitor/haptics",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["capacitor/keyboard",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["capacitor/local",{"_index":693,"title":{},"body":{"injectables/NotificationService.html":{},"dependencies.html":{}}}],["capacitor/status",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["capacitor/storage",{"_index":965,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["capire",{"_index":173,"title":{},"body":{"injectables/AlarmService.html":{}}}],["case",{"_index":491,"title":{},"body":{"components/HomePage.html":{}}}],["center",{"_index":549,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["change",{"_index":46,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["check",{"_index":256,"title":{},"body":{"classes/Alarms.html":{},"components/HomePage.html":{},"classes/Settings.html":{}}}],["checkbox",{"_index":890,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["class",{"_index":33,"title":{"classes/Alarms.html":{},"classes/Settings.html":{},"classes/TimeList.html":{}},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["classes",{"_index":202,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{},"classes/TimeList.html":{},"overview.html":{}}}],["clear",{"_index":204,"title":{},"body":{"classes/Alarms.html":{}}}],["clearinterval(this.started",{"_index":1101,"title":{},"body":{"injectables/TimerService.html":{}}}],["click",{"_index":446,"title":{},"body":{"components/HomePage.html":{},"index.html":{}}}],["clickcounter",{"_index":479,"title":{},"body":{"components/HomePage.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["clockrunning",{"_index":1032,"title":{},"body":{"injectables/TimerService.html":{}}}],["closed",{"_index":492,"title":{},"body":{"components/HomePage.html":{}}}],["cluster_appmodule",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_homepagemodule",{"_index":627,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_declarations",{"_index":628,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_imports",{"_index":629,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepageroutingmodule",{"_index":637,"title":{},"body":{"modules/HomePageRoutingModule.html":{},"overview.html":{}}}],["cluster_homepageroutingmodule_providers",{"_index":638,"title":{},"body":{"modules/HomePageRoutingModule.html":{},"overview.html":{}}}],["codes",{"_index":307,"title":{},"body":{"injectables/AlertService.html":{}}}],["color",{"_index":566,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["column",{"_index":576,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["columns",{"_index":859,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["common/labels",{"_index":739,"title":{},"body":{"classes/Settings.html":{}}}],["commonmodule",{"_index":632,"title":{},"body":{"modules/HomePageModule.html":{}}}],["community/admob",{"_index":29,"title":{},"body":{"injectables/AdvertisementService.html":{},"dependencies.html":{}}}],["component",{"_index":338,"title":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["components",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"overview.html":{}}}],["con",{"_index":975,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(\"adding",{"_index":711,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/TimerService.html":{}}}],["console.log(\"alarm",{"_index":515,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(\"alarms",{"_index":239,"title":{},"body":{"classes/Alarms.html":{}}}],["console.log(\"cancel",{"_index":842,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(\"converting",{"_index":1003,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(\"current",{"_index":517,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(\"index",{"_index":237,"title":{},"body":{"classes/Alarms.html":{}}}],["console.log(\"initialising",{"_index":968,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(\"loading",{"_index":813,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(\"resetting",{"_index":534,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(\"retrieved",{"_index":997,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(\"retrieving",{"_index":971,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(\"saved",{"_index":1083,"title":{},"body":{"injectables/TimerService.html":{}}}],["console.log(\"saving",{"_index":983,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(\"scheduled",{"_index":516,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(\"selected",{"_index":843,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(\"settings",{"_index":979,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(\"status",{"_index":1008,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log('canceled",{"_index":526,"title":{},"body":{"components/HomePage.html":{}}}],["console.log('click",{"_index":513,"title":{},"body":{"components/HomePage.html":{}}}],["console.log('confirmed",{"_index":524,"title":{},"body":{"components/HomePage.html":{}}}],["console.log('data",{"_index":986,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log('default",{"_index":156,"title":{},"body":{"injectables/AlarmService.html":{}}}],["console.log('loading",{"_index":142,"title":{},"body":{"injectables/AlarmService.html":{}}}],["console.log('ondiddismiss",{"_index":542,"title":{},"body":{"components/HomePage.html":{}}}],["console.log('platform",{"_index":658,"title":{},"body":{"guards/HomeResolver.html":{}}}],["console.log(alarm",{"_index":845,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(alarmsjson",{"_index":990,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(idx",{"_index":829,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(msg",{"_index":260,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["console.log(p",{"_index":1110,"title":{},"body":{"injectables/TimerService.html":{}}}],["console.log(pause",{"_index":253,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["console.log(t",{"_index":512,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(this.alarms",{"_index":819,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(this.settings",{"_index":815,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(this.settings.alarms.length",{"_index":1012,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(this.timelist",{"_index":536,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(val",{"_index":828,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(value",{"_index":851,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["const",{"_index":47,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"modules/AppRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"injectables/StorageService.html":{}}}],["constant",{"_index":811,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["constant.days",{"_index":806,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["constant.minutes_opts",{"_index":862,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["constructor",{"_index":12,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["constructor(alertcontroller",{"_index":293,"title":{},"body":{"injectables/AlertService.html":{}}}],["constructor(platform",{"_index":647,"title":{},"body":{"guards/HomeResolver.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["constructor(popovercontroller",{"_index":773,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["constructor(private",{"_index":122,"title":{},"body":{"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/StorageService.html":{}}}],["constructor(public",{"_index":316,"title":{},"body":{"injectables/AlertService.html":{}}}],["constructor(storageservice",{"_index":78,"title":{},"body":{"injectables/AlarmService.html":{},"components/AppComponent.html":{}}}],["constructor(timerservice",{"_index":437,"title":{},"body":{"components/HomePage.html":{}}}],["container",{"_index":547,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["contains",{"_index":728,"title":{},"body":{"classes/Settings.html":{}}}],["content",{"_index":578,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["context",{"_index":1152,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":330,"title":{},"body":{"injectables/AlertService.html":{}}}],["convert",{"_index":219,"title":{},"body":{"classes/Alarms.html":{}}}],["converto",{"_index":998,"title":{},"body":{"injectables/StorageService.html":{}}}],["convertstr2date",{"_index":917,"title":{},"body":{"injectables/StorageService.html":{}}}],["convertstr2date(datestr",{"_index":933,"title":{},"body":{"injectables/StorageService.html":{}}}],["convrteddate",{"_index":1015,"title":{},"body":{"injectables/StorageService.html":{}}}],["copy",{"_index":820,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["cordova",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":480,"title":{},"body":{"components/HomePage.html":{}}}],["counter",{"_index":447,"title":{},"body":{"components/HomePage.html":{}}}],["coverage",{"_index":1112,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":96,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{}}}],["createalarm",{"_index":69,"title":{},"body":{"injectables/AlarmService.html":{}}}],["createalarm(key",{"_index":84,"title":{},"body":{"injectables/AlarmService.html":{}}}],["cssclass",{"_index":326,"title":{},"body":{"injectables/AlertService.html":{},"components/SettingsPopoverComponent.html":{}}}],["current",{"_index":185,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["current.gethours",{"_index":193,"title":{},"body":{"injectables/AlarmService.html":{}}}],["current.getminutes",{"_index":195,"title":{},"body":{"injectables/AlarmService.html":{}}}],["currentidx",{"_index":241,"title":{},"body":{"classes/Alarms.html":{}}}],["currenttime",{"_index":508,"title":{},"body":{"components/HomePage.html":{}}}],["custom",{"_index":866,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["custompickeroptions",{"_index":764,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["data",{"_index":958,"title":{},"body":{"injectables/StorageService.html":{}}}],["date",{"_index":192,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["date.setdate(date.gettime",{"_index":721,"title":{},"body":{"injectables/NotificationService.html":{}}}],["date2id",{"_index":666,"title":{},"body":{"injectables/NotificationService.html":{}}}],["dateformat",{"_index":900,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["dateidx",{"_index":200,"title":{},"body":{"injectables/AlarmService.html":{}}}],["datestr",{"_index":196,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/StorageService.html":{}}}],["datestr.length",{"_index":1014,"title":{},"body":{"injectables/StorageService.html":{}}}],["day",{"_index":521,"title":{},"body":{"components/HomePage.html":{},"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{}}}],["days",{"_index":765,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["decoration",{"_index":568,"title":{},"body":{"components/HomePage.html":{}}}],["defailt",{"_index":952,"title":{},"body":{"injectables/StorageService.html":{}}}],["default",{"_index":92,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["default_val",{"_index":111,"title":{},"body":{"injectables/AlarmService.html":{}}}],["default_val.start",{"_index":148,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{}}}],["default_val.stop",{"_index":154,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{}}}],["defined",{"_index":13,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["degli",{"_index":180,"title":{},"body":{"injectables/AlarmService.html":{}}}],["delay",{"_index":680,"title":{},"body":{"injectables/NotificationService.html":{}}}],["delayed",{"_index":681,"title":{},"body":{"injectables/NotificationService.html":{}}}],["delete",{"_index":737,"title":{},"body":{"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{}}}],["deletealarm",{"_index":731,"title":{},"body":{"classes/Settings.html":{}}}],["deletealarm(alarm",{"_index":735,"title":{},"body":{"classes/Settings.html":{}}}],["deleted",{"_index":757,"title":{},"body":{"classes/Settings.html":{}}}],["deletelocalnotification",{"_index":667,"title":{},"body":{"injectables/NotificationService.html":{}}}],["deletepause",{"_index":767,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["deletepause(alarm",{"_index":783,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["dell'alarm",{"_index":839,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["dell'indice",{"_index":505,"title":{},"body":{"components/HomePage.html":{}}}],["dentro",{"_index":176,"title":{},"body":{"injectables/AlarmService.html":{}}}],["dependencies",{"_index":372,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":93,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["deve",{"_index":163,"title":{},"body":{"injectables/AlarmService.html":{},"components/SettingsPopoverComponent.html":{}}}],["device",{"_index":946,"title":{},"body":{"injectables/StorageService.html":{}}}],["di",{"_index":834,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["diff",{"_index":912,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["difference",{"_index":1043,"title":{},"body":{"injectables/TimerService.html":{}}}],["differente",{"_index":171,"title":{},"body":{"injectables/AlarmService.html":{}}}],["diffms",{"_index":913,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["digit",{"_index":1057,"title":{},"body":{"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["digits",{"_index":1189,"title":{},"body":{"miscellaneous/functions.html":{}}}],["direction",{"_index":575,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["directive",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["directives",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["disabled",{"_index":726,"title":{},"body":{"interfaces/PickerColumnOption.html":{}}}],["discorso",{"_index":504,"title":{},"body":{"components/HomePage.html":{}}}],["dismiss",{"_index":786,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["dismissclick",{"_index":768,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["display",{"_index":309,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["diventare",{"_index":164,"title":{},"body":{"injectables/AlarmService.html":{}}}],["documentation",{"_index":1113,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["done",{"_index":527,"title":{},"body":{"components/HomePage.html":{}}}],["duration",{"_index":89,"title":{},"body":{"injectables/AlarmService.html":{},"interfaces/PickerColumnOption.html":{},"components/SettingsPopoverComponent.html":{}}}],["dynamic",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":273,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["echotimer",{"_index":544,"title":{},"body":{"components/HomePage.html":{}}}],["element",{"_index":250,"title":{},"body":{"classes/Alarms.html":{},"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{}}}],["enabled",{"_index":748,"title":{},"body":{"classes/Settings.html":{}}}],["end",{"_index":152,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["endregion",{"_index":994,"title":{},"body":{"injectables/StorageService.html":{}}}],["entrycomponents",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":899,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["enumerations",{"_index":1183,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1149,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["essere",{"_index":836,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["event",{"_index":42,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/TimerService.html":{}}}],["ex",{"_index":188,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{}}}],["existingalarm",{"_index":262,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["existingalarm.length",{"_index":265,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["exists",{"_index":268,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["export",{"_index":32,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["exports",{"_index":414,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["extra",{"_index":710,"title":{},"body":{"injectables/NotificationService.html":{}}}],["f",{"_index":753,"title":{},"body":{"classes/Settings.html":{}}}],["fabcontainer",{"_index":620,"title":{},"body":{"components/HomePage.html":{}}}],["false",{"_index":149,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":970,"title":{},"body":{"injectables/StorageService.html":{}}}],["fff",{"_index":878,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["fine",{"_index":272,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["flex",{"_index":574,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["font",{"_index":558,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["for(let",{"_index":1016,"title":{},"body":{"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["formsmodule",{"_index":634,"title":{},"body":{"modules/HomePageModule.html":{}}}],["fri",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["full",{"_index":411,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":444,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["functions",{"_index":1185,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fuori",{"_index":177,"title":{},"body":{"injectables/AlarmService.html":{}}}],["gestire",{"_index":506,"title":{},"body":{"components/HomePage.html":{}}}],["gestre",{"_index":183,"title":{},"body":{"injectables/AlarmService.html":{}}}],["getalarmbyindex",{"_index":918,"title":{},"body":{"injectables/StorageService.html":{}}}],["getalarmbyindex(idx",{"_index":935,"title":{},"body":{"injectables/StorageService.html":{}}}],["getalarmcount",{"_index":919,"title":{},"body":{"injectables/StorageService.html":{}}}],["getalarms",{"_index":109,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/StorageService.html":{}}}],["getcurrenttimeindex",{"_index":191,"title":{},"body":{"injectables/AlarmService.html":{}}}],["getdelayedtime",{"_index":668,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getdelayedtime(seconds",{"_index":678,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getdelayedtime(seconds:number",{"_index":719,"title":{},"body":{"injectables/NotificationService.html":{}}}],["gethousoptions",{"_index":1117,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getlastalarm",{"_index":920,"title":{},"body":{"injectables/StorageService.html":{}}}],["getminutesoptions",{"_index":1119,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getpending",{"_index":669,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getsettings",{"_index":921,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstartedtimes",{"_index":1033,"title":{},"body":{"injectables/TimerService.html":{}}}],["getstatus",{"_index":922,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstoppedtimes",{"_index":1034,"title":{},"body":{"injectables/TimerService.html":{}}}],["getstoredalarms",{"_index":70,"title":{},"body":{"injectables/AlarmService.html":{}}}],["getstoreddata",{"_index":923,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstoreddata(key",{"_index":944,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstoredsettings",{"_index":924,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstoredstatus",{"_index":925,"title":{},"body":{"injectables/StorageService.html":{}}}],["gettime",{"_index":1035,"title":{},"body":{"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["gettime(maxval",{"_index":1188,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gettimelist",{"_index":1036,"title":{},"body":{"injectables/TimerService.html":{}}}],["getting",{"_index":1191,"title":{"index.html":{}},"body":{}}],["graph",{"_index":1196,"title":{},"body":{"modules.html":{}}}],["greenyellow",{"_index":888,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["grow",{"_index":610,"title":{},"body":{"components/HomePage.html":{}}}],["guard",{"_index":644,"title":{"guards/HomeResolver.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":645,"title":{},"body":{"guards/HomeResolver.html":{}}}],["handler",{"_index":328,"title":{},"body":{"injectables/AlertService.html":{}}}],["handler:(value:any",{"_index":850,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["header",{"_index":300,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{}}}],["height",{"_index":561,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["here",{"_index":1192,"title":{},"body":{"index.html":{}}}],["hh",{"_index":706,"title":{},"body":{"injectables/NotificationService.html":{}}}],["hh:mm",{"_index":248,"title":{},"body":{"classes/Alarms.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["hh:mm:ss",{"_index":905,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["hidden",{"_index":612,"title":{},"body":{"components/HomePage.html":{}}}],["history",{"_index":418,"title":{},"body":{"components/HistoryComponent.html":{}}}],["history'},{'name",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["history.component.html",{"_index":420,"title":{},"body":{"components/HistoryComponent.html":{}}}],["history.component.scss",{"_index":419,"title":{},"body":{"components/HistoryComponent.html":{}}}],["historycomponent",{"_index":360,"title":{"components/HistoryComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["home",{"_index":404,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["home'},{'name",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["home.page",{"_index":636,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home.page.html",{"_index":427,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":426,"title":{},"body":{"components/HomePage.html":{}}}],["home.resolve",{"_index":641,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["homepage",{"_index":362,"title":{"components/HomePage.html":{}},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homepagemodule",{"_index":626,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules.html":{},"overview.html":{}}}],["homepageroutingmodule",{"_index":630,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["homeresolver",{"_index":640,"title":{"guards/HomeResolver.html":{}},"body":{"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"coverage.html":{}}}],["honeydew",{"_index":889,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["hour",{"_index":186,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/NotificationService.html":{},"injectables/TimerService.html":{}}}],["hour_opts",{"_index":1121,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["hourminute",{"_index":903,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["hourminuteseconds",{"_index":904,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["hours",{"_index":523,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["icon",{"_index":571,"title":{},"body":{"components/HomePage.html":{}}}],["id",{"_index":699,"title":{},"body":{"injectables/NotificationService.html":{}}}],["identifier",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["idx",{"_index":107,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["if(currentidx",{"_index":244,"title":{},"body":{"classes/Alarms.html":{}}}],["if(idx",{"_index":235,"title":{},"body":{"classes/Alarms.html":{}}}],["if(this.running",{"_index":1094,"title":{},"body":{"injectables/TimerService.html":{}}}],["if(typeof(timestr",{"_index":283,"title":{},"body":{"classes/Alarms.html":{}}}],["il",{"_index":178,"title":{},"body":{"injectables/AlarmService.html":{}}}],["implements",{"_index":416,"title":{},"body":{"components/HistoryComponent.html":{},"guards/HomeResolver.html":{},"components/SettingsPopoverComponent.html":{}}}],["import",{"_index":20,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["import('./pages/home/home.module').then",{"_index":406,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["increment",{"_index":456,"title":{},"body":{"components/HomePage.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["initialize",{"_index":11,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/StorageService.html":{}}}],["initializefortesting",{"_index":39,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["initializesettings",{"_index":926,"title":{},"body":{"injectables/StorageService.html":{}}}],["initializestatus",{"_index":927,"title":{},"body":{"injectables/StorageService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"overview.html":{}}}],["inner",{"_index":883,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["insert/add",{"_index":166,"title":{},"body":{"injectables/AlarmService.html":{}}}],["install",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["instantiate",{"_index":955,"title":{},"body":{"injectables/StorageService.html":{}}}],["interface",{"_index":722,"title":{"interfaces/PickerColumnOption.html":{},"interfaces/Status.html":{}},"body":{"interfaces/PickerColumnOption.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"coverage.html":{}}}],["interfaces",{"_index":724,"title":{},"body":{"interfaces/PickerColumnOption.html":{},"interfaces/Status.html":{},"overview.html":{}}}],["ion",{"_index":570,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["ionic/angular",{"_index":315,"title":{},"body":{"injectables/AlertService.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"guards/HomeResolver.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"dependencies.html":{}}}],["ionic/core",{"_index":809,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["ionicmodule",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["ionicmodule.forroot",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["ispause",{"_index":87,"title":{},"body":{"injectables/AlarmService.html":{}}}],["isrunning",{"_index":898,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["istesting",{"_index":56,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["istimeractive",{"_index":1037,"title":{},"body":{"injectables/TimerService.html":{}}}],["item",{"_index":877,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["items",{"_index":583,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["json.parse(alarms.value",{"_index":977,"title":{},"body":{"injectables/StorageService.html":{}}}],["json.parse(res.value",{"_index":996,"title":{},"body":{"injectables/StorageService.html":{}}}],["json.stringify(data",{"_index":985,"title":{},"body":{"injectables/StorageService.html":{}}}],["json.stringify(status",{"_index":992,"title":{},"body":{"injectables/StorageService.html":{}}}],["json.stringify(this.settings.alarms",{"_index":989,"title":{},"body":{"injectables/StorageService.html":{}}}],["jsondata",{"_index":984,"title":{},"body":{"injectables/StorageService.html":{}}}],["justify",{"_index":577,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["key",{"_index":94,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{},"injectables/StorageService.html":{}}}],["keys",{"_index":113,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/StorageService.html":{}}}],["keys.alarms",{"_index":161,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/StorageService.html":{}}}],["keys.status",{"_index":993,"title":{},"body":{"injectables/StorageService.html":{}}}],["l'alarm",{"_index":976,"title":{},"body":{"injectables/StorageService.html":{}}}],["l'array",{"_index":275,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["l'elemento",{"_index":270,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["l'if",{"_index":507,"title":{},"body":{"components/HomePage.html":{}}}],["la",{"_index":832,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["labels",{"_index":115,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"classes/Settings.html":{}}}],["labels.pause",{"_index":746,"title":{},"body":{"classes/Settings.html":{}}}],["labels.start",{"_index":458,"title":{},"body":{"components/HomePage.html":{}}}],["labels.stop",{"_index":500,"title":{},"body":{"components/HomePage.html":{}}}],["last",{"_index":941,"title":{},"body":{"injectables/StorageService.html":{}}}],["late",{"_index":518,"title":{},"body":{"components/HomePage.html":{}}}],["le",{"_index":1000,"title":{},"body":{"injectables/StorageService.html":{}}}],["left",{"_index":551,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["legend",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["line",{"_index":560,"title":{},"body":{"components/HomePage.html":{}}}],["list",{"_index":729,"title":{},"body":{"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{}}}],["listener",{"_index":43,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["lists",{"_index":489,"title":{},"body":{"components/HomePage.html":{}}}],["literal",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ln",{"_index":1013,"title":{},"body":{"injectables/StorageService.html":{}}}],["load",{"_index":789,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["loadchildren",{"_index":405,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaddefaultsettings",{"_index":928,"title":{},"body":{"injectables/StorageService.html":{}}}],["loadsettings",{"_index":769,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["local",{"_index":794,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["localnotification",{"_index":689,"title":{},"body":{"injectables/NotificationService.html":{}}}],["localnotifications",{"_index":692,"title":{},"body":{"injectables/NotificationService.html":{}}}],["localnotifications.cancel(this._id",{"_index":715,"title":{},"body":{"injectables/NotificationService.html":{}}}],["localnotifications.getpending",{"_index":716,"title":{},"body":{"injectables/NotificationService.html":{}}}],["localnotifications.schedule",{"_index":712,"title":{},"body":{"injectables/NotificationService.html":{}}}],["localnotificationschema",{"_index":686,"title":{},"body":{"injectables/NotificationService.html":{}}}],["logica",{"_index":833,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["lucky",{"_index":697,"title":{},"body":{"injectables/NotificationService.html":{}}}],["m",{"_index":407,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":408,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["manage",{"_index":485,"title":{},"body":{"components/HomePage.html":{}}}],["margin",{"_index":54,"title":{},"body":{"injectables/AdvertisementService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["matching",{"_index":60,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.floor(date.now",{"_index":717,"title":{},"body":{"injectables/NotificationService.html":{}}}],["maxval",{"_index":1190,"title":{},"body":{"miscellaneous/functions.html":{}}}],["media(min",{"_index":587,"title":{},"body":{"components/HomePage.html":{}}}],["message",{"_index":296,"title":{},"body":{"injectables/AlertService.html":{}}}],["messaggi",{"_index":184,"title":{},"body":{"injectables/AlarmService.html":{}}}],["metadata",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["methods",{"_index":8,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["miglirabole",{"_index":135,"title":{},"body":{"injectables/AlarmService.html":{}}}],["min",{"_index":194,"title":{},"body":{"injectables/AlarmService.html":{},"components/SettingsPopoverComponent.html":{}}}],["minute",{"_index":707,"title":{},"body":{"injectables/NotificationService.html":{}}}],["minutes",{"_index":187,"title":{},"body":{"injectables/AlarmService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["minutes_opts",{"_index":1122,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1182,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":708,"title":{},"body":{"injectables/NotificationService.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["models/interfaces",{"_index":477,"title":{},"body":{"components/HomePage.html":{}}}],["module",{"_index":369,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}},"body":{}}],["modules",{"_index":371,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mon",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["month",{"_index":705,"title":{},"body":{"injectables/NotificationService.html":{}}}],["more",{"_index":590,"title":{},"body":{"components/HomePage.html":{}}}],["msg",{"_index":215,"title":{},"body":{"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"injectables/TimerService.html":{}}}],["msg:'a",{"_index":266,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["msg:'alarm",{"_index":756,"title":{},"body":{"classes/Settings.html":{}}}],["msg:'pause",{"_index":255,"title":{},"body":{"classes/Alarms.html":{}}}],["name",{"_index":82,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["name:'hours",{"_index":860,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["name:'minutes",{"_index":863,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["new",{"_index":97,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["newstoppedduration",{"_index":1097,"title":{},"body":{"injectables/TimerService.html":{}}}],["newstoppedduration:any",{"_index":1095,"title":{},"body":{"injectables/TimerService.html":{}}}],["nex",{"_index":212,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["ngmodule",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["ngoninit",{"_index":421,"title":{},"body":{"components/HistoryComponent.html":{},"components/SettingsPopoverComponent.html":{}}}],["none",{"_index":569,"title":{},"body":{"components/HomePage.html":{}}}],["notification",{"_index":663,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/TimerService.html":{}}}],["notification/notification.service",{"_index":1076,"title":{},"body":{"injectables/TimerService.html":{}}}],["notificationpromise",{"_index":664,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notifications",{"_index":694,"title":{},"body":{"injectables/NotificationService.html":{},"dependencies.html":{}}}],["notificationservice",{"_index":660,"title":{"injectables/NotificationService.html":{}},"body":{"injectables/NotificationService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["npa",{"_index":57,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["npm",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":95,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["num",{"_index":1061,"title":{},"body":{"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":90,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":216,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":818,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["offset",{"_index":429,"title":{},"body":{"components/HomePage.html":{}}}],["oggetti",{"_index":1001,"title":{},"body":{"injectables/StorageService.html":{}}}],["ok",{"_index":331,"title":{},"body":{"injectables/AlertService.html":{},"components/SettingsPopoverComponent.html":{}}}],["oktext",{"_index":298,"title":{},"body":{"injectables/AlertService.html":{}}}],["onfabtimerclick",{"_index":433,"title":{},"body":{"components/HomePage.html":{}}}],["oninit",{"_index":417,"title":{},"body":{"components/HistoryComponent.html":{},"components/SettingsPopoverComponent.html":{}}}],["onpause",{"_index":1038,"title":{},"body":{"injectables/TimerService.html":{}}}],["ontimechange",{"_index":770,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["ontimechange(val",{"_index":791,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["open",{"_index":449,"title":{},"body":{"components/HomePage.html":{}}}],["optional",{"_index":66,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":48,"title":{},"body":{"injectables/AdvertisementService.html":{},"components/SettingsPopoverComponent.html":{}}}],["optionswidth",{"_index":861,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["original",{"_index":821,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["out",{"_index":238,"title":{},"body":{"classes/Alarms.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"classes/Settings.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["over",{"_index":787,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["overflow",{"_index":611,"title":{},"body":{"components/HomePage.html":{}}}],["overview",{"_index":1198,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":563,"title":{},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{}}}],["package",{"_index":1156,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":879,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["param",{"_index":138,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["parameters",{"_index":81,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":546,"title":{},"body":{"components/HomePage.html":{}}}],["passed",{"_index":228,"title":{},"body":{"classes/Alarms.html":{}}}],["path",{"_index":403,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["pathmatch",{"_index":410,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pause",{"_index":249,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pause.index",{"_index":257,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["per",{"_index":172,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{}}}],["picker",{"_index":867,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["picker.present",{"_index":869,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["pickerclassname",{"_index":887,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["pickercolumnoption",{"_index":723,"title":{"interfaces/PickerColumnOption.html":{}},"body":{"interfaces/PickerColumnOption.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pickercontroller",{"_index":774,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["pickeroptions",{"_index":808,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["platform",{"_index":648,"title":{},"body":{"guards/HomeResolver.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["platform.pause",{"_index":1052,"title":{},"body":{"injectables/TimerService.html":{}}}],["plugins",{"_index":690,"title":{},"body":{"injectables/NotificationService.html":{}}}],["poi",{"_index":182,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{}}}],["pop",{"_index":451,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["popover",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["popover.component",{"_index":471,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["popover.component.html",{"_index":760,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.scss",{"_index":759,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts",{"_index":758,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["popover.component.ts:100",{"_index":784,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:108",{"_index":788,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:116",{"_index":785,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:124",{"_index":798,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:170",{"_index":796,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:18",{"_index":805,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:19",{"_index":807,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:20",{"_index":799,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:21",{"_index":800,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:22",{"_index":802,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:23",{"_index":801,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:24",{"_index":775,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:32",{"_index":804,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:33",{"_index":803,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:36",{"_index":790,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:54",{"_index":792,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:71",{"_index":793,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:82",{"_index":778,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:91",{"_index":777,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.ondiddismiss",{"_index":541,"title":{},"body":{"components/HomePage.html":{}}}],["popover.present",{"_index":540,"title":{},"body":{"components/HomePage.html":{}}}],["popover/settings",{"_index":470,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["popovercontroller",{"_index":439,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["posistion",{"_index":937,"title":{},"body":{"injectables/StorageService.html":{}}}],["position",{"_index":52,"title":{},"body":{"injectables/AdvertisementService.html":{},"components/HomePage.html":{}}}],["positional",{"_index":137,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{}}}],["prefix",{"_index":870,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["preloadallmodules",{"_index":400,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":413,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["presentconfirm",{"_index":290,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentconfirm(header",{"_index":295,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentconfirmalert",{"_index":291,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentconfirmalert(msg",{"_index":301,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentwarningalert",{"_index":292,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentwarningalert(msg",{"_index":312,"title":{},"body":{"injectables/AlertService.html":{}}}],["private",{"_index":65,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["production",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":18,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlertService.html":{},"injectables/NotificationService.html":{}}}],["promise(async",{"_index":317,"title":{},"body":{"injectables/AlertService.html":{}}}],["properties",{"_index":64,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["provide",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":30,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["providers",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["public",{"_index":68,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{}}}],["push",{"_index":205,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["push(alarm",{"_index":209,"title":{},"body":{"classes/Alarms.html":{}}}],["px",{"_index":592,"title":{},"body":{"components/HomePage.html":{}}}],["questo",{"_index":503,"title":{},"body":{"components/HomePage.html":{}}}],["range",{"_index":179,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{}}}],["read",{"_index":950,"title":{},"body":{"injectables/StorageService.html":{}}}],["ready",{"_index":659,"title":{},"body":{"guards/HomeResolver.html":{}}}],["recover",{"_index":488,"title":{},"body":{"components/HomePage.html":{}}}],["redirectto",{"_index":409,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["region",{"_index":982,"title":{},"body":{"injectables/StorageService.html":{}}}],["reload",{"_index":781,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["reorder",{"_index":276,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["repeat",{"_index":873,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["requesttrackingauthorization",{"_index":35,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["require",{"_index":1153,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":128,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"dependencies.html":{}}}],["res.foreach(savedalarm",{"_index":130,"title":{},"body":{"injectables/AlarmService.html":{}}}],["res.succeded",{"_index":856,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["res.value",{"_index":995,"title":{},"body":{"injectables/StorageService.html":{}}}],["res://logo",{"_index":702,"title":{},"body":{"injectables/NotificationService.html":{}}}],["reset",{"_index":71,"title":{},"body":{"injectables/AlarmService.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/TimerService.html":{},"overview.html":{}}}],["resetbuttoncontainer",{"_index":624,"title":{},"body":{"components/HomePage.html":{}}}],["resetdefault",{"_index":72,"title":{},"body":{"injectables/AlarmService.html":{}}}],["resolve",{"_index":318,"title":{},"body":{"injectables/AlertService.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{}}}],["resolve('cancel",{"_index":336,"title":{},"body":{"injectables/AlertService.html":{}}}],["resolve('ok",{"_index":337,"title":{},"body":{"injectables/AlertService.html":{}}}],["resolve(false",{"_index":329,"title":{},"body":{"injectables/AlertService.html":{}}}],["resolve(route",{"_index":651,"title":{},"body":{"guards/HomeResolver.html":{}}}],["resolve(true",{"_index":332,"title":{},"body":{"injectables/AlertService.html":{}}}],["resolved",{"_index":543,"title":{},"body":{"components/HomePage.html":{}}}],["result",{"_index":59,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":61,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":124,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["returns",{"_index":16,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["rgb(20",{"_index":875,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["rgba(48",{"_index":613,"title":{},"body":{"components/HomePage.html":{}}}],["rgba(51",{"_index":618,"title":{},"body":{"components/HomePage.html":{}}}],["rgba(66",{"_index":606,"title":{},"body":{"components/HomePage.html":{}}}],["right",{"_index":552,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["riordino",{"_index":274,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["role",{"_index":325,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["root",{"_index":31,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["root'},{'name",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["route",{"_index":656,"title":{},"body":{"guards/HomeResolver.html":{}}}],["router",{"_index":649,"title":{},"body":{"guards/HomeResolver.html":{}}}],["routereusestrategy",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":401,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":643,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":412,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":654,"title":{},"body":{"guards/HomeResolver.html":{}}}],["routes",{"_index":402,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["routing.module.ts",{"_index":399,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["row",{"_index":604,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["running",{"_index":493,"title":{},"body":{"components/HomePage.html":{},"injectables/NotificationService.html":{},"injectables/TimerService.html":{}}}],["rxjs",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["salvataggio",{"_index":835,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["same",{"_index":261,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["sart",{"_index":454,"title":{},"body":{"components/HomePage.html":{}}}],["sat",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["save",{"_index":73,"title":{},"body":{"injectables/AlarmService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["savedalarm.value",{"_index":132,"title":{},"body":{"injectables/AlarmService.html":{}}}],["savedata",{"_index":929,"title":{},"body":{"injectables/StorageService.html":{}}}],["savedata(data",{"_index":956,"title":{},"body":{"injectables/StorageService.html":{}}}],["savedstatus",{"_index":1081,"title":{},"body":{"injectables/TimerService.html":{}}}],["savedstatus.clickcounter",{"_index":1091,"title":{},"body":{"injectables/TimerService.html":{}}}],["savedstatus.timelist",{"_index":1086,"title":{},"body":{"injectables/TimerService.html":{}}}],["savedstatus?.isrunning",{"_index":1084,"title":{},"body":{"injectables/TimerService.html":{}}}],["savesettings",{"_index":930,"title":{},"body":{"injectables/StorageService.html":{}}}],["savesettings(settings",{"_index":959,"title":{},"body":{"injectables/StorageService.html":{}}}],["savestatus",{"_index":931,"title":{},"body":{"injectables/StorageService.html":{}}}],["savestatus(status",{"_index":961,"title":{},"body":{"injectables/StorageService.html":{}}}],["saving",{"_index":157,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/StorageService.html":{}}}],["schedule",{"_index":703,"title":{},"body":{"injectables/NotificationService.html":{}}}],["se",{"_index":174,"title":{},"body":{"injectables/AlarmService.html":{}}}],["second",{"_index":720,"title":{},"body":{"injectables/NotificationService.html":{}}}],["secondary",{"_index":327,"title":{},"body":{"injectables/AlertService.html":{}}}],["seconds",{"_index":675,"title":{},"body":{"injectables/NotificationService.html":{}}}],["selected",{"_index":229,"title":{},"body":{"classes/Alarms.html":{},"interfaces/PickerColumnOption.html":{}}}],["selectedindex",{"_index":864,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["selector",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["service",{"_index":490,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["service/storage/storage.service",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["set",{"_index":105,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{}}}],["setalarms(alarms",{"_index":232,"title":{},"body":{"classes/Alarms.html":{}}}],["setdefaultalarms",{"_index":74,"title":{},"body":{"injectables/AlarmService.html":{}}}],["setings",{"_index":450,"title":{},"body":{"components/HomePage.html":{}}}],["setinterval(this.clockrunning.bind(this",{"_index":1093,"title":{},"body":{"injectables/TimerService.html":{}}}],["setting",{"_index":951,"title":{},"body":{"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["settings",{"_index":365,"title":{"classes/Settings.html":{}},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settingscontainer",{"_index":874,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["settingspopovercomponent",{"_index":364,"title":{"components/SettingsPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{},"overview.html":{}}}],["showalarmdurationpicker",{"_index":771,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["showalarmdurationpicker(alarm",{"_index":795,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["showalarmpicker",{"_index":772,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["showalarmpicker(alarm",{"_index":797,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["showsettings",{"_index":434,"title":{},"body":{"components/HomePage.html":{}}}],["siamo",{"_index":175,"title":{},"body":{"injectables/AlarmService.html":{}}}],["sistemare",{"_index":502,"title":{},"body":{"components/HomePage.html":{}}}],["size",{"_index":45,"title":{},"body":{"injectables/AdvertisementService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["size:2rem",{"_index":586,"title":{},"body":{"components/HomePage.html":{}}}],["size:3rem",{"_index":593,"title":{},"body":{"components/HomePage.html":{}}}],["size:4rem",{"_index":596,"title":{},"body":{"components/HomePage.html":{}}}],["size:5rem",{"_index":599,"title":{},"body":{"components/HomePage.html":{}}}],["size:7rem",{"_index":602,"title":{},"body":{"components/HomePage.html":{}}}],["smallicon",{"_index":701,"title":{},"body":{"injectables/NotificationService.html":{}}}],["soluzione",{"_index":170,"title":{},"body":{"injectables/AlarmService.html":{}}}],["sostituire",{"_index":974,"title":{},"body":{"injectables/StorageService.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["space",{"_index":579,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["spec\\.ts",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":738,"title":{},"body":{"classes/Settings.html":{}}}],["specified",{"_index":682,"title":{},"body":{"injectables/NotificationService.html":{}}}],["spostata",{"_index":837,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["src/.../constant.ts",{"_index":1186,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../default_val.ts",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interfaces.ts",{"_index":1184,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../keys.ts",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../labels.ts",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utility.ts",{"_index":1187,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":398,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/common/constant",{"_index":812,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["src/app/common/constant.ts",{"_index":1116,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/default_val",{"_index":112,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/common/default_val.ts",{"_index":1123,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/keys",{"_index":114,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/StorageService.html":{}}}],["src/app/common/keys.ts",{"_index":1124,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/labels",{"_index":116,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{}}}],["src/app/common/labels.ts",{"_index":1125,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/utility",{"_index":118,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/TimerService.html":{}}}],["src/app/common/utility.ts",{"_index":1126,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/history/history/history.component.ts",{"_index":415,"title":{},"body":{"components/HistoryComponent.html":{},"coverage.html":{}}}],["src/app/components/history/history/history.component.ts:12",{"_index":423,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/components/history/history/history.component.ts:8",{"_index":422,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/components/settingspopover/settings",{"_index":469,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["src/app/models/alarm",{"_index":119,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/SettingsPopoverComponent.html":{}}}],["src/app/models/alarms",{"_index":120,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/models/alarms.ts",{"_index":203,"title":{},"body":{"classes/Alarms.html":{},"coverage.html":{}}}],["src/app/models/alarms.ts:114",{"_index":218,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/alarms.ts:14",{"_index":231,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/alarms.ts:18",{"_index":233,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/alarms.ts:27",{"_index":227,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/alarms.ts:55",{"_index":210,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/alarms.ts:9",{"_index":207,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/alarms.ts:99",{"_index":208,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/interfaces",{"_index":964,"title":{},"body":{"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["src/app/models/interfaces.ts",{"_index":897,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/interfaces.ts:23",{"_index":1017,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/interfaces.ts:32",{"_index":1020,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/interfaces.ts:33",{"_index":1021,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/interfaces.ts:34",{"_index":1018,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/interfaces.ts:35",{"_index":1019,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/interfaces.ts:36",{"_index":1022,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/interfaces.ts:37",{"_index":1023,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/pickeroption.ts",{"_index":725,"title":{},"body":{"interfaces/PickerColumnOption.html":{},"coverage.html":{}}}],["src/app/models/settings",{"_index":810,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["src/app/models/settings.ts",{"_index":727,"title":{},"body":{"classes/Settings.html":{},"coverage.html":{}}}],["src/app/models/settings.ts:10",{"_index":732,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/models/settings.ts:37",{"_index":734,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/models/settings.ts:83",{"_index":736,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/pages/home/home",{"_index":639,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":631,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":425,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:147",{"_index":453,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:163",{"_index":445,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:176",{"_index":448,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:21",{"_index":459,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:22",{"_index":465,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:23",{"_index":464,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:24",{"_index":463,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:25",{"_index":466,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:27",{"_index":440,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:39",{"_index":462,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:40",{"_index":461,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:41",{"_index":460,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:66",{"_index":457,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:76",{"_index":441,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.resolve.ts",{"_index":646,"title":{},"body":{"guards/HomeResolver.html":{},"coverage.html":{}}}],["src/app/pages/home/home.resolve.ts:13",{"_index":655,"title":{},"body":{"guards/HomeResolver.html":{}}}],["src/app/pages/home/home.resolve.ts:6",{"_index":650,"title":{},"body":{"guards/HomeResolver.html":{}}}],["src/app/service/advertisement/advertisement.service",{"_index":472,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/service/advertisement/advertisement.service.ts",{"_index":6,"title":{},"body":{"injectables/AdvertisementService.html":{},"coverage.html":{}}}],["src/app/service/advertisement/advertisement.service.ts:11",{"_index":19,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["src/app/service/advertisement/advertisement.service.ts:19",{"_index":15,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["src/app/service/advertisement/advertisement.service.ts:7",{"_index":14,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["src/app/service/alarm/alarm.service",{"_index":473,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["src/app/service/alarm/alarm.service.ts",{"_index":63,"title":{},"body":{"injectables/AlarmService.html":{},"coverage.html":{}}}],["src/app/service/alarm/alarm.service.ts:109",{"_index":91,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:15",{"_index":80,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:21",{"_index":110,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:25",{"_index":101,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:29",{"_index":102,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:33",{"_index":99,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:69",{"_index":104,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:84",{"_index":103,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:89",{"_index":108,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alert/alert.service",{"_index":474,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["src/app/service/alert/alert.service.ts",{"_index":288,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["src/app/service/alert/alert.service.ts:25",{"_index":303,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/service/alert/alert.service.ts:52",{"_index":313,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/service/alert/alert.service.ts:7",{"_index":294,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/service/alert/alert.service.ts:70",{"_index":299,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/service/alert/alert.service.ts:9",{"_index":314,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/service/notification/notification.service.ts",{"_index":661,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/service/notification/notification.service.ts:13",{"_index":687,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:14",{"_index":688,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:15",{"_index":670,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:22",{"_index":672,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:51",{"_index":677,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:56",{"_index":683,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:63",{"_index":674,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:73",{"_index":679,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/storage/storage.service",{"_index":475,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["src/app/service/storage/storage.service.ts",{"_index":916,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/service/storage/storage.service.ts:112",{"_index":945,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:128",{"_index":947,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:14",{"_index":963,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:144",{"_index":948,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:15",{"_index":932,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:169",{"_index":942,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:176",{"_index":943,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:183",{"_index":939,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:192",{"_index":936,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:199",{"_index":940,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:208",{"_index":938,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:219",{"_index":934,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:26",{"_index":949,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:47",{"_index":953,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:54",{"_index":954,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:65",{"_index":957,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:79",{"_index":960,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:93",{"_index":962,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/timer/timer.service",{"_index":476,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{}}}],["src/app/service/timer/timer.service.ts",{"_index":1024,"title":{},"body":{"injectables/TimerService.html":{},"coverage.html":{}}}],["src/app/service/timer/timer.service.ts:106",{"_index":1058,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:115",{"_index":1044,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:131",{"_index":1041,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:14",{"_index":1066,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:155",{"_index":1047,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:159",{"_index":1048,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:16",{"_index":1073,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:163",{"_index":1045,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:167",{"_index":1046,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:17",{"_index":1075,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:174",{"_index":1049,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:18",{"_index":1069,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:181",{"_index":1051,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:19",{"_index":1067,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:20",{"_index":1063,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:203",{"_index":1050,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:21",{"_index":1072,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:22",{"_index":1074,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:23",{"_index":1070,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:24",{"_index":1068,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:26",{"_index":1040,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:29",{"_index":1065,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:30",{"_index":1071,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:31",{"_index":1064,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:56",{"_index":1054,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:77",{"_index":1055,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:89",{"_index":1053,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1148,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1150,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1151,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":146,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["start/stop",{"_index":442,"title":{},"body":{"components/HomePage.html":{}}}],["started",{"_index":430,"title":{"index.html":{}},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{}}}],["startedlist",{"_index":1026,"title":{},"body":{"injectables/TimerService.html":{}}}],["starting",{"_index":144,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{}}}],["startstoptimer",{"_index":435,"title":{},"body":{"components/HomePage.html":{}}}],["state",{"_index":653,"title":{},"body":{"guards/HomeResolver.html":{}}}],["statements",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":896,"title":{"interfaces/Status.html":{}},"body":{"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statusjson",{"_index":991,"title":{},"body":{"injectables/StorageService.html":{}}}],["still",{"_index":673,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/TimerService.html":{}}}],["stop",{"_index":455,"title":{},"body":{"components/HomePage.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stopped",{"_index":431,"title":{},"body":{"components/HomePage.html":{}}}],["stoppedduration",{"_index":1027,"title":{},"body":{"injectables/TimerService.html":{}}}],["stoppedduration:any",{"_index":1078,"title":{},"body":{"injectables/TimerService.html":{}}}],["stoppedlist",{"_index":1028,"title":{},"body":{"injectables/TimerService.html":{}}}],["stopping",{"_index":151,"title":{},"body":{"injectables/AlarmService.html":{}}}],["storage",{"_index":158,"title":{},"body":{"injectables/AlarmService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["storage.get({key",{"_index":972,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.set",{"_index":987,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage/storage.service",{"_index":121,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/TimerService.html":{}}}],["storageservice",{"_index":79,"title":{"injectables/StorageService.html":{}},"body":{"injectables/AlarmService.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["stored",{"_index":782,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["str",{"_index":852,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["string",{"_index":85,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["strong",{"_index":557,"title":{},"body":{"components/HomePage.html":{}}}],["styles",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["styleurls",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["subheader",{"_index":302,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{}}}],["subscribe",{"_index":41,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/TimerService.html":{}}}],["succeded",{"_index":214,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["sun",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1193,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":308,"title":{},"body":{"injectables/AlertService.html":{}}}],["svg",{"_index":1194,"title":{},"body":{"modules.html":{}}}],["t",{"_index":510,"title":{},"body":{"components/HomePage.html":{}}}],["table",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["templateurl",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["temporary",{"_index":780,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["testingdevices",{"_index":37,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["text",{"_index":323,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"interfaces/PickerColumnOption.html":{},"components/SettingsPopoverComponent.html":{}}}],["text:'ok",{"_index":849,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["then(res",{"_index":306,"title":{},"body":{"injectables/AlertService.html":{},"guards/HomeResolver.html":{}}}],["this._alarms",{"_index":125,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{}}}],["this._alarms.clear",{"_index":129,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this._alarms.filter(x",{"_index":263,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms.foreach(alarm",{"_index":243,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms.length",{"_index":236,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms.push(alarm",{"_index":133,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this._alarms.push(end",{"_index":155,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this._alarms.push(pause",{"_index":254,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms.push(start",{"_index":150,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this._alarms.sort((a",{"_index":277,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms.update(value",{"_index":162,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this._alarms[currentidx].update(value",{"_index":246,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms[idx].update(value",{"_index":240,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms[this._alarms.length",{"_index":258,"title":{},"body":{"classes/Alarms.html":{}}}],["this._id",{"_index":700,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this._startstoptxt",{"_index":498,"title":{},"body":{"components/HomePage.html":{}}}],["this.advertisementservice.banner",{"_index":483,"title":{},"body":{"components/HomePage.html":{}}}],["this.advertisementservice.initialize",{"_index":482,"title":{},"body":{"components/HomePage.html":{}}}],["this.alarms",{"_index":816,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.alarms.filter(x",{"_index":750,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.find(x",{"_index":754,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.length",{"_index":745,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.push(end",{"_index":741,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.push(pause",{"_index":751,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.push(start",{"_index":740,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.sort((a",{"_index":752,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.splice(idx,1",{"_index":755,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms[idx].index",{"_index":743,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms[idx].update(val",{"_index":141,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.alarms[idx].value",{"_index":742,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms[this.alarms.length",{"_index":749,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarmservice.getalarms",{"_index":817,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.alarmservice.getcurrenttimeindex",{"_index":509,"title":{},"body":{"components/HomePage.html":{}}}],["this.alarmservice.updatealarm(this.alarmtmpvalue",{"_index":840,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.alarmtmpindex",{"_index":831,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.alarmtmpvalue",{"_index":830,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.alert.presentconfirmalert(msg",{"_index":529,"title":{},"body":{"components/HomePage.html":{}}}],["this.alert.presentwarningalert(res.msg",{"_index":858,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.alertcontroller.create",{"_index":321,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.blanktime",{"_index":1103,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.calcdiff",{"_index":1100,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.clickcounter",{"_index":537,"title":{},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{}}}],["this.convertstr2date(this.status.timelist.start",{"_index":1005,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.convertstr2date(this.status.timelist.stop",{"_index":1007,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.diff",{"_index":908,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["this.diffms",{"_index":909,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["this.dismissclick",{"_index":841,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.getdelayedtime",{"_index":709,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.getstoredalarms",{"_index":123,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.getstoredstatus",{"_index":981,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.initializesettings",{"_index":966,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.initializestatus",{"_index":967,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.istimeractive",{"_index":1106,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.loaddefaultsettings",{"_index":969,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.loadsettings",{"_index":814,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.myservice.presentconfirmalert('message",{"_index":305,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.notification",{"_index":695,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.notificationservice.addlocalnotification(msg",{"_index":1108,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.notificationservice.getpending",{"_index":1109,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.offset",{"_index":486,"title":{},"body":{"components/HomePage.html":{}}}],["this.onpause",{"_index":1079,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.onresume",{"_index":1080,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.pickercontroller.create(options",{"_index":868,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.platform.ready",{"_index":657,"title":{},"body":{"guards/HomeResolver.html":{},"injectables/StorageService.html":{}}}],["this.popovercontroller.create",{"_index":538,"title":{},"body":{"components/HomePage.html":{}}}],["this.popovercontroller.dismiss",{"_index":848,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.presenttoast(msg",{"_index":714,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.reset",{"_index":530,"title":{},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{}}}],["this.running",{"_index":1085,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.save",{"_index":159,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.savesettings(this.settings",{"_index":978,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.setdefaultalarms",{"_index":126,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.settings",{"_index":824,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["this.settings.addalarm(str",{"_index":855,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.settings.alarms",{"_index":823,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["this.settings.alarms.length",{"_index":1010,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.settings.alarms[end",{"_index":1011,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.settings.alarms[idx",{"_index":1009,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.settings.deletealarm(alarm",{"_index":846,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.settings.updatealaram(time",{"_index":826,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.showalarmdurationpicker",{"_index":857,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.showalarmpicker(alarm",{"_index":844,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.start",{"_index":906,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["this.started",{"_index":1092,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.startstoptimer",{"_index":525,"title":{},"body":{"components/HomePage.html":{}}}],["this.status",{"_index":980,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.status.timelist.start",{"_index":1004,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.status.timelist.stop",{"_index":1006,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.stop",{"_index":907,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["this.stoppedduration",{"_index":1096,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.storageservice.getalarmbyindex(this.timerservice.clickcounter",{"_index":501,"title":{},"body":{"components/HomePage.html":{}}}],["this.storageservice.getalarmcount",{"_index":511,"title":{},"body":{"components/HomePage.html":{}}}],["this.storageservice.getlastalarm().index",{"_index":522,"title":{},"body":{"components/HomePage.html":{}}}],["this.storageservice.getsettings",{"_index":847,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.storageservice.getstatus",{"_index":1082,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.storageservice.getstoreddata(keys.alarms",{"_index":127,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.storageservice.savedata(this._alarms",{"_index":160,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.storageservice.savestatus(status",{"_index":1105,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.time",{"_index":1102,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timebegan",{"_index":1087,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timelist",{"_index":495,"title":{},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{}}}],["this.timelist.start.length",{"_index":1111,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timelist.start.push(new",{"_index":1098,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timelist.start[0",{"_index":1088,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timelist.stop.push(this.timestopped",{"_index":1099,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timelist.stop[this.timelist.stop.length",{"_index":1090,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timerservice",{"_index":494,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.clickcounter",{"_index":514,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.gettimelist",{"_index":533,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.isrunning",{"_index":499,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.reset",{"_index":535,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.start",{"_index":532,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.stop",{"_index":531,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.timelist",{"_index":496,"title":{},"body":{"components/HomePage.html":{}}}],["this.timestopped",{"_index":1089,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timetoindex(datestr",{"_index":201,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.timetoindex(value",{"_index":242,"title":{},"body":{"classes/Alarms.html":{}}}],["this.tmpsettings.alarms",{"_index":822,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.total",{"_index":910,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["this.totalms",{"_index":911,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["this.updategui",{"_index":497,"title":{},"body":{"components/HomePage.html":{}}}],["this_expr",{"_index":467,"title":{},"body":{"components/HomePage.html":{}}}],["thu",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":145,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["timebegan",{"_index":1029,"title":{},"body":{"injectables/TimerService.html":{}}}],["timecontainer",{"_index":582,"title":{},"body":{"components/HomePage.html":{}}}],["timelist",{"_index":432,"title":{"classes/TimeList.html":{}},"body":{"components/HomePage.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["timelistcontainer",{"_index":603,"title":{},"body":{"components/HomePage.html":{}}}],["timenumber",{"_index":286,"title":{},"body":{"classes/Alarms.html":{}}}],["timer",{"_index":443,"title":{},"body":{"components/HomePage.html":{},"injectables/NotificationService.html":{},"injectables/TimerService.html":{}}}],["timerfab",{"_index":621,"title":{},"body":{"components/HomePage.html":{}}}],["timerfabtxt",{"_index":623,"title":{},"body":{"components/HomePage.html":{}}}],["timerservice",{"_index":438,"title":{"injectables/TimerService.html":{}},"body":{"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"injectables/TimerService.html":{},"coverage.html":{},"overview.html":{}}}],["timerservice.gettime",{"_index":545,"title":{},"body":{"components/HomePage.html":{}}}],["timeslist",{"_index":609,"title":{},"body":{"components/HomePage.html":{}}}],["timestext",{"_index":615,"title":{},"body":{"components/HomePage.html":{}}}],["timestopped",{"_index":1030,"title":{},"body":{"injectables/TimerService.html":{}}}],["timestopped:any",{"_index":1077,"title":{},"body":{"injectables/TimerService.html":{}}}],["timestr",{"_index":225,"title":{},"body":{"classes/Alarms.html":{}}}],["timestr.replace",{"_index":284,"title":{},"body":{"classes/Alarms.html":{}}}],["timestr.value",{"_index":285,"title":{},"body":{"classes/Alarms.html":{}}}],["timetoindex",{"_index":206,"title":{},"body":{"classes/Alarms.html":{}}}],["timetoindex(timestr",{"_index":217,"title":{},"body":{"classes/Alarms.html":{}}}],["timetostring(alarmvalue",{"_index":747,"title":{},"body":{"classes/Settings.html":{}}}],["timetostring(val",{"_index":744,"title":{},"body":{"classes/Settings.html":{}}}],["tipo",{"_index":1002,"title":{},"body":{"injectables/StorageService.html":{}}}],["title",{"_index":696,"title":{},"body":{"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{}}}],["tmptime",{"_index":282,"title":{},"body":{"classes/Alarms.html":{}}}],["today",{"_index":519,"title":{},"body":{"components/HomePage.html":{}}}],["todo",{"_index":134,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["top",{"_index":553,"title":{},"body":{"components/HomePage.html":{}}}],["total",{"_index":914,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["totalms",{"_index":915,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["tracked",{"_index":1107,"title":{},"body":{"injectables/TimerService.html":{}}}],["transform",{"_index":555,"title":{},"body":{"components/HomePage.html":{},"interfaces/PickerColumnOption.html":{}}}],["translatey",{"_index":556,"title":{},"body":{"components/HomePage.html":{}}}],["translucent",{"_index":539,"title":{},"body":{"components/HomePage.html":{}}}],["tree",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["trovare",{"_index":169,"title":{},"body":{"injectables/AlarmService.html":{}}}],["true",{"_index":36,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"classes/Settings.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["tue",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tutte",{"_index":999,"title":{},"body":{"injectables/StorageService.html":{}}}],["type",{"_index":83,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof(alarm",{"_index":251,"title":{},"body":{"classes/Alarms.html":{}}}],["una",{"_index":165,"title":{},"body":{"injectables/AlarmService.html":{}}}],["unknown",{"_index":684,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/StorageService.html":{}}}],["up",{"_index":452,"title":{},"body":{"components/HomePage.html":{}}}],["update",{"_index":136,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{}}}],["update(value",{"_index":226,"title":{},"body":{"classes/Alarms.html":{}}}],["updatealaram(val",{"_index":140,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{}}}],["updatealarm",{"_index":75,"title":{},"body":{"injectables/AlarmService.html":{}}}],["updatealarm(value",{"_index":106,"title":{},"body":{"injectables/AlarmService.html":{}}}],["updated",{"_index":230,"title":{},"body":{"classes/Alarms.html":{}}}],["updategui",{"_index":436,"title":{},"body":{"components/HomePage.html":{}}}],["use",{"_index":304,"title":{},"body":{"injectables/AlertService.html":{}}}],["useclass",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":220,"title":{},"body":{"classes/Alarms.html":{}}}],["user",{"_index":484,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["utility",{"_index":117,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["utility.gettime(24",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utility.gettime(60",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utility.zeroprefix(hour",{"_index":197,"title":{},"body":{"injectables/AlarmService.html":{}}}],["utility.zeroprefix(min",{"_index":199,"title":{},"body":{"injectables/AlarmService.html":{}}}],["val",{"_index":139,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{}}}],["val.detail.value",{"_index":825,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["value",{"_index":86,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.hours.value",{"_index":853,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["value.minutes.value",{"_index":854,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["values",{"_index":143,"title":{},"body":{"injectables/AlarmService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["var",{"_index":167,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["variable",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1202,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":100,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["wait",{"_index":311,"title":{},"body":{"injectables/AlertService.html":{}}}],["want",{"_index":528,"title":{},"body":{"components/HomePage.html":{}}}],["wed",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["white",{"_index":585,"title":{},"body":{"components/HomePage.html":{}}}],["width",{"_index":588,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["wooops",{"_index":310,"title":{},"body":{"injectables/AlertService.html":{}}}],["working",{"_index":520,"title":{},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{}}}],["works",{"_index":424,"title":{},"body":{"components/HistoryComponent.html":{}}}],["wrap",{"_index":892,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["x.index",{"_index":264,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["year",{"_index":704,"title":{},"body":{"injectables/NotificationService.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["yearmonth",{"_index":902,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["yyyy",{"_index":901,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["zero",{"_index":1104,"title":{},"body":{"injectables/TimerService.html":{}}}],["zeroprefix",{"_index":1039,"title":{},"body":{"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["zeroprefix(num",{"_index":1056,"title":{},"body":{"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["zeros",{"_index":1059,"title":{},"body":{"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AdvertisementService.html":{"url":"injectables/AdvertisementService.html","title":"injectable - AdvertisementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdvertisementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Advertisement/advertisement.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                banner\n                            \n                            \n                                    Async\n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Advertisement/advertisement.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        banner\n                        \n                    \n                \n            \n            \n                \n                    \n                    banner()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Advertisement/advertisement.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Advertisement/advertisement.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AdMob, AdMobBannerSize, BannerAdOptions, BannerAdPluginEvents, BannerAdPosition, BannerAdSize } from '@capacitor-community/admob';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdvertisementService {\n\n  constructor() { }\n  \n  async initialize(): Promise {\n     AdMob.initialize({\n       requestTrackingAuthorization: true,\n      testingDevices: ['2077ef9a63d2b398840261c8221a0c9b'],\n      initializeForTesting: true,\n    });\n  }\n  \n  async banner(): Promise {\n    AdMob.addListener(BannerAdPluginEvents.Loaded, () => {\n      // Subscribe Banner Event Listener\n    });\n    \n    AdMob.addListener(BannerAdPluginEvents.SizeChanged, (size: AdMobBannerSize) => {\n      // Subscribe Change Banner Size\n    });\n    \n    const options: BannerAdOptions = {\n      adId: 'YOUR ADID',\n      adSize: BannerAdSize.BANNER,\n      position: BannerAdPosition.BOTTOM_CENTER,\n      margin: 0,\n      // isTesting: true\n      // npa: true\n    };\n    AdMob.showBanner(options);\n  }\n  \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlarmService.html":{"url":"injectables/AlarmService.html","title":"injectable - AlarmService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlarmService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Alarm/alarm.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _alarms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createAlarm\n                            \n                            \n                                    Public\n                                GetStoredAlarms\n                            \n                            \n                                    Public\n                                Reset\n                            \n                            \n                                    Public\n                                ResetDefault\n                            \n                            \n                                    Public\n                                Save\n                            \n                            \n                                    Private\n                                SetDefaultAlarms\n                            \n                            \n                                    Public\n                                updateAlarm\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Alarms\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Alarm/alarm.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createAlarm\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAlarm(key: string, value: string, isPause: boolean, duration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        Create a new Alarm\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                    \n                                \n                                \n                                    isPause\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                    \n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Alarm\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        GetStoredAlarms\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetStoredAlarms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Reset\n                        \n                    \n                \n            \n            \n                \n                    \n                    Reset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ResetDefault\n                        \n                    \n                \n            \n            \n                \n                    \n                    ResetDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Save\n                        \n                    \n                \n            \n            \n                \n                    \n                    Save()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        SetDefaultAlarms\n                        \n                    \n                \n            \n            \n                \n                    \n                    SetDefaultAlarms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:69\n                \n            \n\n\n            \n                \n                    Set default alarm\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateAlarm\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAlarm(value: string, idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _alarms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Alarms\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Alarm/alarm.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Alarms\n                    \n                \n\n                \n                    \n                        getAlarms()\n                    \n                \n                            \n                                \n                                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DEFAULT_VAL } from 'src/app/COMMON/DEFAULT_VAL';\nimport { KEYS } from 'src/app/COMMON/KEYS';\nimport { LABELS } from 'src/app/COMMON/LABELS';\nimport { Utility } from 'src/app/COMMON/Utility';\nimport { Alarm } from 'src/app/MODELS/Alarm';\nimport { Alarms } from 'src/app/MODELS/alarms';\nimport { StorageService } from '../Storage/storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlarmService {\n  \n  private _alarms?: Alarms;\n  \n  constructor(private storageService: StorageService) { \n    this.GetStoredAlarms();\n  }\n\n  public get Alarms(): Alarms {\n    return this._alarms;\n  }\n\n  public Reset() {\n    this.GetStoredAlarms();\n  }\n\n  public ResetDefault() {\n    this.SetDefaultAlarms();\n  }\n\n  public GetStoredAlarms() {\n    this.storageService.getStoredData(KEYS.ALARMS)\n    .then( res => {\n      if (res == null) {\n        this.SetDefaultAlarms(); \n      } else {\n        this._alarms.clear();\n        res.forEach(savedAlarm => {\n          let alarm = new Alarm(savedAlarm.key, savedAlarm.value);\n          this._alarms.push(alarm);\n        });\n      }\n    })\n  }\n\n  // ToDo\n  // miglirabole\n  // /**\n  // * Update Alarm by positional index\n  // * @param val string\n  // * @param idx number\n  // */\n  //  public updateAlaram(val: string, idx: number) {\n  //   this.alarms[idx].update(val);\n  // };\n\n\n\n\n\n\n\n\n  /**\n   * Set default alarm\n   */\n  private SetDefaultAlarms() {\n    console.log('Loading default alarm values...');\n    this._alarms.clear();\n    // Default starting time\n    const start: Alarm = new Alarm(LABELS.START, DEFAULT_VAL.START, false);\n    this._alarms.push(start);\n    // Default stopping time\n    const end: Alarm = new Alarm(LABELS.STOP, DEFAULT_VAL.STOP, false);\n    this._alarms.push(end);\n    console.log('Default alarms: ', this._alarms);\n    // Saving on storage\n    this.Save();\n\n  }\n  \n  public Save() {\n    this.storageService.SaveData(this._alarms, KEYS.ALARMS);\n  }\n\n\n  public updateAlarm(value: string, idx: number = null) {\n    if (idx != null) {\n      this._alarms.update(value);\n    }\n    else {\n\n    }\n  }\n\n  // ToDo\n  // deve diventare una insert/add alarm\n\n  /**\n  * \n  * @param key Create a new Alarm\n  * @param value \n  * @param isPause \n  * @param duration \n  * @returns \n  */\n  public createAlarm (key: string = null, value: string = null, isPause: boolean = null, duration: number = null): Alarm {\n    var alarm: Alarm = new Alarm(key, value, true); \n    return alarm;\n  }\n  \n  \n\n  \n  \n  \n  \n  \n  \n  // ToDo\n  // trovare una soluzione differente per capire se siamo dentro a fuori il range degli allarmi\n  // per poi gestre i messaggi\n\n  // /**\n  //  * \n  //  * Get the current hour and minutes as number (ex. 13:15 => 1315)\n  //  */\n  //  getCurrentTimeIndex() {\n  //   let current = new Date();\n  //   let hour = current.getHours()\n  //   let min = current.getMinutes()\n  //   let dateStr = Utility.zeroPrefix(hour, 2) + \":\" + Utility.zeroPrefix(min, 2);\n  //   let dateIdx = this.timeToIndex(dateStr);\n  //   return dateIdx;\n  // }\n  \n  \n  \n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Alarms.html":{"url":"classes/Alarms.html","title":"class - Alarms","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Alarms\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/alarms.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _alarms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                push\n                            \n                            \n                                    Private\n                                timeToIndex\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Alarms\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/MODELS/alarms.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _alarms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Alarm[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/alarms.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/alarms.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        push\n                        \n                    \n                \n            \n            \n                \n                    \n                    push(alarm: string | Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/alarms.ts:55\n                \n            \n\n\n            \n                \n                    Add a nex alarm to the alarm array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                            string | Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { succeded: boolean; msg: string; }\n\n                    \n                    \n                        Object {succeded: boolean, msg: string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        timeToIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    timeToIndex(timeStr: string | Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/alarms.ts:114\n                \n            \n\n\n            \n                \n                    Convert the time value from string to number, used as index\nex.\n12:00 => 1200\n04:00 => 400\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeStr\n                                    \n                                            string | Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(value: string | Alarm, idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/alarms.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        if passed, the Alarm at selected index will be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Alarms\n                    \n                \n\n                \n                    \n                        getAlarms()\n                    \n                \n                            \n                                \n                                    Defined in src/app/MODELS/alarms.ts:14\n                                \n                            \n\n                \n                    \n                        setAlarms(alarms: Alarm[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/MODELS/alarms.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            alarms\n                                                    \n                                                            \n                                                                        Alarm[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { KEYS } from 'src/app/COMMON/KEYS';\nimport { LABELS } from 'src/app/COMMON/LABELS';\nimport { Utility } from 'src/app/COMMON/Utility';\nimport { Alarm } from 'src/app/MODELS/Alarm';\n\n\nexport class Alarms {\n  \n  private _alarms?: Alarm[] = [];\n  \n  constructor() { \n  }\n  \n  public get Alarms(): Alarm[] {\n    return this._alarms;\n  }\n  \n  public set Alarms(alarms: Alarm[]) {\n    this._alarms = alarms;\n  }\n  \n  /**\n  * \n  * @param value \n  * @param idx if passed, the Alarm at selected index will be updated\n  */\n  public update(value: string | Alarm, idx: number = null) {\n    if (idx != null) {\n      if(idx > this._alarms.length) {\n        console.log(\"Index out of range\");\n        return;\n      }\n      console.log(\"Alarms updated...\");\n      this._alarms[idx].update(value);\n    }\n    else {\n      let currentIdx = this.timeToIndex(value);\n      this._alarms.forEach(alarm => {\n        if(currentIdx == alarm.index) {\n          this._alarms[currentIdx].update(value);\n          console.log(\"Alarms updated...\");\n          return;\n        }\n      });\n      console.log(\"Index out of range\");\n    }\n  }\n  \n  \n  /**\n  * Add a nex alarm to the alarm array\n  * @param alarmValue - string \"hh:mm\"\n  * @returns Object {succeded: boolean, msg: string}\n  */\n  public push(alarm: string | Alarm) {\n    \n    // create pause element\n    let pause: Alarm;\n    if (typeof(alarm) == \"string\") {\n      pause = new Alarm(LABELS.PAUSE, alarm, true);\n    } else {\n      pause = alarm;\n    }\n    console.log(pause);\n    \n    if (this._alarms.length == 0) {\n      this._alarms.push(pause);\n      return {succeded: true, msg:'Pause updated'};\n    }\n    \n    // ChecK if out of range\n    if (pause.index  this._alarms[this._alarms.length - 1].index) {\n      let msg = 'PAUSE OUT OF RANGE!';\n      console.log(msg);\n      return {succeded: false, msg: msg};\n    }\n    // check if there is an alarm with the same index\n    //     => same starting time\n    var existingAlarm = this._alarms.filter(x => x.index == pause.index);\n    if (existingAlarm.length > 0) {\n      return {succeded: false, msg:'A PAUSE at the same time ALREADY EXISTS!'};;\n    }\n    \n    // aggiungo l'elemento alla fine e poi riordino l'array\n    this._alarms.push(pause);\n    // reorder the alarm array\n    this._alarms.sort((a, b) => {\n      if (a.index && b.index) {\n        if (a.index > b.index) return 1;\n        if (a.index  1200 \n  *     04:00 => 400\n  * @param timeStr \n  * @returns \n  */\n  private timeToIndex(timeStr: string | Alarm): number {\n    let tmpTime: string;\n    if(typeof(timeStr) == \"string\") {\n      tmpTime = timeStr.replace(\":\", \"\");\n    } else {\n      tmpTime = timeStr.value;\n    }\n    var timeNumber: number = + tmpTime;\n    return timeNumber;\n  }\n  \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Alert/alert.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertController\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                presentConfirm\n                            \n                            \n                                    Async\n                                presentConfirmAlert\n                            \n                            \n                                    Async\n                                presentWarningAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Alert/alert.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        presentConfirm\n                        \n                    \n                \n            \n            \n                \n                    \n                    presentConfirm(header: any, message: any, cancelText: any, okText: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alert/alert.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    header\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cancelText\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    okText\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        presentConfirmAlert\n                        \n                    \n                \n            \n            \n                \n                    \n                    presentConfirmAlert(msg: string, subheader: string | null, header: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alert/alert.service.ts:25\n                \n            \n\n\n            \n                \n                    Use as:\nthis.myservice.presentConfirmAlert('message')\n.then(res => {\n  if (res) {\n    // codes\n  }\n});\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Are you sure?'\n                                    \n\n                                    \n                                        message to display\n\n                                    \n                                \n                                \n                                    subheader\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        (optional) subheader to display (Default null)\n\n                                    \n                                \n                                \n                                    header\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'WOOOPS'\n                                    \n\n                                    \n                                        (optional) header to display (Default 'WAIT')\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Use as:\nthis.myservice.presentConfirmAlert('message')\n.then(res => {\n  if (res) {\n    // codes\n  }\n});\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        presentWarningAlert\n                        \n                    \n                \n            \n            \n                \n                    \n                    presentWarningAlert(msg: string, subheader: string | null, header: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alert/alert.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Are you sure?'\n                                    \n\n                                \n                                \n                                    subheader\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    header\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'WOOOPS'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        alertController\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AlertController\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Alert/alert.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(public alertController: AlertController) { }\n\n  /**\n   * \n   * @param msg message to display\n   * @param subheader (optional) subheader to display (Default null)\n   * @param header (optional) header to display (Default 'WAIT')\n   * @returns \n   * Use as:\n   * this.myservice.presentConfirmAlert('message')\n   * .then(res => {\n   *   if (res) {\n   *     // codes\n   *   }\n   * });\n   */\n  async presentConfirmAlert(msg: string = 'Are you sure?', subheader: string | null = null, header: string = 'WOOOPS'): Promise {\n    return new Promise(async (resolve) => {\n      const alert = await this.alertController.create({\n        header: header,\n        subHeader: subheader,\n        message: msg,\n        buttons: [\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: (cancel) => {\n              resolve(false);\n            }\n          }, {\n            text: 'Continue',\n            handler: (ok) => {\n              resolve(true);\n            }\n          }\n        ]\n      });\n      alert.present();\n    });\n  }\n\n\n  async presentWarningAlert(msg: string = 'Are you sure?', subheader: string | null = null, header: string = 'WOOOPS'): Promise {\n    return new Promise(async (resolve) => {\n      const alert = await this.alertController.create({\n        header: header,\n        subHeader: subheader,\n        message: msg,\n        buttons: [\n          {\n            text: 'OK',\n            role: 'cancel',\n            cssClass: 'secondary',\n          }\n        ]\n      });\n      alert.present();\n    });\n  }\n\n  async presentConfirm(header: any, message: any,cancelText: any,okText: any): Promise {\n    return new Promise(async (resolve) => {\n      const alert = await this.alertController.create({\n        header: header,\n        message: message,\n        buttons: [\n          {\n            text: cancelText,\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: (cancel) => {\n              resolve('cancel');\n            }\n          }, {\n            text: okText,\n            handler: (ok) => {\n              resolve('ok');\n            }\n          }\n        ]\n      });\n      alert.present();\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { StorageService } from './SERVICE/Storage/storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n  constructor(private storageService: StorageService) { }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HistoryComponent', 'selector': 'app-history'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'SettingsPopoverComponent', 'selector': 'app-settings-popover'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [\n    BrowserModule, \n    IonicModule.forRoot(), \n    AppRoutingModule\n  ],\n  providers: [{ provide: RouteReuseStrategy, useClass: IonicRouteStrategy }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    loadChildren: () => \"import('./PAGES/home/home.module').then( m => m.HomePageModule)\"\n  },\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoryComponent.html":{"url":"components/HistoryComponent.html","title":"component - HistoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HistoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/COMPONENTS/history/history/history.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-history\n            \n\n            \n                styleUrls\n                ./history.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./history.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/COMPONENTS/history/history/history.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/history/history/history.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.scss'],\n})\nexport class HistoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n\n    \n\n    \n        \n  history works!\n\n\n    \n\n    \n                \n                    ./history.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  history works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HistoryComponent', 'selector': 'app-history'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'SettingsPopoverComponent', 'selector': 'app-settings-popover'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HistoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/PAGES/home/home.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _startStopTxt\n                            \n                            \n                                    Public\n                                advertisementService\n                            \n                            \n                                    Public\n                                alert\n                            \n                            \n                                    Public\n                                alertController\n                            \n                            \n                                    Private\n                                offset\n                            \n                            \n                                    Private\n                                started\n                            \n                            \n                                    Private\n                                stopped\n                            \n                            \n                                    Private\n                                time\n                            \n                            \n                                    Private\n                                timeList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                OnFabTimerClick\n                            \n                            \n                                Reset\n                            \n                            \n                                    Async\n                                showSettings\n                            \n                            \n                                StartStopTimer\n                            \n                            \n                                UpdateGUI\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(timerService: TimerService, alarmService: AlarmService, popoverController: PopoverController, storageService: StorageService, alertController: AlertController, alert: AlertService, advertisementService: AdvertisementService)\n                    \n                \n                        \n                            \n                                Defined in src/app/PAGES/home/home.page.ts:27\n                            \n                        \n\n                \n                    \n                            CONSTRUCTOR\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timerService\n                                                  \n                                                        \n                                                                        TimerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                        AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverController\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alert\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        advertisementService\n                                                  \n                                                        \n                                                                        AdvertisementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        OnFabTimerClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    OnFabTimerClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:76\n                \n            \n\n\n            \n                \n                    Start/Stop timer function\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Reset\n                        \n                    \n                \n            \n            \n                \nReset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:163\n                \n            \n\n\n            \n                \n                    Reset timer and click counter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        showSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    showSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:176\n                \n            \n\n\n            \n                \n                    Open Setings pop-up\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StartStopTimer\n                        \n                    \n                \n            \n            \n                \nStartStopTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:147\n                \n            \n\n\n            \n                \n                    Sart or Stop timer,\nand increment click counter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateGUI\n                        \n                    \n                \n            \n            \n                \nUpdateGUI()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _startStopTxt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : LABELS.START\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        advertisementService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AdvertisementService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        alert\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AlertService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        alertController\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AlertController\n\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        offset\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        started\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stopped\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        timeList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimeList\n\n                    \n                \n                \n                    \n                        Default value : new TimeList()\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { Component } from '@angular/core';\nimport { AlertController, PopoverController } from '@ionic/angular';\nimport { LABELS } from 'src/app/COMMON/LABELS';\nimport { SettingsPopoverComponent } from 'src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component';\nimport { AdvertisementService } from 'src/app/SERVICE/Advertisement/advertisement.service';\nimport { AlarmService } from 'src/app/SERVICE/Alarm/alarm.service';\nimport { AlertService } from 'src/app/SERVICE/Alert/alert.service';\nimport { StorageService } from 'src/app/SERVICE/Storage/storage.service';\nimport { TimerService } from 'src/app/SERVICE/Timer/timer.service';\nimport { TimeList } from '../../MODELS/Interfaces';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n\n\n  private _startStopTxt: string = LABELS.START;\n  private time: string;\n  private stopped: Date[] = [];\n  private started: Date[] = [];\n  private timeList: TimeList = new TimeList();\n  \n  private offset;  // time offset between current time and alarm time\n\n  // private clickCounter: number = 0; // count the number of click on Start/Stop timer button\n\n  /**\n   * CONSTRUCTOR\n   */\n  constructor(\n    private timerService: TimerService,\n    private alarmService: AlarmService,\n    private popoverController: PopoverController,\n    private storageService: StorageService,\n    public alertController: AlertController,\n    public alert: AlertService,\n    public advertisementService: AdvertisementService\n  ) { \n\n    // this.advertisementService.initialize();\n    // this.advertisementService.banner();\n\n    \n    // ToDo\n    // let User manage the offset\n    this.offset = 15;\n\n    // ToDo\n    // recover time lists from timer service\n    // in case of app closed while running\n\n    // this.timerService. ...\n\n    this.timeList = this.timerService.timeList;\n\n    \n    this.UpdateGUI();\n\n  }\n\n\n  UpdateGUI() {\n    this._startStopTxt = this.timerService.isRunning() ? LABELS.STOP : LABELS.START;\n  }\n\n\n\n\n  /**\n   * Start/Stop timer function\n   */\n  async OnFabTimerClick() {\n    \n    // check for alarm\n    let alarm = this.storageService.getAlarmByIndex(this.timerService.clickCounter);\n\n    // ToDo\n    // sistemare questo discorso dell'indice per gestire l'if\n    let currentTime: number = 1; //this.alarmService.getCurrentTimeIndex();\n\n    if (alarm) {\n\n      let t = this.storageService.getAlarmCount();\n      console.log(t);\n      console.log('click count: ', this.timerService.clickCounter);\n\n\n      let msg = null;\n\n      console.log(\"Alarm: \", alarm);\n      console.log(\"Scheduled: \", alarm.index);\n      console.log(\"Current: \", currentTime);\n      // check if it is too late for today working day\n      if (currentTime > (this.storageService.getLastAlarm().index)) {\n        msg = \"You are out of your working hours!\";\n      }\n\n      if (currentTime  {\n        if (res) {\n          console.log('Confirmed');\n          this.StartStopTimer();\n\n\n\n        } else {\n          console.log('Canceled')\n        }\n      })\n\n\n    } \n    else if (this.timerService.clickCounter == this.storageService.getAlarmCount()) {\n      this.StartStopTimer();\n    }\n    \n    else {\n      // this.StartStopTimer();\n      let subheader = \"You are done for today!\";\n      let msg = \"Do you want to reset timer?\"\n      await this.alert.presentConfirmAlert(msg, subheader)\n      .then( res => {\n        if (res) {\n          console.log('Confirmed');\n          this.Reset();\n        } else {\n          console.log('Canceled')\n        }\n      })\n    }\n  }\n\n\n  /**\n   * Sart or Stop timer,\n   * and increment click counter\n   */\n  StartStopTimer() {\n    if (this.timerService.isRunning()) \n    {\n      this.timerService.stop();\n    } \n    else \n    {\n      this.timerService.start();\n    }\n    this.UpdateGUI();\n    this.timeList = this.timerService.GetTimeList();\n  }\n\n  /**\n   * Reset timer and click counter\n   */\n  Reset() {\n    console.log(\"Resetting...\");\n    this.timerService.reset();\n    this.timeList = this.timerService.GetTimeList();\n    // console.log(this.timeList)\n    // this.clickCounter = 0;\n  }\n\n\n\n  /**\n   * Open Setings pop-up\n   */\n  async showSettings() {\n    const popover = await this.popoverController.create({\n      component: SettingsPopoverComponent,\n      translucent: true\n    });\n    await popover.present();\n    const { role } = await popover.onDidDismiss();\n    console.log('onDidDismiss resolved with role', role);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      EchoTimer\n    \n    \n    \n      \n              \n      \n    \n  \n\n\n\n\n  \n\n    \n\n      \n      {{timerService.GetTime()}}\n\n      \n\n        \n          \n            Start\n          \n          \n            {{time | date : 'HH:mm'}}\n          \n        \n        \n        \n          \n            Stop\n          \n          \n              {{time | date : 'HH:mm'}}\n          \n        \n\n        \n          \n            Partial\n          \n          \n              {{time}}\n          \n        \n\n\n      \n\n    \n\n    \n    \n      \n        \n          {{_startStopTxt}}\n        \n      \n    \n      \n    \n    \n      Reset\n    \n\n  \n    \n\n  \n    \n\n    \n                \n                    home.page.scss\n                \n                #container {\n  text-align: center;\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n#container strong {\n  font-size: 20px;\n  line-height: 26px;\n}\n\n#container p {\n  font-size: 16px;\n  line-height: 22px;\n\n  color: #8c8c8c;\n\n  margin: 0;\n}\n\n#container a {\n  text-decoration: none;\n}\n\nion-header{\n  ion-icon{\n    font-size: 2rem;\n  }\n}\n\n.appContainer{\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  height: 100%;\n  .timeContainer{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 40%;\n    .time{\n      color: white;\n      font-size:2rem; // default val\n    }\n    @media(min-width: 350px) //if more than 350 px\n    {\n      .time{\n        font-size:3rem;\n      }\n    }\n    @media(min-width: 500px) //if more than 500 px\n    {\n      .time{\n        font-size:4rem;\n      }\n    }\n    @media(min-width: 600px) //if more than 600 px\n    {\n      .time{\n        font-size:5rem;\n      }\n    }\n    @media(min-width: 850px) //if more than 850 px\n    {\n      .time{\n        font-size:7rem;\n      }\n    }\n    .timeListContainer{\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n      height: 50%;\n      width: 100%;\n      // background-color: rgba(66, 65, 65, 0.795);\n      .timesList{\n        display: flex;\n        flex-direction: column;\n        // flex-grow: 1;\n        width: 50%;\n        overflow: hidden;\n        // background-color: rgba(48, 45, 45, 0.795);\n        .timesText{\n          margin: 0.5rem 1rem;\n        }\n      }\n      .left{\n        // background-color: rgba(51, 36, 36, 0.795);\n        align-items: flex-end;\n      }\n    }\n  }\n  \n  .fabContainer{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    height: 50%;\n    .timerFab{\n      width: 50vw;\n      height: 50vw;\n      .timerFabTxt{\n        font-size:2rem; // default val\n      }\n      @media(min-width: 350px) //if more than 350 px\n      {\n        .timerFabTxt{\n          font-size:3rem;\n        }\n      }\n      @media(min-width: 500px) //if more than 500 px\n      {\n        .timerFabTxt{\n          font-size:4rem;\n        }\n      }\n      @media(min-width: 600px) //if more than 600 px\n      {\n        .timerFabTxt{\n          font-size:5rem;\n        }\n      }\n      @media(min-width: 850px) //if more than 850 px\n      {\n        .timerFabTxt{\n          font-size:7rem;\n        }\n      }\n    }\n  }\n\n  .resetButtonContainer{\n    height: 10%;\n    ion-button {\n      height: 100%;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                EchoTimer                                                              {{timerService.GetTime()}}                                    Start                                {{time | date : \\'HH:mm\\'}}                                                        Stop                                  {{time | date : \\'HH:mm\\'}}                                                Partial                                  {{time}}                                                            {{_startStopTxt}}                                      Reset            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HistoryComponent', 'selector': 'app-history'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'SettingsPopoverComponent', 'selector': 'app-settings-popover'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nSettingsPopoverComponent\n\nSettingsPopoverComponent\n\nHomePageModule -->\n\nSettingsPopoverComponent->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/PAGES/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                        \n                            SettingsPopoverComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { SettingsPopoverComponent } from 'src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule\n  ],\n  declarations: [\n    HomePage,\n    SettingsPopoverComponent]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomePageRoutingModule\n\n\n\ncluster_HomePageRoutingModule_providers\n\n\n\n\nTimerService\n\nTimerService\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageRoutingModule -->\n\nTimerService->HomePageRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/PAGES/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TimerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TimerService } from 'src/app/SERVICE/Timer/timer.service';\nimport { HomePage } from './home.page';\nimport { HomeResolver } from './home.resolve';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n    resolve: {\n      bool: HomeResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    TimerService,\n    HomeResolver]\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/HomeResolver.html":{"url":"guards/HomeResolver.html","title":"guard - HomeResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    HomeResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/PAGES/home/home.resolve.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/PAGES/home/home.resolve.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resolve\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.resolve.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from \"@angular/router\";\nimport { Platform } from \"@ionic/angular\";\n\n@Injectable()\nexport class HomeResolver implements Resolve {\n\n    constructor(\n        private platform: Platform,\n        private router: Router\n    ) { }\n\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {        \n        this.platform.ready()\n        .then(res => {\n            if (res) {\n                console.log('Platform ready')\n                return true\n            }\n        })\n    }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Notification/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _ID\n                            \n                            \n                                    Private\n                                notification\n                            \n                            \n                                    Private\n                                notificationPromise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addLocalNotification\n                            \n                            \n                                Date2Id\n                            \n                            \n                                    Async\n                                deleteLocalNotification\n                            \n                            \n                                getDelayedTime\n                            \n                            \n                                    Async\n                                getPending\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Notification/notification.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addLocalNotification\n                        \n                    \n                \n            \n            \n                \n                    \n                    addLocalNotification(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Notification/notification.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Timer is still running'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Date2Id\n                        \n                    \n                \n            \n            \n                \nDate2Id()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Notification/notification.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        number of seconds from 1970\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteLocalNotification\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteLocalNotification()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Notification/notification.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDelayedTime\n                        \n                    \n                \n            \n            \n                \ngetDelayedTime(seconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Notification/notification.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        seconds to delay\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        delayed current time of specified seconds\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPending\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPending()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Notification/notification.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 439209432321129530\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Notification/notification.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Type :     LocalNotificationSchema\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Notification/notification.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notificationPromise\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Promise\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Notification/notification.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n// import { LocalNotification, Plugins } from '@capacitor/core';\n// const { LocalNotifications } = Plugins;\n\nimport { LocalNotifications, LocalNotificationSchema } from '@capacitor/local-notifications';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  private notification: LocalNotificationSchema;\n  private notificationPromise: Promise;\n  private _ID: number = 439209432321129530;\n\n  constructor() { }\n\n\n  \n\n  async addLocalNotification(msg: string = 'Timer is still running') {\n\n    this.notification = {\n      title: \"YOU ARE LUCKY\",\n      body: msg,\n      id: this._ID,\n      smallIcon: 'res://logo',\n      schedule: {\n        // every: \"day\",\n        // on: \t{ year: year, month: month, day: day, hour: hh, minute: mm },\n        at: this.getDelayedTime()\n      },\n      extra: {\n      }\n    };\n\n    console.log(\"Adding notification...\", this.notification);\n\n    await LocalNotifications.schedule({\n      notifications: [\n        this.notification\n      ]\n    });\n    \n    // let msg = 'Added notification at ';\n    // this.presentToast(msg);\n  }\n\n\n  async deleteLocalNotification() {\n    // await LocalNotifications.cancel(this._ID);\n  }\n\n\n  async getPending() {\n    return await LocalNotifications.getPending();\n  }\n  /**\n   * \n   * @returns number of seconds from 1970\n   */\n  Date2Id(): number {\n    let seconds = Math.floor(Date.now() / 1000);\n    return seconds;\n  }\n  \n  /**\n   * \n   * @param seconds seconds to delay\n   * @returns delayed current time of specified seconds\n   */\n  getDelayedTime(seconds:number = 1): Date {\n    var date = new Date();\n    // add a second\n    date.setDate(date.getTime() + seconds * 1000);\n    return date;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PickerColumnOption.html":{"url":"interfaces/PickerColumnOption.html","title":"interface - PickerColumnOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PickerColumnOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/PickerOption.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            duration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            transform\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transform:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PickerColumnOption {\n    text?: string;\n    value?: any;\n    disabled?: boolean;\n    duration?: number;\n    transform?: string;\n    selected?: boolean;\n  }\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Settings.html":{"url":"classes/Settings.html","title":"class - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/Settings.ts\n        \n\n\n            \n                Description\n            \n            \n                Settings contains:\n\nList of alarms\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alarms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAlarmn\n                            \n                            \n                                deleteAlarm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/MODELS/Settings.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        alarms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Alarm[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/Settings.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addAlarmn\n                        \n                    \n                \n            \n            \n                \naddAlarmn(alarmValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/Settings.ts:37\n                \n            \n\n\n            \n                \n                    Add a nex alarm to the alarm array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alarmValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nstring \"hh:mm\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { succeded: boolean; msg: string; }\n\n                    \n                    \n                        Object {succeded: boolean, msg: string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAlarm\n                        \n                    \n                \n            \n            \n                \ndeleteAlarm(alarm: Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/Settings.ts:83\n                \n            \n\n\n            \n                \n                    Delete a specific alarm from alarms array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                            Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        alarm to delete (type Alarm)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { succeded: boolean; msg: string; }\n\n                    \n                    \n                        Object {succeded: boolean, msg: string}\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LABELS } from \"../COMMON/LABELS\";\nimport { Alarm } from \"./Alarm\";\n\n/**\n * Settings contains:\n * 1. List of alarms\n */\nexport class Settings {\n    \n    alarms?: Alarm[] = [];\n    \n    constructor() {\n        \n        // const start = new Alarm(LABELS.START, DEFAULT_VAL.START, false);\n        // const end = new Alarm(LABELS.STOP, DEFAULT_VAL.STOP, false);\n\n        // this.alarms.push(start);\n        // this.alarms.push(end);\n    };\n\n\n    // /**\n    //  * Update Alarm by positional index\n    //  * @param val string\n    //  * @param idx number\n    //  */\n    // updateAlaram(val: string, idx: number) {\n    //     this.alarms[idx].value = val;\n    //     this.alarms[idx].index = timeToString(val);\n    // };\n\n    /**\n     * Add a nex alarm to the alarm array\n     * @param alarmValue - string \"hh:mm\"\n     * @returns Object {succeded: boolean, msg: string}\n     */\n    addAlarmn(alarmValue: string) {\n        // aggiungo l'elemento alla fine e poi riordino l'array\n        // const idx = this.alarms.length;\n        // create pause element\n\n        // const pause: Alarm = {\n        //     key: LABELS.PAUSE,\n        //     value: alarmValue,\n        //     index: timeToString(alarmValue),\n        //     enabled: false\n        // }\n        const pause: Alarm = new Alarm(LABELS.PAUSE, alarmValue, true);\n\n\n        console.log(pause);\n        // ChecK if out of range\n        if (pause.index  this.alarms[this.alarms.length - 1].index) {\n            let msg = 'PAUSE OUT OF RANGE!';\n            console.log(msg);\n            return {succeded: false, msg: msg};\n        }\n        // check if there is an alarm with the same index\n        //     => same starting time\n        var existingAlarm = this.alarms.filter(x => x.index == pause.index);\n        if (existingAlarm.length > 0) {\n            return {succeded: false, msg:'A PAUSE at the same time ALREADY EXISTS!'};;\n        }\n        // push the new alarm\n        this.alarms.push(pause);\n        // reorder the alarm array\n        this.alarms.sort((a, b) => {\n            if (a.index && b.index) {\n                if (a.index > b.index) return 1;\n                if (a.index  x.index == alarm.index);\n        // var f = this.alarms.find(x => x.index == alarm.index);\n        for (var idx = this.alarms.length - 1; idx >= 0; --idx) {\n            if (this.alarms[idx].index == alarm.index) {\n                this.alarms.splice(idx,1);\n                return {succeded: true, msg:'Alarm deleted'};\n            }\n        }\n        return {succeded: false, msg:'Alarm not deleted'};\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsPopoverComponent.html":{"url":"components/SettingsPopoverComponent.html","title":"component - SettingsPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsPopoverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-popover\n            \n\n            \n                styleUrls\n                ./settings-popover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-popover.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alarms\n                            \n                            \n                                    Private\n                                alarmTmp\n                            \n                            \n                                    Private\n                                alarmTmpIndex\n                            \n                            \n                                    Private\n                                alarmTmpValue\n                            \n                            \n                                    Public\n                                alert\n                            \n                            \n                                    Public\n                                alertController\n                            \n                            \n                                    Private\n                                customPickerOptions\n                            \n                            \n                                    Private\n                                days\n                            \n                            \n                                    Private\n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddPause\n                            \n                            \n                                    Async\n                                Cancel\n                            \n                            \n                                DeletePause\n                            \n                            \n                                    Async\n                                DismissClick\n                            \n                            \n                                    Async\n                                loadSettings\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTimeChange\n                            \n                            \n                                Save\n                            \n                            \n                                    Async\n                                showAlarmDurationPicker\n                            \n                            \n                                    Async\n                                showAlarmPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popoverController: PopoverController, storageService: StorageService, alarmService: AlarmService, pickerController: PickerController, alertController: AlertController, alert: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popoverController\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                        AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pickerController\n                                                  \n                                                        \n                                                                    PickerController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alert\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        AddPause\n                        \n                    \n                \n            \n            \n                \nAddPause(alarm: Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:91\n                \n            \n\n\n            \n                \n                    Add a pause to the time array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                            Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        Cancel\n                        \n                    \n                \n            \n            \n                \n                    \n                    Cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:82\n                \n            \n\n\n            \n                \n                    Calcel the current temporary user settings and reload stored settings\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeletePause\n                        \n                    \n                \n            \n            \n                \nDeletePause(alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:100\n                \n            \n\n\n            \n                \n                    Delete pause\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alarm\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        DismissClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    DismissClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:116\n                \n            \n\n\n            \n                \n                    Dismiss settings pop-over\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loadSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:108\n                \n            \n\n\n            \n                \n                    Load User Settings\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTimeChange\n                        \n                    \n                \n            \n            \n                \nonTimeChange(val, idx)\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:54\n                \n            \n\n\n            \n                \n                    Update time values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    val\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : string (HH:mm)\n\n                                    \n                                \n                                \n                                    idx\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : index of the Alarms array to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Save\n                        \n                    \n                \n            \n            \n                \nSave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:71\n                \n            \n\n\n            \n                \n                    Save new settings on the local storage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        showAlarmDurationPicker\n                        \n                    \n                \n            \n            \n                \n                    \n                    showAlarmDurationPicker(alarm: Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                            Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        showAlarmPicker\n                        \n                    \n                \n            \n            \n                \n                    \n                    showAlarmPicker(alarm: Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                            Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alarms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Alarm[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alarmTmp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Alarm\n\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alarmTmpIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alarmTmpValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        alert\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AlertService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        alertController\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AlertController\n\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        customPickerOptions\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        days\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CONSTANT.DAYS\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Settings\n\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlertController, PickerController, PopoverController } from '@ionic/angular';\nimport { Alarm } from 'src/app/MODELS/Alarm';\nimport { StorageService } from 'src/app/SERVICE/Storage/storage.service';\nimport { PickerOptions } from \"@ionic/core\";\nimport { Settings } from 'src/app/MODELS/Settings';\nimport { AlertService } from 'src/app/SERVICE/Alert/alert.service';\nimport { CONSTANT } from 'src/app/COMMON/CONSTANT';\nimport { AlarmService } from 'src/app/SERVICE/Alarm/alarm.service';\n\n@Component({\n  selector: 'app-settings-popover',\n  templateUrl: './settings-popover.component.html',\n  styleUrls: ['./settings-popover.component.scss'],\n})\nexport class SettingsPopoverComponent implements OnInit {\n\n  private customPickerOptions; \n  private settings: Settings;\n  private alarms: Alarm[];\n  private alarmTmp: Alarm;\n  private alarmTmpValue: string;\n  private alarmTmpIndex: number;\n  private days = CONSTANT.DAYS;\n\n\n  constructor(\n    private popoverController: PopoverController,\n    private storageService: StorageService,\n    private alarmService: AlarmService,\n    private pickerController: PickerController,\n    public alertController: AlertController,\n    public alert: AlertService\n  ) {}\n\n  ngOnInit() {\n    // console.log(\"Loading settings...\")\n    // this.loadSettings();\n    // console.log(this.settings);\n\n    // this.alarms = this.alarmService.GetAlarms();\n    // this.alarms = Object.assign([], this.alarmService.GetAlarms());\n    // this.alarms = [...this.alarmService.GetAlarms()];\n\n    //     console.log(this.alarms);\n\n  }\n\n  /**\n   * Update time values\n   * @param val : string (HH:mm)\n   * @param idx : index of the Alarms array to update\n   */\n  onTimeChange(val, idx) {\n    // Todo\n    // update alarm\n    // let copy = Object.assign({}, original );\n    // this.tmpSettings.alarms = Object.assign([], this.settings.alarms); //{...this.settings};\n    let time: string = val.detail.value;\n    // this.settings.updateAlaram(time, idx);\n    // alarm.update(val.detail.value);\n    console.log(val);\n    console.log(idx);\n    this.alarmTmpValue = time;\n    this.alarmTmpIndex  = idx;\n  }\n\n  /**\n   * Save new settings on the local storage\n   */\n  Save() {\n    // ToDo\n    // la logica di salvataggio deve essere spostata all'interno dell'alarm service \n\n    this.alarmService.updateAlarm(this.alarmTmpValue, this.alarmTmpIndex);\n    this.DismissClick();\n  }\n  \n  /**\n   * Calcel the current temporary user settings and reload stored settings\n   */\n  async Cancel() {\n    console.log(\"Cancel\")\n    this.DismissClick();\n  }\n\n\n  /**\n   * Add a pause to the time array\n   */\n  AddPause(alarm: Alarm = null) {\n    console.log(\"Selected alarm: \", alarm);\n    this.showAlarmPicker(alarm);\n  }\n\n  /**\n   * Delete pause\n   * @param alarm \n   */\n  DeletePause(alarm) {\n    console.log(alarm);\n    this.settings.deleteAlarm(alarm);\n  }\n\n  /**\n   * Load User Settings\n   */\n  async loadSettings() {\n    this.settings = this.storageService.getSettings();\n  }\n\n\n  /**\n   * Dismiss settings pop-over\n   */\n  async DismissClick() {\n    await this.popoverController.dismiss();\n  }\n\n\n\n\n\n  async showAlarmPicker(alarm: Alarm = null) {\n    let options: PickerOptions = {\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: 'cancel'\n        },\n        {\n          text:'Ok',\n          handler:(value:any) => {\n            // console.log(value);\n            var str: string = value.hours.value + ':' + value.minutes.value;\n            // let res = this.settings.addAlarm(str);\n\n            // if (res.succeded == false) {\n\n            // }\n            this.showAlarmDurationPicker();\n            // this.alert.presentWarningAlert(res.msg);\n            \n          }\n        }\n      ],\n      columns:[\n      {\n        name:'hours',\n        optionsWidth: '2rem',\n        align: 'right',\n        options: CONSTANT.MINUTES_OPTS\n      }\n      , {\n        name:'minutes',\n        optionsWidth: '2rem',\n        align: 'left',\n        // selectedIndex: alarm ? alarm.getMinutesIdex() : null,\n        options: CONSTANT.MINUTES_OPTS\n      }\n    ],\n    // cssClass: 'my-custom-picker',\n    };\n    let picker = await this.pickerController.create(options);\n    picker.present()\n  }\n\n\n\n  async showAlarmDurationPicker(alarm: Alarm = null) {\n    let options: PickerOptions = {\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: 'cancel'\n        },\n        {\n          text:'Ok',\n          handler:(value:any) => {\n            // console.log(value);\n            var str: string = value.hours.value + ':' + value.minutes.value;\n            // let res = this.settings.addAlarm(str);\n\n            // if (res.succeded == false) {\n\n            // }\n            // this.alert.presentWarningAlert(res.msg);\n            \n          }\n        }\n      ],\n      columns:[\n      {\n        name:'minutes',\n        prefix: 'Duration: ',\n        options: CONSTANT.MINUTES_OPTS\n      }\n    ],\n    // cssClass: 'my-custom-picker',\n    };\n    let picker = await this.pickerController.create(options);\n    picker.present()\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n    Settings\n  \n  \n  \n    \n    \n    \n      {{alarm.key}}\n      \n      \n    \n    \n    \n    \n      \n        \n          \n            \n              \n                {{alarm.key}}\n              \n              \n                {{alarm.value}}\n              \n                        \n          \n        \n      \n      \n      \n        Delete\n      \n    \n    \n  \n\n\n\n  \n  \n    \n      Add pause\n    \n  \n\n  \n  \n    \n      Repeat every\n    \n    \n      \n        \n          \n            {{day}}\n          \n          \n        \n      \n    \n  \n\n  \n  \n    \n      Cancel\n      OK\n    \n  \n\n\n    \n\n    \n                \n                    ./settings-popover.component.scss\n                \n                \n.settingsContainer{\n    \n    // background-color: rgb(20, 20, 20);\n    background-color: var(--ion-item-background, var(--ion-background-color, #fff));\n    \n    .title{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: 1rem;\n    }\n    \n    .buttonsContainer{\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        ion-buttons{\n            width: 100%;\n            ion-button{\n                width: 50%;\n                min-height: 3rem;\n            }\n        }\n    }\n    \n    \n    .addAlarmContainer {\n        min-height: 2rem;\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        ion-item {\n            width: 100%;\n            --inner-padding-end: 0px;\n            --padding-start: 0px;\n        }\n        ion-buttons{\n            width: 100%;\n            ion-button{\n                width: 100%;\n                min-height: 3rem;\n            }\n        }\n    }\n    \n    .alarm {\n        display: flex;\n        width: 100%;\n        justify-content: space-between;\n        padding: 1px 6px;\n    }\n    \n    .pickerClassName {\n        color: greenyellow;\n        background-color: honeydew;\n    }\n    \n    .checkbox-container {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        .checkbox-title {\n            margin: 5px;\n        }\n        .checkbox-list {\n            display: flex;\n            flex-direction: row;\n            flex-wrap: wrap;\n            align-content: center;\n            justify-content: flex-start;\n            width: 90%;\n            .checkbox {\n                display: flex;\n                flex-direction: row;\n                margin: 3px;\n                width: 3rem;\n                justify-content: flex-end;\n                .day-name {\n                    font-size: 0.9rem;\n                    margin-right: 1px;\n                }\n            }\n        }\n        \n    }\n \n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Settings                        {{alarm.key}}                                                                                              {{alarm.key}}                                            {{alarm.value}}                                                                                  Delete                              Add pause                    Repeat every                                            {{day}}                                                      Cancel      OK      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HistoryComponent', 'selector': 'app-history'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'SettingsPopoverComponent', 'selector': 'app-settings-popover'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Status.html":{"url":"interfaces/Status.html","title":"interface - Status","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Status\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/Interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            clickCounter\n                                        \n                                \n                                \n                                        \n                                            isRunning\n                                        \n                                \n                                \n                                        \n                                            timeList\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clickCounter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clickCounter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRunning\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isRunning:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeList:         TimeList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimeList\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum DateFormat {\n    Year = \"YYYY\",\n    YearMonth =\t\"YYYY-MM\",\n    HourMinute = \"HH:mm\",\n    HourMinuteSeconds = \"HH:mm:ss\"\n}\n\n// export enum SETTINGS {\n//     ALARMS = \"Alarms\"\n// }\n\nexport class TimeList {\n    constructor() {\n        this.start = [];\n        this.stop = [];\n        this.diff = [];\n        this.diffms = [];\n        this.total = null;\n        this.totalms = 0;\n    };\n    start?: Date[];\n    stop?: Date[];\n    diff?: string[];\n    diffms?: number[];\n    total?: string;\n    totalms?: number;\n}\n\n\n\nexport interface Status {\n    isRunning: boolean,\n    timeList: TimeList,\n    clickCounter: number\n}\n\n\n\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Storage/storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                settings\n                            \n                            \n                                    Private\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertStr2Date\n                            \n                            \n                                getAlarmByIndex\n                            \n                            \n                                getAlarmCount\n                            \n                            \n                                getAlarms\n                            \n                            \n                                getLastAlarm\n                            \n                            \n                                getSettings\n                            \n                            \n                                getStatus\n                            \n                            \n                                    Async\n                                getStoredData\n                            \n                            \n                                    Async\n                                getStoredSettings\n                            \n                            \n                                    Async\n                                getStoredStatus\n                            \n                            \n                                    Async\n                                initializeSettings\n                            \n                            \n                                    Async\n                                initializeStatus\n                            \n                            \n                                loadDefaultSettings\n                            \n                            \n                                SaveData\n                            \n                            \n                                SaveSettings\n                            \n                            \n                                SaveStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Storage/storage.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertStr2Date\n                        \n                    \n                \n            \n            \n                \nconvertStr2Date(dateStr: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dateStr\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAlarmByIndex\n                        \n                    \n                \n            \n            \n                \ngetAlarmByIndex(idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:192\n                \n            \n\n\n            \n                \n                    Get alarm by index\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index of the alarm in the alarms array\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        alarm at index posistion\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAlarmCount\n                        \n                    \n                \n            \n            \n                \ngetAlarmCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        alarms number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAlarms\n                        \n                    \n                \n            \n            \n                \ngetAlarms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Alarms array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLastAlarm\n                        \n                    \n                \n            \n            \n                \ngetLastAlarm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the last alarm in the alarms array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSettings\n                        \n                    \n                \n            \n            \n                \ngetSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                         current settings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        current status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getStoredData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStoredData(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:112\n                \n            \n\n\n            \n                \n                    Return the stored settings from the device local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getStoredSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStoredSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:128\n                \n            \n\n\n            \n                \n                    Return the stored settings from the device local storage\n\n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getStoredStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStoredStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:144\n                \n            \n\n\n            \n                \n                    Return the stored status from the device local storage or null\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initializeSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:26\n                \n            \n\n\n            \n                \n                    Read Setting from local storage or initialize the defailt setting\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initializeStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:47\n                \n            \n\n\n            \n                \n                    Read status from local storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDefaultSettings\n                        \n                    \n                \n            \n            \n                \nloadDefaultSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:54\n                \n            \n\n\n            \n                \n                    Instantiate a new Settings class with the default values\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SaveData\n                        \n                    \n                \n            \n            \n                \nSaveData(data: any, key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:65\n                \n            \n\n\n            \n                \n                    Save settings on the local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SaveSettings\n                        \n                    \n                \n            \n            \n                \nSaveSettings(settings: Settings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:79\n                \n            \n\n\n            \n                \n                    Save settings on the local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                                Settings\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SaveStatus\n                        \n                    \n                \n            \n            \n                \nSaveStatus(status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:93\n                \n            \n\n\n            \n                \n                    Save status on the local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Settings\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Storage/storage.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Status\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Storage/storage.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Status } from 'src/app/MODELS/Interfaces';\nimport { Settings } from 'src/app/MODELS/Settings';\nimport { Storage } from '@capacitor/storage';\nimport { KEYS } from 'src/app/COMMON/KEYS';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n  \n  private settings: Settings;\n  private status: Status;\n  \n  constructor(private platform: Platform) {\n    this.initializeSettings();\n    this.initializeStatus();\n  }\n  \n  \n  /**\n  * Read Setting from local storage or initialize the defailt setting\n  */\n  async initializeSettings() {\n    console.log(\"Initialising settings...\");\n    this.loadDefaultSettings();\n    await this.platform.ready();\n    // Fetch ALARMS\n    console.log(\"Retrieving settings from storage...\");\n    const alarms = await Storage.get({key: KEYS.ALARMS});\n    if (alarms?.value != null) {\n      // ToDo\n      // sostituire con l'alarm service\n      // this.settings.alarms = JSON.parse(alarms.value);\n    } else {\n      // this.SaveSettings(this.settings);\n    }\n    console.log(\"Settings: \", this.settings);\n  }\n  \n  \n  /**\n  * Read status from local storage\n  */\n  async initializeStatus() {\n    this.status = await this.getStoredStatus();\n  }\n  \n  /**\n  * Instantiate a new Settings class with the default values\n  */\n  loadDefaultSettings() {\n    this.settings = new Settings();\n  }\n  \n  \n  //#region ------------ Saving on local storage methods --------------------------\n  \n  /**\n  * Save settings on the local storage\n  * @param {Settings} settings\n  */\n  SaveData(data: any, key: string) {\n    console.log(\"Saving data to storage...\");\n    let JSONdata = JSON.stringify(data);\n    console.log('Data: ', JSONdata);\n    Storage.set({\n      key: key,\n      value: JSONdata\n    });\n  }\n  \n  /**\n  * Save settings on the local storage\n  * @param {Settings} settings\n  */\n  SaveSettings(settings: Settings) {\n    console.log(\"Saving settings to storage...\");\n    let alarmsJSON = JSON.stringify(this.settings.alarms);\n    console.log(alarmsJSON);\n    Storage.set({\n      key: KEYS.ALARMS,\n      value: alarmsJSON\n    });\n  }\n  \n  /**\n  * Save status on the local storage\n  * @param {Status} status\n  */\n  SaveStatus(status: Status) {\n    let statusJSON: string = JSON.stringify(status);\n    console.log(\"Saving status to storage...\");\n    Storage.set({\n      key: KEYS.STATUS,\n      value: statusJSON\n    });\n  }\n  \n  //#endregion \n  \n  \n  \n  //#region ------------ GET METHODS -------------------\n  \n  \n  /**\n  * Return the stored settings from the device local storage\n  */\n  async getStoredData(key: string) {\n    console.log(\"Retrieving data from storage...\");\n    // Fetch ALARMS\n    let data = null;\n    const res = await Storage.get({key: key});\n    if (res.value != null) {\n      data = JSON.parse(res.value);\n    }\n    console.log(\"Retrieved Data: \", data)\n    return data;\n  }\n  \n  \n  /**\n  * Return the stored settings from the device local storage\n  */\n  async getStoredSettings() {\n    console.log(\"Retrieving settings from storage...\");\n    // Fetch ALARMS\n    const res = await Storage.get({key: KEYS.ALARMS});\n    if (res.value != null) {\n      this.settings.alarms = JSON.parse(res.value);\n      console.log(\"Settings: \", this.settings)\n      return this.settings\n    }\n    return null;\n  }\n  \n  /**\n  * Return the stored status from the device local storage or null\n  * @returns \n  */\n  async getStoredStatus() {\n    console.log(\"Retrieving status from storage...\");\n    const res = await Storage.get({key: KEYS.STATUS});\n    if (res.value != null) {\n      this.status = JSON.parse(res.value);\n      \n      // converto tutte le date in oggetti di tipo Date\n      console.log(\"Converting date time\");\n      this.status.timeList.start = this.convertStr2Date(this.status.timeList.start);\n      this.status.timeList.stop = this.convertStr2Date(this.status.timeList.stop);\n      \n      console.log(\"Status: \", this.status);\n      return this.status\n    }\n    return null;\n  }\n  \n  \n  \n  \n  \n  \n  /**\n  * @returns {Settings} current settings\n  */\n  getSettings() {\n    return this.settings;\n  }\n  \n  /**\n  * @returns {Status} current status\n  */\n  getStatus() {\n    return this.status;\n  }\n  \n  /**\n  * @returns Alarms array\n  */\n  getAlarms() {\n    return this.settings.alarms;\n  }\n  \n  /**\n  * Get alarm by index\n  * @param idx index of the alarm in the alarms array\n  * @returns alarm at index posistion\n  */\n  getAlarmByIndex(idx: number) {\n    return this.settings.alarms[idx];\n  }\n  \n  /**\n  * @returns the last alarm in the alarms array\n  */\n  getLastAlarm() {\n    let end = this.settings.alarms.length - 1;\n    return this.settings.alarms[end];\n  }\n  \n  /**\n  * \n  * @returns alarms number\n  */\n  getAlarmCount() {\n    console.log(this.settings.alarms.length);\n    return this.settings.alarms.length;\n  }\n  \n  \n  //#endregion\n  \n  \n  //#region ------------ UTILITY ----------------------\n  \n  convertStr2Date(dateStr: Array) {\n    console.log(\"Converting date time\");\n    let ln = dateStr.length;\n    var convrtedDate: Date[] = [];\n    for(let idx = 0; idx \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeList.html":{"url":"classes/TimeList.html","title":"class - TimeList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/Interfaces.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                diff\n                            \n                            \n                                    Optional\n                                diffms\n                            \n                            \n                                    Optional\n                                start\n                            \n                            \n                                    Optional\n                                stop\n                            \n                            \n                                    Optional\n                                total\n                            \n                            \n                                    Optional\n                                totalms\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/MODELS/Interfaces.ts:23\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        diff\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/Interfaces.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        diffms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/Interfaces.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/Interfaces.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        stop\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/Interfaces.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/Interfaces.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        totalms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/Interfaces.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum DateFormat {\n    Year = \"YYYY\",\n    YearMonth =\t\"YYYY-MM\",\n    HourMinute = \"HH:mm\",\n    HourMinuteSeconds = \"HH:mm:ss\"\n}\n\n// export enum SETTINGS {\n//     ALARMS = \"Alarms\"\n// }\n\nexport class TimeList {\n    constructor() {\n        this.start = [];\n        this.stop = [];\n        this.diff = [];\n        this.diffms = [];\n        this.total = null;\n        this.totalms = 0;\n    };\n    start?: Date[];\n    stop?: Date[];\n    diff?: string[];\n    diffms?: number[];\n    total?: string;\n    totalms?: number;\n}\n\n\n\nexport interface Status {\n    isRunning: boolean,\n    timeList: TimeList,\n    clickCounter: number\n}\n\n\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimerService.html":{"url":"injectables/TimerService.html","title":"injectable - TimerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Timer/timer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                blankTime\n                            \n                            \n                                    Public\n                                clickCounter\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Public\n                                platform\n                            \n                            \n                                    Private\n                                running\n                            \n                            \n                                    Public\n                                started\n                            \n                            \n                                    Public\n                                startedList\n                            \n                            \n                                    Public\n                                stoppedDuration\n                            \n                            \n                                    Public\n                                stoppedList\n                            \n                            \n                                    Public\n                                storageService\n                            \n                            \n                                    Public\n                                time\n                            \n                            \n                                    Public\n                                timeBegan\n                            \n                            \n                                    Public\n                                timeList\n                            \n                            \n                                    Public\n                                timeStopped\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcDiff\n                            \n                            \n                                clockRunning\n                            \n                            \n                                GetStartedTimes\n                            \n                            \n                                GetStoppedTimes\n                            \n                            \n                                GetTime\n                            \n                            \n                                GetTimeList\n                            \n                            \n                                isRunning\n                            \n                            \n                                isTimerActive\n                            \n                            \n                                onPause\n                            \n                            \n                                reset\n                            \n                            \n                                start\n                            \n                            \n                                stop\n                            \n                            \n                                zeroPrefix\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, storageService: StorageService, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcDiff\n                        \n                    \n                \n            \n            \n                \ncalcDiff()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:131\n                \n            \n\n\n            \n                \n                    Calc difference between Start Date and End Date\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clockRunning\n                        \n                    \n                \n            \n            \n                \nclockRunning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetStartedTimes\n                        \n                    \n                \n            \n            \n                \nGetStartedTimes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetStoppedTimes\n                        \n                    \n                \n            \n            \n                \nGetStoppedTimes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetTime\n                        \n                    \n                \n            \n            \n                \nGetTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetTimeList\n                        \n                    \n                \n            \n            \n                \nGetTimeList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRunning\n                        \n                    \n                \n            \n            \n                \nisRunning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:174\n                \n            \n\n\n            \n                \n                    Return true if timer is running\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTimerActive\n                        \n                    \n                \n            \n            \n                \nisTimerActive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPause\n                        \n                    \n                \n            \n            \n                \nonPause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:181\n                \n            \n\n\n            \n                \n                    Save the current status to local storage on platform.pause event\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:89\n                \n            \n\n\n            \n                \n                    Reset timer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n            \n                \nstart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:56\n                \n            \n\n\n            \n                \n                    Start timer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:77\n                \n            \n\n\n            \n                \n                    Stop timer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zeroPrefix\n                        \n                    \n                \n            \n            \n                \nzeroPrefix(num, digit)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:106\n                \n            \n\n\n            \n                \n                    Add digit-1 zeros at the begin of the number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    num\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    digit\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        number of zeros\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        blankTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"00:00.00\"\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clickCounter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        notificationService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Platform\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        running\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        started\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startedList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        stoppedDuration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        stoppedList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        storageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StorageService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"00:00.00\"\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timeBegan\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timeList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimeList\n\n                    \n                \n                \n                    \n                        Default value : new TimeList\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timeStopped\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Utility } from 'src/app/COMMON/Utility';\nimport { Status, TimeList } from 'src/app/MODELS/Interfaces';\nimport { NotificationService } from '../Notification/notification.service';\nimport { StorageService } from '../Storage/storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimerService {\n\n\n  private running = false\n\n  public timeBegan = null\n  public timeStopped:any = null\n  public stoppedDuration:any = 0\n  public started = null\n  public blankTime = \"00:00.00\"\n  public time: string = \"00:00.00\"\n  public timeList: TimeList = new TimeList;\n  public stoppedList: Date[] = [];\n  public startedList: Date[] = [];\n\n  public clickCounter: number = 0;\n\n  constructor(\n    public platform: Platform,\n    public storageService: StorageService,\n    public notificationService: NotificationService\n  ) { \n    // subscribe to on pause event\n    this.onPause();\n    // this.onResume();\n    var savedStatus: Status = this.storageService.getStatus();\n    console.log(\"Saved status: \", savedStatus);\n\n    if (savedStatus?.isRunning) {\n\n      this.running = true;\n      this.timeList = savedStatus.timeList;\n\n      this.timeBegan = this.timeList.start[0];\n      this.timeStopped = this.timeList.stop[this.timeList.stop.length];\n      this.clickCounter = savedStatus.clickCounter;\n      this.started = setInterval(this.clockRunning.bind(this), 10);\n    }\n\n  }\n\n\n  /**\n   * Start timer\n   */\n  start() {\n    if(this.running) {\n      return;\n    }\n    if (this.timeBegan === null) {\n        this.reset();\n        this.timeBegan = new Date();\n    }\n    if (this.timeStopped !== null) {\n      let newStoppedDuration:any = (+new Date() - this.timeStopped)\n      this.stoppedDuration = this.stoppedDuration + newStoppedDuration;\n    }\n    this.timeList.start.push(new Date());\n    this.started = setInterval(this.clockRunning.bind(this), 10);\n    this.running = true;\n    this.clickCounter++;\n  }\n  \n  /**\n   * Stop timer\n   */\n  stop() {\n    this.running = false;\n    this.timeStopped = new Date();\n    this.timeList.stop.push(this.timeStopped);\n    this.calcDiff();\n    clearInterval(this.started);\n    // this.clickCounter++;\n  }\n  \n  /**\n   * Reset timer\n   */\n  reset() {\n      this.running = false;\n      clearInterval(this.started);\n      this.stoppedDuration = 0;\n      this.timeBegan = null;\n      this.timeStopped = null;\n      this.time = this.blankTime;\n      this.timeList = new TimeList;\n      this.clickCounter = 0;\n  }\n  \n  /**\n   * Add digit-1 zeros at the begin of the number\n   * @param num \n   * @param digit number of zeros\n   * @returns \n   */\n  zeroPrefix(num, digit) {\n    let zero = '';\n    for(let i = 0; i  {\n      var status: Status = {\n        isRunning : this.running, \n        timeList: this.timeList,\n        clickCounter: this.clickCounter\n      };   \n      this.storageService.SaveStatus(status);\n\n      // add notification\n      if (this.isTimerActive()) {\n        console.log(\"Adding local notification...\");\n        let msg: string = \"Your working hour is still tracked\";\n        this.notificationService.addLocalNotification(msg);\n      } else {\n        let p = this.notificationService.getPending();\n        console.log(p);\n      }\n    })\n      \n  }\n\n  isTimerActive(): boolean {\n    if (this.running) return true;\n    else if (this.timeList.start.length > 0) return true;\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/COMMON/CONSTANT.ts\n            \n            function\n            getHousOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/CONSTANT.ts\n            \n            function\n            getMinutesOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/CONSTANT.ts\n            \n            variable\n            DAYS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/CONSTANT.ts\n            \n            variable\n            HOUR_OPTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/CONSTANT.ts\n            \n            variable\n            HOURS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/CONSTANT.ts\n            \n            variable\n            MINUTES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/CONSTANT.ts\n            \n            variable\n            MINUTES_OPTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/DEFAULT_VAL.ts\n            \n            variable\n            START\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/DEFAULT_VAL.ts\n            \n            variable\n            STOP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/KEYS.ts\n            \n            variable\n            ALARMS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/KEYS.ts\n            \n            variable\n            SETTINGS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/KEYS.ts\n            \n            variable\n            STATUS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/LABELS.ts\n            \n            variable\n            PAUSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/LABELS.ts\n            \n            variable\n            START\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/LABELS.ts\n            \n            variable\n            STOP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/Utility.ts\n            \n            function\n            GetTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/Utility.ts\n            \n            function\n            zeroPrefix\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/COMPONENTS/history/history/history.component.ts\n            \n            component\n            HistoryComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts\n            \n            component\n            SettingsPopoverComponent\n            \n                33 %\n                (7/21)\n            \n        \n        \n            \n                \n                src/app/MODELS/Interfaces.ts\n            \n            class\n            TimeList\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/MODELS/Interfaces.ts\n            \n            interface\n            Status\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/MODELS/PickerOption.ts\n            \n            interface\n            PickerColumnOption\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/MODELS/Settings.ts\n            \n            class\n            Settings\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/MODELS/alarms.ts\n            \n            class\n            Alarms\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/PAGES/home/home.page.ts\n            \n            component\n            HomePage\n            \n                31 %\n                (5/16)\n            \n        \n        \n            \n                \n                src/app/PAGES/home/home.resolve.ts\n            \n            guard\n            HomeResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Advertisement/advertisement.service.ts\n            \n            injectable\n            AdvertisementService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Alarm/alarm.service.ts\n            \n            injectable\n            AlarmService\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Alert/alert.service.ts\n            \n            injectable\n            AlertService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Notification/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Storage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                50 %\n                (10/20)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Timer/timer.service.ts\n            \n            injectable\n            TimerService\n            \n                24 %\n                (7/29)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ~12.0.1\n        \n            @angular/core : ~12.0.1\n        \n            @angular/forms : ~12.0.1\n        \n            @angular/platform-browser : ~12.0.1\n        \n            @angular/platform-browser-dynamic : ~12.0.1\n        \n            @angular/router : ~12.0.1\n        \n            @capacitor-community/admob : ^3.1.0\n        \n            @capacitor/android : ^3.1.1\n        \n            @capacitor/app : 1.0.2\n        \n            @capacitor/core : 3.1.1\n        \n            @capacitor/haptics : 1.0.2\n        \n            @capacitor/keyboard : 1.0.2\n        \n            @capacitor/local-notifications : ^1.0.3\n        \n            @capacitor/status-bar : 1.0.2\n        \n            @capacitor/storage : ^1.0.3\n        \n            @ionic/angular : ^5.5.2\n        \n            cordova-res : ^0.15.3\n        \n            install : ^0.13.0\n        \n            npm : ^7.20.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DateFormat   (src/.../Interfaces.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/MODELS/Interfaces.ts\n    \n        \n            \n                \n                    \n                        \n                        DateFormat\n                    \n                \n                        \n                            \n                                 Year\n                            \n                        \n                        \n                            \n                                Value : YYYY\n                            \n                        \n                        \n                            \n                                 YearMonth\n                            \n                        \n                        \n                            \n                                Value : YYYY-MM\n                            \n                        \n                        \n                            \n                                 HourMinute\n                            \n                        \n                        \n                            \n                                Value : HH:mm\n                            \n                        \n                        \n                            \n                                 HourMinuteSeconds\n                            \n                        \n                        \n                            \n                                Value : HH:mm:ss\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getHousOptions   (src/.../CONSTANT.ts)\n                        \n                        \n                            getMinutesOptions   (src/.../CONSTANT.ts)\n                        \n                        \n                            GetTime   (src/.../Utility.ts)\n                        \n                        \n                            zeroPrefix   (src/.../Utility.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/COMMON/CONSTANT.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getHousOptions\n                        \n                    \n                \n            \n            \n                \ngetHousOptions()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMinutesOptions\n                        \n                    \n                \n            \n            \n                \ngetMinutesOptions()\n                \n            \n\n\n\n\n        \n    \n    src/app/COMMON/Utility.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetTime\n                        \n                    \n                \n            \n            \n                \nGetTime(maxVal, digits)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    maxVal\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    digits\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zeroPrefix\n                        \n                    \n                \n            \n            \n                \nzeroPrefix(num, digit)\n                \n            \n\n\n\n\n            \n                \n                    Add digit-1 zeros at the begin of the number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    num\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    digit\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        number of zeros\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nClick here for DOCUMENTATION\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_HomePageRoutingModule\n\n\n\ncluster_HomePageRoutingModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nSettingsPopoverComponent\n\nSettingsPopoverComponent\n\nHomePageModule -->\n\nSettingsPopoverComponent->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nTimerService\n\nTimerService\n\nHomePageRoutingModule -->\n\nTimerService->HomePageRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALARMS   (src/.../KEYS.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            DAYS   (src/.../CONSTANT.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            HOUR_OPTS   (src/.../CONSTANT.ts)\n                        \n                        \n                            HOURS   (src/.../CONSTANT.ts)\n                        \n                        \n                            MINUTES   (src/.../CONSTANT.ts)\n                        \n                        \n                            MINUTES_OPTS   (src/.../CONSTANT.ts)\n                        \n                        \n                            PAUSE   (src/.../LABELS.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            SETTINGS   (src/.../KEYS.ts)\n                        \n                        \n                            START   (src/.../LABELS.ts)\n                        \n                        \n                            START   (src/.../DEFAULT_VAL.ts)\n                        \n                        \n                            STATUS   (src/.../KEYS.ts)\n                        \n                        \n                            STOP   (src/.../LABELS.ts)\n                        \n                        \n                            STOP   (src/.../DEFAULT_VAL.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/COMMON/KEYS.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALARMS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Alarms\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SETTINGS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Setting\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STATUS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Status\"\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/app/COMMON/CONSTANT.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DAYS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"\n    ]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HOUR_OPTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PickerColumnOption[]\n\n                    \n                \n                \n                    \n                        Default value : getHousOptions()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HOURS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : Utility.GetTime(24, 2)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MINUTES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : Utility.GetTime(60, 2)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MINUTES_OPTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PickerColumnOption[]\n\n                    \n                \n                \n                    \n                        Default value : getMinutesOptions()\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/app/COMMON/LABELS.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PAUSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"PAUSE\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        START\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"IN\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STOP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"OUT\"\n                    \n                \n\n\n        \n    \n\n    src/app/COMMON/DEFAULT_VAL.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        START\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"08:30\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STOP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"18:00\"\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
