var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AdvertisementService.html",[0,0.817,1,2.023]],["body/injectables/AdvertisementService.html",[0,1.269,1,3.145,2,1.83,3,0.444,4,0.444,5,0.389,6,3.215,7,0.502,8,1.384,9,3.12,10,5.99,11,4.729,12,1.168,13,1.278,14,3.86,15,3.86,16,1.269,17,0.034,18,4.105,19,3.86,20,0.879,21,0.835,22,3.86,23,4.907,24,4.907,25,3.86,26,3.86,27,3.86,28,3.215,29,3.215,30,2.01,31,1.83,32,0.444,33,0.286,34,3.86,35,3.86,36,2.459,37,3.86,38,3.86,39,3.86,40,3.86,41,4.088,42,3.215,43,3.86,44,3.86,45,3.548,46,3.86,47,1.532,48,3.215,49,4.907,50,3.86,51,3.86,52,3.215,53,3.86,54,2.791,55,1.532,56,3.86,57,3.86,58,3.86,59,0.02,60,0.025,61,0.02]],["title/classes/Alarm.html",[33,0.234,62,1.253]],["body/classes/Alarm.html",[3,0.265,4,0.265,5,0.233,7,0.754,8,0.969,12,0.743,13,1.338,16,1.367,17,0.034,20,0.413,32,0.265,33,0.171,59,0.012,60,0.018,61,0.012,62,2.448,63,1.327,64,1.921,65,1.495,66,3.435,67,3.435,68,1.589,69,3.124,70,2.202,71,2.632,72,0.889,73,3.04,74,3.821,75,1.629,76,2.862,77,2.107,78,2.935,79,2.484,80,3.269,81,2.916,82,2.306,83,1.381,84,1.93,85,1.517,86,3.435,87,1.158,88,1.062,89,0.972,90,0.889,91,1.627,92,2.156,93,2.306,94,2.306,95,2.306,96,2.306,97,2.862,98,2.306,99,2.862,100,1.93,101,2.862,102,4.105,103,4.105,104,4.105,105,1.971,106,4.105,107,3.42,108,4.105,109,3.42,110,3.79,111,2.202,112,3.435,113,2.306,114,3.435,115,2.306,116,2.362,117,2.862,118,3.435,119,0.915,120,2.306,121,2.306,122,2.097,123,2.306,124,2.306,125,2.862,126,2.306,127,3.435,128,4.105,129,4.105,130,1.921,131,3.435,132,3.435,133,3.435,134,3.435,135,2.306,136,2.306,137,1.363,138,2.306,139,2.306,140,2.306,141,2.306,142,2.306,143,2.306,144,3.435,145,3.435,146,3.435,147,1.921,148,0.771,149,2.862]],["title/injectables/AlarmService.html",[0,0.817,150,1.816]],["body/injectables/AlarmService.html",[0,0.855,2,1.038,3,0.252,4,0.252,5,0.221,7,0.43,8,0.932,12,0.474,13,1.321,16,1.383,17,0.034,20,0.957,21,0.474,30,1.141,31,1.038,32,0.252,33,0.163,36,0.949,47,1.312,59,0.011,60,0.017,61,0.011,62,2.365,65,0.798,68,1.383,69,2.291,72,0.855,73,2.551,74,3.206,75,1.985,77,2.642,78,1.26,79,2.39,80,2.119,81,1.404,83,1.226,84,1.58,85,1.415,87,1.123,88,1.03,89,0.794,90,1.03,91,1.737,92,2.09,100,1.312,116,1.26,119,1.985,122,1.58,137,1.985,148,0.732,150,1.902,151,1.825,152,3.316,153,3.981,154,4.434,155,2.102,156,4.434,157,2.842,158,4.434,159,3.305,160,1.947,161,1.825,162,2.167,163,3.305,164,2.19,165,2.19,166,2.39,167,1.891,168,2.19,169,2.19,170,2.19,171,2.19,172,2.19,173,2.753,174,3.305,175,2.879,176,2.19,177,1.584,178,2.19,179,2.19,180,2.19,181,1.584,182,1.584,183,1.404,184,1.584,185,1.404,186,1.584,187,1.584,188,2.19,189,1.825,190,1.584,191,3.305,192,2.753,193,3.305,194,2.19,195,1.567,196,3.305,197,2.19,198,2.19,199,2.19,200,2.19,201,2.552,202,2.19,203,1.825,204,1.825,205,2.19,206,2.19,207,1.584,208,1.584,209,0.869,210,1.825,211,1.825,212,1.722,213,2.19,214,2.19,215,1.141,216,1.825,217,1.825,218,2.19,219,2.19,220,1.825,221,1.404,222,2.19,223,2.19,224,1.825,225,2.19,226,1.825,227,2.19,228,3.305,229,2.19,230,2.19,231,2.19,232,2.19,233,2.19,234,2.753,235,2.19,236,2.19,237,2.19,238,2.19,239,2.19,240,2.19,241,1.584,242,2.19,243,2.19,244,1.584,245,2.19,246,2.19,247,1.722,248,1.825,249,2.19,250,2.19,251,2.19,252,1.038,253,2.19,254,1.825,255,2.19,256,1.825,257,2.19,258,2.753,259,2.19,260,3.305,261,2.19]],["title/classes/Alarms.html",[33,0.234,160,1.149]],["body/classes/Alarms.html",[3,0.263,4,0.263,5,0.231,7,0.63,8,0.963,12,0.884,13,1.283,16,1.363,17,0.034,20,0.811,32,0.263,33,0.17,36,1.479,55,1.355,59,0.012,60,0.018,61,0.012,62,2.498,63,1.316,65,0.833,68,1.254,72,0.883,75,2.018,76,2.844,77,2.442,78,1.964,79,2.469,83,1.308,84,1.621,85,1.363,87,1.278,88,1.172,89,0.868,90,1.101,91,1.142,92,1.487,97,2.844,99,1.905,100,1.621,101,1.905,105,0.99,107,2.844,109,2.844,110,2.844,117,2.844,119,1.621,122,2.149,130,1.905,137,1.798,147,1.905,148,1.142,149,2.844,152,3.403,160,1.919,166,1.653,167,0.833,173,1.905,175,2.789,177,1.653,181,1.653,182,1.653,183,1.466,184,1.653,185,1.466,186,1.653,187,1.653,192,2.844,208,1.653,212,1.778,241,3.276,244,1.653,248,1.905,262,1.905,263,4.085,264,2.844,265,3.414,266,2.287,267,3.414,268,2.287,269,1.778,270,2.844,271,2.618,272,4.236,273,2.648,274,2.469,275,2.287,276,2.287,277,3.414,278,3.414,279,2.287,280,2.844,281,4.847,282,2.287,283,2.287,284,2.287,285,2.287,286,2.287,287,3.414,288,3.414,289,1.962,290,3.414,291,2.287,292,2.287,293,2.287,294,2.287,295,1.653,296,2.287,297,1.905,298,2.648,299,1.191,300,2.287,301,1.905,302,1.905,303,3.414,304,2.287,305,2.469,306,2.844,307,2.287,308,1.905,309,1.905,310,3.403,311,1.905,312,2.287,313,1.905,314,1.905,315,1.905,316,1.905,317,1.905,318,1.905,319,1.905,320,1.905,321,1.905,322,1.905,323,1.905,324,1.905,325,1.905,326,2.287,327,1.905,328,3.403,329,2.844,330,0.99,331,4.53,332,2.287,333,2.287]],["title/injectables/AlertService.html",[0,0.817,334,1.816]],["body/injectables/AlertService.html",[0,0.941,2,1.182,3,0.287,4,0.287,5,0.252,7,0.324,8,1.026,9,2.95,12,0.54,13,1.19,16,1.222,17,0.034,18,3.794,20,0.652,21,0.54,30,1.299,31,1.182,32,0.287,33,0.185,47,1.706,59,0.013,60,0.019,61,0.013,65,0.908,68,0.941,72,0.941,77,1.577,83,1.332,87,1.333,88,1.222,89,0.9,90,1.202,91,1.754,92,2.147,122,1.706,137,1.706,167,1.565,195,2.038,273,2.617,334,2.094,335,2.078,336,4.095,337,3.64,338,3.64,339,3.64,340,2.494,341,2.494,342,3.64,343,5.663,344,4.298,345,4.298,346,2.494,347,5.07,348,3.64,349,4.96,350,2.494,351,4.298,352,4.298,353,3.58,354,4.298,355,4.725,356,3.794,357,4.725,358,3.64,359,3.64,360,2.494,361,2.494,362,0.99,363,2.494,364,4.298,365,3.108,366,3.108,367,2.473,368,4.298,369,3.58,370,3.221,371,4.371,372,3.108,373,3.58,374,4.298,375,4.725,376,2.494,377,2.494,378,3.58,379,2.494,380,4.298,381,2.494,382,2.494,383,2.494,384,2.494]],["title/components/AppComponent.html",[385,1.149,386,1.367]],["body/components/AppComponent.html",[3,0.462,4,0.462,5,0.405,12,0.868,13,0.95,17,0.033,20,0.9,21,0.868,31,2.384,32,0.462,33,0.298,59,0.021,60,0.026,61,0.021,87,1.132,88,1.421,89,0.718,90,0.868,148,1.925,161,3.343,162,2.62,190,2.902,299,2.619,385,2,386,2.494,387,2.893,388,2.572,389,2.572,390,2.572,391,2.572,392,3.343,393,2.572,394,3.878,395,3.481,396,3.223,397,5.492,398,3.223,399,5.028,400,4.013,401,4.013,402,2.572,403,3.223,404,2.572,405,2.572,406,2.572,407,2.09,408,2.572,409,1.592,410,2.572,411,1.738,412,1.342,413,2.572,414,2.572,415,2.572]],["title/modules/AppModule.html",[416,2.023,417,2.023]],["body/modules/AppModule.html",[3,0.464,4,0.464,5,0.407,17,0.034,20,1.084,21,0.872,32,0.464,33,0.299,59,0.021,60,0.026,61,0.021,155,1.91,289,1.745,362,1.599,386,2.762,395,2.319,417,4.016,418,1.91,419,2.626,420,3.357,421,3.357,422,3.357,423,3.357,424,3.485,425,3.232,426,4.029,427,4.2,428,3.232,429,5.041,430,3.232,431,5.041,432,3.357,433,2.914,434,5.041,435,2.319,436,3.357,437,5.041,438,4.029,439,3.357,440,4.029,441,4.029,442,3.357,443,4.029,444,4.029]],["title/modules/AppRoutingModule.html",[416,2.023,424,1.816]],["body/modules/AppRoutingModule.html",[3,0.505,4,0.505,5,0.443,17,0.034,20,0.951,21,0.95,32,0.505,33,0.326,47,1.741,59,0.023,60,0.027,61,0.023,418,2.08,424,3.057,428,2.813,430,3.406,435,2.525,445,4.388,446,3.655,447,5.313,448,4.426,449,3.288,450,4.426,451,3.842,452,4.388,453,4.388,454,4.388,455,4.388,456,4.388,457,4.388,458,4.388,459,4.388,460,4.388,461,3.655]],["title/components/HistoryComponent.html",[385,1.149,407,1.644]],["body/components/HistoryComponent.html",[3,0.456,4,0.456,5,0.4,7,0.515,8,1.407,12,1.182,13,1.182,16,1.025,17,0.033,20,0.71,21,0.858,32,0.456,33,0.294,59,0.02,60,0.026,61,0.02,70,3.198,88,1.291,119,1.573,148,1.917,299,2.599,385,1.988,386,1.717,387,2.871,388,2.54,389,2.54,390,2.54,391,2.54,393,2.54,394,3.865,395,3.47,396,3.198,398,3.198,402,2.54,403,3.198,404,2.54,405,2.54,406,2.54,407,2.985,408,2.54,409,1.573,410,2.54,411,1.717,412,1.325,413,2.54,414,2.54,415,2.54,462,3.301,463,4.549,464,5.731,465,5.461,466,4.989,467,4.775,468,3.963,469,3.963,470,4.989]],["title/components/HomePage.html",[385,1.149,409,1.253]],["body/components/HomePage.html",[1,3.149,3,0.165,4,0.165,5,0.144,7,0.186,8,0.666,9,2.168,12,0.757,13,1.279,16,1,17,0.034,20,0.902,21,0.31,32,0.165,33,0.106,36,0.62,45,2.179,47,0.937,52,1.192,54,1.707,55,1.535,59,0.007,60,0.012,61,0.007,62,1.535,68,0.904,72,0.611,75,2.301,77,2.066,83,0.757,85,0.779,87,0.404,88,0.779,89,0.854,90,0.31,91,1.392,92,0.521,100,2.216,105,1.514,111,3.057,116,1.358,119,1.196,148,1.169,150,2.533,155,2.261,162,1.907,167,0.86,183,0.917,184,1.035,195,1.428,201,1.931,209,1.196,215,0.745,234,1.192,247,0.745,252,2.182,273,1.569,289,0.62,295,1.035,299,1.229,305,1.707,330,1.023,334,2.225,336,3.553,347,1.192,349,1.966,356,2.797,362,0.568,366,2.797,367,2.011,370,1.513,372,2.179,385,1.273,386,0.62,387,1.358,388,0.917,389,0.917,390,0.917,391,0.917,393,0.917,394,2.668,395,2.533,396,1.513,398,1.513,402,0.917,403,1.513,404,0.917,405,0.917,406,0.917,407,0.745,408,0.917,409,1.387,410,0.917,411,1.305,412,0.479,413,1.513,414,0.917,415,0.917,451,1.707,471,1.192,472,3.013,473,2.36,474,3.867,475,3.867,476,2.179,477,3.013,478,2.397,479,3.495,480,3.495,481,3.495,482,3.495,483,1.431,484,2.168,485,3.668,486,2.36,487,1.431,488,3.013,489,1.966,490,1.431,491,3.222,492,3.495,493,1.431,494,2.36,495,2.36,496,1.966,497,2.36,498,1.431,499,2.36,500,1.821,501,2.36,502,1.431,503,3.013,504,1.431,505,1.431,506,1.431,507,1.431,508,1.431,509,1.431,510,1.431,511,1.431,512,1.431,513,1.431,514,0.917,515,0.917,516,1.192,517,1.431,518,1.192,519,1.192,520,1.192,521,1.192,522,1.431,523,1.035,524,0.917,525,2.36,526,1.966,527,1.431,528,1.431,529,1.192,530,1.431,531,1.431,532,1.431,533,1.431,534,1.431,535,1.035,536,1.431,537,1.431,538,1.035,539,1.431,540,2.51,541,1.431,542,2.36,543,1.431,544,2.36,545,1.431,546,1.431,547,1.431,548,1.431,549,1.431,550,1.431,551,1.431,552,1.431,553,3.495,554,1.431,555,1.431,556,2.36,557,1.431,558,1.431,559,2.36,560,1.431,561,1.431,562,1.431,563,1.431,564,2.36,565,1.966,566,1.035,567,1.431,568,1.035,569,2.36,570,3.013,571,2.36,572,1.431,573,1.431,574,1.431,575,1.192,576,1.431,577,1.431,578,2.36,579,1.431,580,1.431,581,1.431,582,1.192,583,1.431,584,1.431,585,1.431,586,1.431,587,1.431,588,1.431,589,2.36,590,2.36,591,2.36,592,2.912,593,2.912,594,3.222,595,1.431,596,1.966,597,1.192,598,1.431,599,2.797,600,1.192,601,1.431,602,1.431,603,4.365,604,1.431,605,2.36,606,3.973,607,1.431,608,1.192,609,1.431,610,1.431,611,3.222,612,1.431,613,1.431,614,1.431,615,2.51,616,1.431,617,1.192,618,1.431,619,4.365,620,3.222,621,2.912,622,2.912,623,2.912,624,1.192,625,1.431,626,2.179,627,1.431,628,2.51,629,1.431,630,1.431,631,2.36,632,4.602,633,4.196,634,2.36,635,4.602,636,2.36,637,4.602,638,2.36,639,2.36,640,2.36,641,2.36,642,2.36,643,2.36,644,2.36,645,2.36,646,2.36,647,2.36,648,1.431,649,1.192,650,2.51,651,1.431,652,2.36,653,3.013,654,1.431,655,1.431,656,1.431,657,1.431,658,1.431,659,2.36,660,1.431,661,1.431,662,1.192,663,1.431,664,2.36,665,1.431,666,1.431,667,2.36,668,3.867,669,1.431,670,1.035]],["title/modules/HomePageModule.html",[416,2.023,671,2.023]],["body/modules/HomePageModule.html",[3,0.469,4,0.469,5,0.411,17,0.034,20,1.103,21,0.881,32,0.469,33,0.302,59,0.021,60,0.026,61,0.021,155,1.93,289,1.764,362,1.616,409,2.409,411,2.63,418,1.93,419,2.643,425,3.253,427,4.228,428,3.253,430,3.253,436,4.228,439,3.392,451,2.945,514,2.61,515,2.61,516,3.392,671,4.051,672,3.392,673,3.392,674,3.392,675,3.494,676,4.072,677,5.075,678,3.392,679,5.075,680,3.392,681,3.392]],["title/modules/HomePageRoutingModule.html",[416,2.023,675,1.816]],["body/modules/HomePageRoutingModule.html",[3,0.482,4,0.482,5,0.422,17,0.034,20,1.075,21,0.906,32,0.482,33,0.311,47,1.662,59,0.022,60,0.027,61,0.022,155,1.985,289,1.814,365,3.028,385,1.525,409,2.049,418,1.985,419,2.689,425,3.31,428,2.684,430,3.31,435,2.409,442,4.301,446,3.488,448,4.301,449,3.221,450,3.488,461,3.488,484,3.184,521,3.488,675,3.518,681,3.488,682,3.488,683,3.488,684,4.187,685,3.588,686,4.187,687,4.187,688,4.187]],["title/guards/HomeResolver.html",[685,2.023,689,2.283]],["body/guards/HomeResolver.html",[0,1.301,3,0.462,4,0.462,5,0.405,7,0.521,8,1.418,12,1.088,13,1.191,16,1.038,17,0.034,20,0.983,21,0.868,32,0.462,33,0.298,36,1.738,59,0.021,60,0.026,61,0.021,70,2.572,75,1.995,77,2.379,87,1.418,88,1.301,89,0.9,90,1.088,119,1.592,122,1.592,195,1.902,353,3.343,362,1.592,365,4.163,435,2.309,685,3.223,690,4.013,691,3.343,692,2.902,693,4.374,694,6.138,695,4.013,696,5.028,697,5.757,698,5.492,699,5.757,700,4.013,701,4.013,702,3.343,703,4.013,704,4.013]],["title/interfaces/IAlarm.html",[71,2.023,705,1.367]],["body/interfaces/IAlarm.html",[3,0.505,4,0.505,5,0.443,7,0.79,17,0.033,32,0.505,59,0.023,60,0.027,61,0.023,68,1.536,69,3.418,71,3.406,72,1.374,73,3.418,74,4.295,83,1.338,84,2.268,85,1.599,89,1.089,90,1.15,705,1.901,706,2.813,707,3.655]],["title/injectables/NotificationService.html",[0,0.817,708,2.023]],["body/injectables/NotificationService.html",[0,1.029,2,1.338,3,0.325,4,0.325,5,0.285,7,0.367,8,1.122,9,3.039,12,0.997,13,1.382,16,1.454,17,0.034,18,2.877,20,0.825,21,0.611,30,1.471,31,1.338,32,0.325,33,0.209,47,1.12,59,0.015,60,0.02,61,0.015,65,1.028,68,1.192,72,1.029,75,2.316,80,1.81,83,0.997,85,1.485,87,1.122,88,1.029,89,0.944,90,0.861,91,1.54,100,1.579,111,2.55,122,1.828,125,2.352,137,1.12,148,0.944,167,1.028,247,2.072,252,2.5,269,1.471,273,2.399,330,1.723,367,2.651,538,2.877,566,3.331,708,2.55,709,2.352,710,4.606,711,4.392,712,4.606,713,3.978,714,5.001,715,5.001,716,3.978,717,5.001,718,3.978,719,3.978,720,2.823,721,3.314,722,2.823,723,5.98,724,3.978,725,2.823,726,2.823,727,2.823,728,3.978,729,3.978,730,3.978,731,2.823,732,2.352,733,3.978,734,4.606,735,2.823,736,2.823,737,2.823,738,3.978,739,2.352,740,3.978,741,2.352,742,3.314,743,4.606,744,2.352,745,2.823,746,2.823,747,2.823,748,2.823,749,2.823,750,2.823,751,2.823,752,2.55,753,3.978,754,2.823,755,1.81,756,2.823,757,2.823,758,2.352,759,2.823,760,2.823,761,2.823,762,2.823,763,2.823,764,2.823,765,3.978,766,2.823,767,2.823,768,2.823]],["title/interfaces/PickerColumnOption.html",[705,1.367,769,2.023]],["body/interfaces/PickerColumnOption.html",[3,0.487,4,0.487,5,0.427,7,0.55,17,0.033,32,0.487,59,0.022,60,0.027,61,0.022,68,1.518,72,1.345,73,3.376,83,1.327,84,2.432,85,1.455,89,1.098,90,1.389,280,4.887,370,3.761,600,4.887,705,1.834,706,2.714,769,3.332,770,3.527,771,5.867]],["title/classes/Settings.html",[33,0.234,412,1.056]],["body/classes/Settings.html",[3,0.294,4,0.294,5,0.258,7,0.621,8,1.045,12,0.944,13,1.132,16,1.128,17,0.034,20,0.664,32,0.294,33,0.19,36,1.606,47,2.014,55,1.471,59,0.013,60,0.019,61,0.013,62,2.47,63,1.471,65,1.587,68,0.959,69,1.471,72,0.959,78,1.471,83,1.283,84,2.014,85,0.959,87,1.045,88,0.959,89,0.856,90,1.035,91,0.855,100,1.471,105,1.606,116,2.133,122,2.014,137,1.73,148,1.458,160,1.927,166,1.849,167,1.741,175,3.045,183,1.639,203,2.13,204,2.13,208,1.849,209,1.015,210,2.13,211,2.13,212,2.756,215,1.332,216,2.13,217,2.13,241,2.68,244,1.849,264,2.13,269,1.93,270,3.088,271,3.065,272,4.747,273,2.912,274,3.152,289,1.606,295,3.152,297,3.983,298,2.643,299,1.332,301,2.13,302,2.13,305,2.68,306,3.088,308,2.13,309,2.13,310,3.632,311,2.13,313,3.632,314,2.13,315,2.13,316,2.13,317,2.13,318,2.13,319,2.13,320,2.13,321,2.13,322,2.13,323,2.13,324,2.13,325,2.13,327,2.13,328,3.632,329,3.088,330,1.888,412,1.599,772,2.13,773,3.706,774,3.088,775,3.706,776,3.706,777,3.706,778,3.706,779,2.557,780,2.557,781,2.557,782,3.088,783,2.557,784,2.557,785,2.557,786,2.557,787,2.557,788,3.706,789,2.557,790,3.706,791,2.557,792,2.557,793,2.557,794,2.557,795,2.557,796,2.557,797,2.557,798,2.557,799,2.557,800,2.557,801,3.706,802,3.706]],["title/components/SettingsPopoverComponent.html",[385,1.149,411,1.367]],["body/components/SettingsPopoverComponent.html",[3,0.155,4,0.155,5,0.136,7,0.375,8,0.633,9,2.768,12,0.486,13,1.329,16,1.244,17,0.034,20,0.834,21,0.291,32,0.155,33,0.1,45,0.973,48,3.115,54,2.086,59,0.007,60,0.012,61,0.007,62,2.29,65,0.49,68,0.871,70,1.438,72,0.58,73,0.775,75,2.303,77,1.75,78,2.152,83,0.927,85,0.58,87,1.139,88,1.205,89,0.884,90,0.874,91,1.125,92,1.56,100,1.603,105,0.972,116,1.291,119,1.484,137,1.145,148,1.501,150,2.465,157,2.589,160,1.362,162,1.856,167,0.817,175,2.324,187,0.973,195,1.064,201,1.438,207,1.622,209,0.89,212,1.169,215,1.169,221,1.438,226,1.121,247,1.169,254,2.403,269,1.753,271,2.157,298,2.104,299,1.169,334,2.152,336,3.477,356,3.098,362,0.534,366,2.704,367,1.66,369,2.804,370,1.438,371,4.006,372,1.622,373,1.869,378,1.869,385,1.05,386,0.583,387,1.291,388,0.863,389,0.863,390,0.863,391,0.863,393,0.863,394,2.589,395,2.324,396,1.438,398,1.438,402,0.863,403,1.438,404,0.863,405,0.863,406,0.863,407,0.701,408,0.863,409,0.534,410,0.863,411,1.458,412,1.961,413,1.849,414,0.863,415,0.863,463,2.403,467,2.804,485,3.365,496,1.869,514,3.625,515,3.625,518,1.121,519,1.121,520,1.121,523,0.973,526,1.869,529,2.804,535,0.973,566,2.086,592,1.121,593,3.365,594,3.569,596,1.121,597,1.869,599,0.973,603,1.121,606,2.403,611,3.115,615,3.569,617,2.403,619,4.362,620,2.804,621,1.869,622,3.365,623,3.569,624,1.121,626,2.921,628,2.403,633,3.882,649,1.869,650,3.115,662,1.121,744,1.869,774,1.121,782,2.804,803,1.121,804,2.885,805,2.244,806,2.885,807,2.885,808,2.885,809,2.885,810,2.086,811,2.244,812,2.244,813,3.366,814,3.366,815,2.244,816,2.244,817,2.244,818,1.346,819,4.284,820,2.244,821,2.244,822,1.346,823,1.346,824,2.244,825,2.244,826,2.244,827,1.869,828,2.244,829,1.346,830,1.346,831,2.244,832,2.244,833,1.346,834,2.244,835,1.346,836,2.244,837,1.346,838,1.346,839,1.622,840,2.244,841,1.346,842,2.244,843,1.346,844,1.346,845,1.346,846,1.346,847,1.346,848,1.346,849,1.346,850,1.346,851,2.244,852,1.346,853,2.885,854,1.346,855,1.121,856,1.346,857,1.346,858,1.346,859,1.346,860,1.346,861,2.885,862,2.885,863,2.885,864,1.346,865,1.346,866,1.346,867,1.346,868,1.121,869,1.869,870,1.346,871,1.346,872,1.346,873,1.346,874,1.346,875,1.346,876,2.244,877,1.346,878,1.346,879,1.121,880,1.346,881,1.346,882,1.346,883,1.346,884,1.346,885,1.346,886,2.244,887,1.346,888,1.346,889,1.346,890,1.346,891,1.346,892,1.346,893,1.346,894,2.244,895,2.244,896,2.244,897,2.244,898,2.244,899,2.244,900,2.244,901,2.244,902,1.346,903,2.244,904,2.244,905,1.346,906,2.244,907,2.885,908,2.244,909,1.346,910,1.346,911,2.244,912,3.366,913,2.244,914,2.244,915,1.346,916,3.366,917,2.244,918,2.244,919,1.346,920,1.346,921,2.244,922,2.244,923,1.346,924,3.366,925,1.346,926,2.885,927,1.346,928,1.346,929,2.244,930,2.244,931,1.346,932,1.346,933,1.346,934,1.346,935,3.366,936,1.346,937,2.244,938,1.346,939,1.346,940,1.346]],["title/interfaces/Status.html",[705,1.367,941,1.497]],["body/interfaces/Status.html",[3,0.456,4,0.456,5,0.4,7,0.515,12,0.858,17,0.034,32,0.66,33,0.294,55,1.573,59,0.02,60,0.026,61,0.02,72,1.291,83,1.08,84,2.167,85,1.528,89,0.978,92,1.443,105,1.717,160,1.817,209,1.573,252,2.365,412,1.325,478,3.225,500,2.064,524,3.674,705,1.717,706,2.54,752,2.54,755,2.54,941,2.365,942,2.54,943,4.144,944,4.156,945,2.866,946,3.608,947,2.866,948,2.866,949,2.866,950,2.866,951,3.301,952,3.301,953,3.301,954,3.301,955,3.301,956,3.301,957,3.301,958,3.301,959,3.301,960,3.301]],["title/injectables/StorageService.html",[0,0.817,162,1.367]],["body/injectables/StorageService.html",[0,0.693,2,0.793,3,0.192,4,0.192,5,0.169,7,0.611,8,1.081,9,2.918,11,2.232,12,0.362,13,1.376,16,1.539,17,0.034,20,0.801,21,0.362,30,0.871,31,0.793,32,0.192,33,0.249,47,1.521,55,0.664,59,0.009,60,0.014,61,0.009,62,1.939,65,0.609,68,0.867,69,2.899,72,0.693,75,1.776,83,1.017,85,1.085,87,1.326,88,1.216,89,0.902,90,1.017,91,0.896,92,1.835,100,1.063,119,1.521,122,2.268,137,1.521,148,0.559,157,2.869,160,1.958,162,1.161,167,1.221,175,2.206,177,2.772,181,1.209,182,1.209,185,1.072,190,1.209,195,1.589,201,1.072,207,1.937,215,0.871,220,1.393,221,3.85,224,2.792,247,1.996,252,1.989,256,1.393,271,3.23,330,0.724,362,0.664,367,2.575,412,2.057,535,1.209,692,1.209,693,3.236,702,1.393,732,2.792,827,3.729,839,4.133,855,1.393,868,2.792,869,3.494,879,1.393,941,2.821,961,1.393,962,2.679,963,2.679,964,3.833,965,3.833,966,3.833,967,3.833,968,2.679,969,3.833,970,3.833,971,3.833,972,3.833,973,3.833,974,2.679,975,2.679,976,2.679,977,2.679,978,2.679,979,1.672,980,2.679,981,1.672,982,2.679,983,1.672,984,1.672,985,1.672,986,2.679,987,1.672,988,1.672,989,2.679,990,1.672,991,4.476,992,1.672,993,1.672,994,1.672,995,3.833,996,3.193,997,2.679,998,1.672,999,1.672,1000,2.679,1001,2.679,1002,1.672,1003,4.885,1004,2.679,1005,1.672,1006,2.679,1007,1.672,1008,1.672,1009,1.393,1010,1.393,1011,1.672,1012,1.672,1013,1.672,1014,1.672,1015,3.352,1016,3.833,1017,3.833,1018,1.672,1019,1.672,1020,1.672,1021,1.672,1022,1.672,1023,1.672,1024,2.679,1025,4.194,1026,1.672,1027,3.352,1028,3.352,1029,3.352,1030,1.672,1031,1.672,1032,3.352,1033,2.679,1034,1.672,1035,1.672,1036,2.679,1037,1.672,1038,2.679,1039,2.679,1040,3.352,1041,3.352,1042,1.672,1043,1.672,1044,1.672,1045,1.672,1046,1.672,1047,1.672,1048,2.679,1049,1.672,1050,1.672,1051,1.672,1052,1.672,1053,1.672,1054,1.672,1055,2.679,1056,1.672,1057,1.672,1058,1.672,1059,1.672,1060,1.672,1061,1.393]],["title/classes/TimeList.html",[33,0.234,478,1.644]],["body/classes/TimeList.html",[3,0.424,4,0.424,5,0.371,7,0.479,12,1.142,13,1.426,17,0.034,32,0.642,33,0.273,55,1.461,59,0.019,60,0.024,61,0.019,63,2.119,72,1.231,83,1.207,84,1.461,85,1.494,89,1.059,90,1.363,92,1.341,105,1.595,160,1.734,209,2.094,252,2.644,412,1.231,478,2.905,500,2.748,524,2.36,705,1.595,752,2.36,755,2.36,941,1.746,942,2.36,943,2.663,944,3.966,945,2.663,946,3.443,947,2.663,948,2.663,949,2.663,950,2.663,951,3.068,952,3.068,953,3.068,954,3.068,955,3.068,956,3.068,957,4.395,958,4.395,959,4.395,960,4.395,1062,3.682,1063,3.682,1064,3.682,1065,3.682,1066,3.682,1067,3.682,1068,3.682]],["title/injectables/TimerService.html",[0,0.817,484,1.644]],["body/injectables/TimerService.html",[0,0.753,2,0.881,3,0.214,4,0.214,5,0.187,7,0.241,8,0.821,12,0.63,13,1.458,16,1.467,17,0.034,20,0.839,21,0.402,30,0.968,31,0.881,32,0.214,33,0.138,36,1.913,41,1.548,42,2.426,55,2.012,59,0.01,60,0.015,61,0.01,65,0.677,68,1.406,72,0.753,75,1.425,77,2.733,80,1.191,83,0.956,84,1.425,85,1.212,87,0.821,88,0.753,89,1.015,90,0.63,91,1.818,92,2.012,100,1.425,111,3.139,119,1.859,122,1.752,137,1.156,148,0.974,155,2.221,157,1.191,162,2.31,167,1.706,185,1.191,186,1.344,189,1.548,209,1.943,212,2.3,215,0.968,221,1.191,247,0.968,252,2.529,269,1.871,273,0.968,298,0.968,330,1.262,362,0.737,476,2.597,478,2.778,484,1.517,500,2.44,523,1.344,524,2.606,538,2.94,540,2.992,565,1.548,575,1.548,582,3.679,608,1.548,670,2.106,692,1.344,693,3.77,708,3.419,711,2.426,721,1.548,758,1.548,839,2.106,941,2.221,943,2.94,1009,1.548,1061,1.548,1069,1.548,1070,3.592,1071,3.592,1072,2.912,1073,3.592,1074,3.592,1075,2.912,1076,3.592,1077,3.592,1078,3.592,1079,3.592,1080,2.597,1081,3.592,1082,4.066,1083,3.592,1084,2.106,1085,2.912,1086,1.858,1087,1.858,1088,1.858,1089,1.858,1090,1.858,1091,1.858,1092,1.858,1093,1.858,1094,1.858,1095,1.858,1096,1.858,1097,1.858,1098,1.858,1099,1.858,1100,1.858,1101,2.426,1102,3.903,1103,1.858,1104,3.387,1105,2.426,1106,2.426,1107,4.066,1108,1.858,1109,1.858,1110,1.858,1111,1.858,1112,1.858,1113,1.858,1114,1.858,1115,1.858,1116,1.858,1117,1.858,1118,1.858,1119,1.858,1120,1.858,1121,1.858,1122,1.858,1123,1.858,1124,1.858,1125,1.858,1126,2.912,1127,1.858,1128,1.858,1129,1.858,1130,4.684,1131,1.858,1132,4.066,1133,1.858,1134,4.416,1135,1.858,1136,1.858,1137,2.912,1138,2.912,1139,1.858,1140,1.858,1141,3.592,1142,1.858,1143,1.858,1144,1.858,1145,1.858,1146,2.912,1147,1.858,1148,1.858,1149,1.858,1150,1.858,1151,1.858,1152,1.858,1153,1.858,1154,1.858,1155,1.858,1156,1.858]],["title/coverage.html",[1157,3.581]],["body/coverage.html",[0,1.456,1,1.981,5,0.312,6,2.575,17,0.034,33,0.386,55,2.567,59,0.016,60,0.022,61,0.016,62,1.227,64,2.575,71,1.981,81,1.981,89,0.553,150,1.779,151,2.575,160,1.543,162,1.339,167,1.126,209,1.681,262,2.575,298,1.61,334,1.779,335,2.575,385,1.894,386,1.339,392,2.575,407,1.61,409,1.227,411,1.339,412,1.417,462,2.575,471,2.575,478,1.61,484,1.61,489,4.333,500,2.207,514,1.981,515,1.981,568,2.235,599,2.235,626,2.235,670,2.235,685,1.981,689,2.235,691,2.575,705,2.094,707,2.575,708,1.981,709,2.575,769,1.981,770,2.575,772,2.575,803,2.575,810,2.235,941,2.009,942,2.716,961,2.575,1069,2.575,1080,2.235,1084,2.235,1157,2.575,1158,2.575,1159,3.091,1160,3.091,1161,4.167,1162,2.235,1163,6.358,1164,2.235,1165,6.296,1166,2.575,1167,2.575,1168,3.53,1169,4.027,1170,4.027,1171,3.53,1172,3.091,1173,4.237,1174,4.237,1175,3.091,1176,3.091,1177,3.091,1178,3.091,1179,3.091,1180,4.237,1181,3.091,1182,3.091,1183,3.091,1184,3.091,1185,3.091,1186,3.091,1187,3.091,1188,3.091,1189,3.091,1190,3.091,1191,3.091,1192,3.091,1193,3.091,1194,3.091,1195,2.575,1196,3.53,1197,2.575,1198,3.53,1199,2.575,1200,2.575,1201,3.091,1202,3.091]],["title/dependencies.html",[419,1.976,1203,2.641]],["body/dependencies.html",[17,0.034,21,0.922,28,3.55,29,3.55,59,0.022,60,0.027,61,0.022,195,2.02,362,1.691,419,2.22,432,4.348,433,3.774,435,2.452,678,3.55,680,3.55,739,3.55,741,3.55,742,3.55,1010,3.55,1204,6.139,1205,4.261,1206,4.261,1207,4.261,1208,5.219,1209,4.261,1210,5.88,1211,4.261,1212,4.261,1213,5.219,1214,4.261,1215,4.261,1216,4.261,1217,4.261,1218,4.261,1219,4.261,1220,4.261,1221,4.261,1222,4.261,1223,4.261,1224,4.261,1225,4.261,1226,4.261,1227,4.261,1228,4.261]],["title/miscellaneous/enumerations.html",[1229,1.376,1230,3.161]],["body/miscellaneous/enumerations.html",[7,0.623,17,0.032,59,0.025,60,0.029,61,0.025,68,1.581,105,2.076,752,3.072,755,3.072,942,3.072,945,4.049,946,4.049,947,3.465,948,3.465,949,3.465,950,3.465,1229,2.496,1230,3.992,1231,4.792]],["title/miscellaneous/functions.html",[1229,1.376,1232,3.161]],["body/miscellaneous/functions.html",[7,0.589,16,1.172,17,0.032,59,0.023,60,0.028,61,0.023,65,1.65,83,0.981,85,1.401,87,1.528,88,1.401,90,1.173,269,2.361,330,1.963,1080,3.918,1084,3.918,1101,3.776,1102,4.828,1104,4.513,1105,3.776,1106,3.776,1161,3.278,1162,4.19,1164,4.19,1171,3.776,1229,2.361,1232,3.776,1233,4.513,1234,5.418,1235,4.532,1236,5.418,1237,4.532]],["title/index.html",[7,0.343,476,1.91,1238,2.641]],["body/index.html",[17,0.03,59,0.026,60,0.03,61,0.026,491,4.212,1158,4.212,1239,5.056]],["title/modules.html",[418,2.038]],["body/modules.html",[17,0.029,59,0.025,60,0.029,61,0.025,417,3.103,418,2.295,424,2.785,433,4.307,671,3.103,675,2.785,1240,5.956,1241,5.956,1242,6.133,1243,4.84,1244,4.84]],["title/overview.html",[1245,3.581]],["body/overview.html",[2,2.011,17,0.033,59,0.022,60,0.027,61,0.022,63,2.441,155,2.011,289,1.838,330,1.838,386,2.691,387,2.441,409,2.235,411,2.439,417,3.982,418,2.011,419,2.711,420,3.534,421,3.534,422,3.534,423,3.534,424,3.24,425,3.337,449,2.441,484,2.933,671,4.021,672,3.534,673,3.534,674,3.534,675,3.467,682,3.534,683,3.534,689,3.068,706,2.72,1245,3.534,1246,5.871,1247,4.243,1248,4.243]],["title/routes.html",[449,2.473]],["body/routes.html",[17,0.03,59,0.026,60,0.03,61,0.026,449,2.925]],["title/miscellaneous/variables.html",[1229,1.376,1249,3.161]],["body/miscellaneous/variables.html",[7,0.44,17,0.034,36,1.951,59,0.017,60,0.023,61,0.017,68,1.64,81,2.887,83,1.337,89,1.139,91,2.12,160,1.844,209,2.142,212,1.763,258,3.753,274,3.257,289,1.466,298,2.637,412,1.506,500,2.811,568,3.257,769,2.887,810,3.257,941,2.4,996,2.82,1161,2.447,1162,2.447,1164,2.447,1166,3.753,1167,3.753,1168,2.82,1169,2.82,1170,2.82,1195,2.82,1196,4.497,1197,2.82,1198,2.82,1199,3.753,1200,3.753,1229,1.763,1233,4.682,1249,2.82,1250,5.063,1251,4.504,1252,3.384,1253,3.384,1254,5.063,1255,4.504,1256,3.384,1257,3.384,1258,3.384,1259,3.384,1260,3.384,1261,3.384,1262,3.384,1263,3.384,1264,3.384,1265,3.384,1266,3.384,1267,3.384,1268,4.504,1269,3.384,1270,3.384]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"interfaces/IAlarm.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":55,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["0.15.3",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["0.5rem",{"_index":661,"title":{},"body":{"components/HomePage.html":{}}}],["0.795",{"_index":653,"title":{},"body":{"components/HomePage.html":{}}}],["0.9rem",{"_index":940,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["0/1",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1190,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1173,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1180,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1177,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1178,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1179,"title":{},"body":{"coverage.html":{}}}],["00:00.00",{"_index":1107,"title":{},"body":{"injectables/TimerService.html":{}}}],["04:00",{"_index":277,"title":{},"body":{"classes/Alarms.html":{}}}],["08:30",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0px",{"_index":929,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["1",{"_index":330,"title":{},"body":{"classes/Alarms.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["1.0.2",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1189,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":670,"title":{},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["10/20",{"_index":1191,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":626,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["1000",{"_index":765,"title":{},"body":{"injectables/NotificationService.html":{}}}],["12.0.1",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["1200",{"_index":107,"title":{},"body":{"classes/Alarm.html":{},"classes/Alarms.html":{}}}],["12:00",{"_index":276,"title":{},"body":{"classes/Alarms.html":{}}}],["1315",{"_index":250,"title":{},"body":{"injectables/AlarmService.html":{}}}],["13:15",{"_index":249,"title":{},"body":{"injectables/AlarmService.html":{}}}],["15",{"_index":532,"title":{},"body":{"components/HomePage.html":{}}}],["16",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":609,"title":{},"body":{"components/HomePage.html":{}}}],["18:00",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1970",{"_index":724,"title":{},"body":{"injectables/NotificationService.html":{}}}],["1].index",{"_index":308,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["1px",{"_index":930,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["1rem",{"_index":662,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["2",{"_index":258,"title":{},"body":{"injectables/AlarmService.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":921,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["2077ef9a63d2b398840261c8221a0c9b",{"_index":38,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["20px",{"_index":604,"title":{},"body":{"components/HomePage.html":{}}}],["22px",{"_index":610,"title":{},"body":{"components/HomePage.html":{}}}],["24",{"_index":1192,"title":{},"body":{"coverage.html":{}}}],["26px",{"_index":607,"title":{},"body":{"components/HomePage.html":{}}}],["28",{"_index":1183,"title":{},"body":{"coverage.html":{}}}],["2rem",{"_index":617,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["3",{"_index":1248,"title":{},"body":{"overview.html":{}}}],["3.1.0",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":1182,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["350",{"_index":636,"title":{},"body":{"components/HomePage.html":{}}}],["350px",{"_index":634,"title":{},"body":{"components/HomePage.html":{}}}],["36",{"_index":664,"title":{},"body":{"components/HomePage.html":{}}}],["3px",{"_index":939,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["3rem",{"_index":926,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["4",{"_index":1246,"title":{},"body":{"overview.html":{}}}],["40",{"_index":629,"title":{},"body":{"components/HomePage.html":{}}}],["400",{"_index":109,"title":{},"body":{"classes/Alarm.html":{},"classes/Alarms.html":{}}}],["439209432321129530",{"_index":733,"title":{},"body":{"injectables/NotificationService.html":{}}}],["45",{"_index":659,"title":{},"body":{"components/HomePage.html":{}}}],["5.5.2",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["5/16",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":599,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["500",{"_index":640,"title":{},"body":{"components/HomePage.html":{}}}],["500px",{"_index":639,"title":{},"body":{"components/HomePage.html":{}}}],["50vw",{"_index":667,"title":{},"body":{"components/HomePage.html":{}}}],["5px",{"_index":936,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["6",{"_index":1247,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1181,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":643,"title":{},"body":{"components/HomePage.html":{}}}],["600px",{"_index":642,"title":{},"body":{"components/HomePage.html":{}}}],["65",{"_index":652,"title":{},"body":{"components/HomePage.html":{}}}],["6px",{"_index":931,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["7.20.0",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["7/21",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["7/29",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["850",{"_index":646,"title":{},"body":{"components/HomePage.html":{}}}],["850px",{"_index":645,"title":{},"body":{"components/HomePage.html":{}}}],["8c8c8c",{"_index":612,"title":{},"body":{"components/HomePage.html":{}}}],["90",{"_index":938,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["_alarms",{"_index":152,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{}}}],["_id",{"_index":710,"title":{},"body":{"injectables/NotificationService.html":{}}}],["_startstoptxt",{"_index":474,"title":{},"body":{"components/HomePage.html":{}}}],["a.index",{"_index":328,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["absolute",{"_index":595,"title":{},"body":{"components/HomePage.html":{}}}],["accessors",{"_index":79,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{}}}],["activatedroutesnapshot",{"_index":697,"title":{},"body":{"guards/HomeResolver.html":{}}}],["actual_component",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["add",{"_index":269,"title":{},"body":{"classes/Alarms.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["addalarmcontainer",{"_index":927,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["addalarmn",{"_index":775,"title":{},"body":{"classes/Settings.html":{}}}],["addalarmn(alarmvalue",{"_index":778,"title":{},"body":{"classes/Settings.html":{}}}],["added",{"_index":760,"title":{},"body":{"injectables/NotificationService.html":{}}}],["addlocalnotification",{"_index":713,"title":{},"body":{"injectables/NotificationService.html":{}}}],["addlocalnotification(msg",{"_index":719,"title":{},"body":{"injectables/NotificationService.html":{}}}],["addpause",{"_index":811,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["addpause(alarm",{"_index":821,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["adid",{"_index":49,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["admob",{"_index":22,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["admob.addlistener(banneradpluginevents.loaded",{"_index":40,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["admob.addlistener(banneradpluginevents.sizechanged",{"_index":44,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["admob.initialize",{"_index":34,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["admob.showbanner(options",{"_index":58,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["admobbannersize",{"_index":23,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["adsize",{"_index":50,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["advertisementservice",{"_index":1,"title":{"injectables/AdvertisementService.html":{}},"body":{"injectables/AdvertisementService.html":{},"components/HomePage.html":{},"coverage.html":{}}}],["aggiungo",{"_index":318,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["alarm",{"_index":62,"title":{"classes/Alarm.html":{}},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["alarm(key",{"_index":230,"title":{},"body":{"injectables/AlarmService.html":{}}}],["alarm(labels.pause",{"_index":301,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["alarm(labels.start",{"_index":210,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{}}}],["alarm(labels.stop",{"_index":216,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{}}}],["alarm(savedalarm.key",{"_index":198,"title":{},"body":{"injectables/AlarmService.html":{}}}],["alarm.getminutesidex",{"_index":910,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alarm.index",{"_index":295,"title":{},"body":{"classes/Alarms.html":{},"components/HomePage.html":{},"classes/Settings.html":{}}}],["alarm.key",{"_index":916,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alarm.update(val.detail.value",{"_index":872,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alarm.value",{"_index":917,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alarms",{"_index":160,"title":{"classes/Alarms.html":{}},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alarms(alarms",{"_index":285,"title":{},"body":{"classes/Alarms.html":{}}}],["alarms?.value",{"_index":1018,"title":{},"body":{"injectables/StorageService.html":{}}}],["alarmservice",{"_index":150,"title":{"injectables/AlarmService.html":{}},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["alarmsjson",{"_index":1033,"title":{},"body":{"injectables/StorageService.html":{}}}],["alarmtmp",{"_index":806,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alarmtmpindex",{"_index":807,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alarmtmpvalue",{"_index":808,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alarmvalue",{"_index":297,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["alert",{"_index":366,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["alert.present",{"_index":380,"title":{},"body":{"injectables/AlertService.html":{}}}],["alertcontroller",{"_index":336,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["alertservice",{"_index":334,"title":{"injectables/AlertService.html":{}},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["align",{"_index":593,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["all'interno",{"_index":883,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alla",{"_index":320,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["allarmi",{"_index":243,"title":{},"body":{"injectables/AlarmService.html":{}}}],["already",{"_index":316,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["angular/common",{"_index":678,"title":{},"body":{"modules/HomePageModule.html":{},"dependencies.html":{}}}],["angular/compiler/src/output/output_ast",{"_index":513,"title":{},"body":{"components/HomePage.html":{}}}],["angular/core",{"_index":21,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":680,"title":{},"body":{"modules/HomePageModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"dependencies.html":{}}}],["any,canceltext",{"_index":381,"title":{},"body":{"injectables/AlertService.html":{}}}],["any,oktext",{"_index":382,"title":{},"body":{"injectables/AlertService.html":{}}}],["app",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["app.component",{"_index":438,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":399,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":397,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":386,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appcontainer",{"_index":618,"title":{},"body":{"components/HomePage.html":{}}}],["appmodule",{"_index":417,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":424,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["around",{"_index":625,"title":{},"body":{"components/HomePage.html":{}}}],["array",{"_index":271,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["async",{"_index":9,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["automatically",{"_index":118,"title":{},"body":{"classes/Alarm.html":{}}}],["available",{"_index":1244,"title":{},"body":{"modules.html":{}}}],["await",{"_index":367,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["b",{"_index":327,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["b.index",{"_index":329,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["background",{"_index":650,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["banner",{"_index":10,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["banneradoptions",{"_index":24,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["banneradpluginevents",{"_index":25,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["banneradposition",{"_index":26,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["banneradposition.bottom_center",{"_index":53,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["banneradsize",{"_index":27,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["banneradsize.banner",{"_index":51,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["bar",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["begin",{"_index":1105,"title":{},"body":{"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["between",{"_index":523,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{}}}],["blanktime",{"_index":1070,"title":{},"body":{"injectables/TimerService.html":{}}}],["body",{"_index":746,"title":{},"body":{"injectables/NotificationService.html":{}}}],["bool",{"_index":687,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["boolean",{"_index":84,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"interfaces/IAlarm.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["bootstrap",{"_index":429,"title":{},"body":{"modules/AppModule.html":{}}}],["browse",{"_index":1242,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":431,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":526,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["buttons",{"_index":369,"title":{},"body":{"injectables/AlertService.html":{},"components/SettingsPopoverComponent.html":{}}}],["buttonscontainer",{"_index":925,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["calc",{"_index":1087,"title":{},"body":{"injectables/TimerService.html":{}}}],["calcdiff",{"_index":1076,"title":{},"body":{"injectables/TimerService.html":{}}}],["calcel",{"_index":824,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["call",{"_index":102,"title":{},"body":{"classes/Alarm.html":{}}}],["cancel",{"_index":371,"title":{},"body":{"injectables/AlertService.html":{},"components/SettingsPopoverComponent.html":{}}}],["canceltext",{"_index":344,"title":{},"body":{"injectables/AlertService.html":{}}}],["capacitor",{"_index":28,"title":{},"body":{"injectables/AdvertisementService.html":{},"dependencies.html":{}}}],["capacitor/android",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["capacitor/app",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":739,"title":{},"body":{"injectables/NotificationService.html":{},"dependencies.html":{}}}],["capacitor/haptics",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["capacitor/keyboard",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["capacitor/local",{"_index":741,"title":{},"body":{"injectables/NotificationService.html":{},"dependencies.html":{}}}],["capacitor/status",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["capacitor/storage",{"_index":1010,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["capire",{"_index":235,"title":{},"body":{"injectables/AlarmService.html":{}}}],["case",{"_index":536,"title":{},"body":{"components/HomePage.html":{}}}],["center",{"_index":594,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["change",{"_index":46,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["check",{"_index":305,"title":{},"body":{"classes/Alarms.html":{},"components/HomePage.html":{},"classes/Settings.html":{}}}],["checkbox",{"_index":935,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["class",{"_index":33,"title":{"classes/Alarm.html":{},"classes/Alarms.html":{},"classes/Settings.html":{},"classes/TimeList.html":{}},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["classes",{"_index":63,"title":{},"body":{"classes/Alarm.html":{},"classes/Alarms.html":{},"classes/Settings.html":{},"classes/TimeList.html":{},"overview.html":{}}}],["clear",{"_index":263,"title":{},"body":{"classes/Alarms.html":{}}}],["clearinterval(this.started",{"_index":1146,"title":{},"body":{"injectables/TimerService.html":{}}}],["click",{"_index":491,"title":{},"body":{"components/HomePage.html":{},"index.html":{}}}],["clickcounter",{"_index":524,"title":{},"body":{"components/HomePage.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["clockrunning",{"_index":1077,"title":{},"body":{"injectables/TimerService.html":{}}}],["closed",{"_index":537,"title":{},"body":{"components/HomePage.html":{}}}],["cluster_appmodule",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_homepagemodule",{"_index":672,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_declarations",{"_index":673,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_imports",{"_index":674,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepageroutingmodule",{"_index":682,"title":{},"body":{"modules/HomePageRoutingModule.html":{},"overview.html":{}}}],["cluster_homepageroutingmodule_providers",{"_index":683,"title":{},"body":{"modules/HomePageRoutingModule.html":{},"overview.html":{}}}],["codes",{"_index":354,"title":{},"body":{"injectables/AlertService.html":{}}}],["color",{"_index":611,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["column",{"_index":621,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["columns",{"_index":904,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["common/labels",{"_index":784,"title":{},"body":{"classes/Settings.html":{}}}],["commonmodule",{"_index":677,"title":{},"body":{"modules/HomePageModule.html":{}}}],["community/admob",{"_index":29,"title":{},"body":{"injectables/AdvertisementService.html":{},"dependencies.html":{}}}],["component",{"_index":385,"title":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["components",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"overview.html":{}}}],["con",{"_index":1020,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(\"adding",{"_index":758,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/TimerService.html":{}}}],["console.log(\"alarm",{"_index":560,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(\"alarms",{"_index":290,"title":{},"body":{"classes/Alarms.html":{}}}],["console.log(\"cancel",{"_index":887,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(\"converting",{"_index":1048,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(\"current",{"_index":562,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(\"index",{"_index":288,"title":{},"body":{"classes/Alarms.html":{}}}],["console.log(\"initialising",{"_index":1013,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(\"loading",{"_index":858,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(\"resetting",{"_index":579,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(\"retrieved",{"_index":1042,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(\"retrieving",{"_index":1016,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(\"saved",{"_index":1128,"title":{},"body":{"injectables/TimerService.html":{}}}],["console.log(\"saving",{"_index":1028,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(\"scheduled",{"_index":561,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(\"selected",{"_index":888,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(\"settings",{"_index":1024,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(\"status",{"_index":1053,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log('canceled",{"_index":571,"title":{},"body":{"components/HomePage.html":{}}}],["console.log('click",{"_index":558,"title":{},"body":{"components/HomePage.html":{}}}],["console.log('confirmed",{"_index":569,"title":{},"body":{"components/HomePage.html":{}}}],["console.log('data",{"_index":1031,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log('default",{"_index":219,"title":{},"body":{"injectables/AlarmService.html":{}}}],["console.log('loading",{"_index":206,"title":{},"body":{"injectables/AlarmService.html":{}}}],["console.log('ondiddismiss",{"_index":587,"title":{},"body":{"components/HomePage.html":{}}}],["console.log('platform",{"_index":703,"title":{},"body":{"guards/HomeResolver.html":{}}}],["console.log('updating",{"_index":139,"title":{},"body":{"classes/Alarm.html":{}}}],["console.log(alarm",{"_index":890,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(alarmsjson",{"_index":1035,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(idx",{"_index":874,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(msg",{"_index":309,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["console.log(p",{"_index":1155,"title":{},"body":{"injectables/TimerService.html":{}}}],["console.log(pause",{"_index":302,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["console.log(t",{"_index":557,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(this.alarms",{"_index":864,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(this.settings",{"_index":860,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(this.settings.alarms.length",{"_index":1057,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(this.timelist",{"_index":581,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(val",{"_index":873,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(value",{"_index":896,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["const",{"_index":47,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"modules/AppRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"injectables/StorageService.html":{}}}],["constant",{"_index":856,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["constant.days",{"_index":851,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["constant.minutes_opts",{"_index":907,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["constructor",{"_index":12,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["constructor(alertcontroller",{"_index":340,"title":{},"body":{"injectables/AlertService.html":{}}}],["constructor(key",{"_index":82,"title":{},"body":{"classes/Alarm.html":{}}}],["constructor(platform",{"_index":692,"title":{},"body":{"guards/HomeResolver.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["constructor(popovercontroller",{"_index":818,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["constructor(private",{"_index":190,"title":{},"body":{"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/StorageService.html":{}}}],["constructor(public",{"_index":363,"title":{},"body":{"injectables/AlertService.html":{}}}],["constructor(storageservice",{"_index":161,"title":{},"body":{"injectables/AlarmService.html":{},"components/AppComponent.html":{}}}],["constructor(timerservice",{"_index":483,"title":{},"body":{"components/HomePage.html":{}}}],["container",{"_index":592,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["contains",{"_index":773,"title":{},"body":{"classes/Settings.html":{}}}],["content",{"_index":623,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["context",{"_index":1199,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":377,"title":{},"body":{"injectables/AlertService.html":{}}}],["convert",{"_index":99,"title":{},"body":{"classes/Alarm.html":{},"classes/Alarms.html":{}}}],["converto",{"_index":1043,"title":{},"body":{"injectables/StorageService.html":{}}}],["convertstr2date",{"_index":962,"title":{},"body":{"injectables/StorageService.html":{}}}],["convertstr2date(datestr",{"_index":978,"title":{},"body":{"injectables/StorageService.html":{}}}],["convrteddate",{"_index":1060,"title":{},"body":{"injectables/StorageService.html":{}}}],["copy",{"_index":865,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["cordova",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":525,"title":{},"body":{"components/HomePage.html":{}}}],["counter",{"_index":492,"title":{},"body":{"components/HomePage.html":{}}}],["coverage",{"_index":1157,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":166,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{}}}],["createalarm",{"_index":153,"title":{},"body":{"injectables/AlarmService.html":{}}}],["createalarm(key",{"_index":164,"title":{},"body":{"injectables/AlarmService.html":{}}}],["cssclass",{"_index":373,"title":{},"body":{"injectables/AlertService.html":{},"components/SettingsPopoverComponent.html":{}}}],["current",{"_index":247,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["current.gethours",{"_index":253,"title":{},"body":{"injectables/AlarmService.html":{}}}],["current.getminutes",{"_index":255,"title":{},"body":{"injectables/AlarmService.html":{}}}],["currentidx",{"_index":292,"title":{},"body":{"classes/Alarms.html":{}}}],["currenttime",{"_index":553,"title":{},"body":{"components/HomePage.html":{}}}],["custom",{"_index":911,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["custompickeroptions",{"_index":809,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["data",{"_index":1003,"title":{},"body":{"injectables/StorageService.html":{}}}],["date",{"_index":252,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["date.setdate(date.gettime",{"_index":768,"title":{},"body":{"injectables/NotificationService.html":{}}}],["date2id",{"_index":714,"title":{},"body":{"injectables/NotificationService.html":{}}}],["dateformat",{"_index":945,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["dateidx",{"_index":260,"title":{},"body":{"injectables/AlarmService.html":{}}}],["datestr",{"_index":256,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/StorageService.html":{}}}],["datestr.length",{"_index":1059,"title":{},"body":{"injectables/StorageService.html":{}}}],["day",{"_index":566,"title":{},"body":{"components/HomePage.html":{},"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{}}}],["days",{"_index":810,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["decoration",{"_index":613,"title":{},"body":{"components/HomePage.html":{}}}],["defailt",{"_index":997,"title":{},"body":{"injectables/StorageService.html":{}}}],["default",{"_index":91,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["default_val",{"_index":179,"title":{},"body":{"injectables/AlarmService.html":{}}}],["default_val.start",{"_index":211,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{}}}],["default_val.stop",{"_index":217,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{}}}],["defined",{"_index":13,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["degli",{"_index":242,"title":{},"body":{"injectables/AlarmService.html":{}}}],["delay",{"_index":728,"title":{},"body":{"injectables/NotificationService.html":{}}}],["delayed",{"_index":729,"title":{},"body":{"injectables/NotificationService.html":{}}}],["delete",{"_index":782,"title":{},"body":{"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{}}}],["deletealarm",{"_index":776,"title":{},"body":{"classes/Settings.html":{}}}],["deletealarm(alarm",{"_index":780,"title":{},"body":{"classes/Settings.html":{}}}],["deleted",{"_index":802,"title":{},"body":{"classes/Settings.html":{}}}],["deletelocalnotification",{"_index":715,"title":{},"body":{"injectables/NotificationService.html":{}}}],["deletepause",{"_index":812,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["deletepause(alarm",{"_index":828,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["dell'alarm",{"_index":884,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["dell'indice",{"_index":550,"title":{},"body":{"components/HomePage.html":{}}}],["dentro",{"_index":238,"title":{},"body":{"injectables/AlarmService.html":{}}}],["dependencies",{"_index":419,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":65,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["deve",{"_index":226,"title":{},"body":{"injectables/AlarmService.html":{},"components/SettingsPopoverComponent.html":{}}}],["device",{"_index":991,"title":{},"body":{"injectables/StorageService.html":{}}}],["di",{"_index":879,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["diff",{"_index":957,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["difference",{"_index":1088,"title":{},"body":{"injectables/TimerService.html":{}}}],["differente",{"_index":233,"title":{},"body":{"injectables/AlarmService.html":{}}}],["diffms",{"_index":958,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["digit",{"_index":1102,"title":{},"body":{"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["digits",{"_index":1236,"title":{},"body":{"miscellaneous/functions.html":{}}}],["direction",{"_index":620,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["directive",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["directives",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["disabled",{"_index":771,"title":{},"body":{"interfaces/PickerColumnOption.html":{}}}],["discorso",{"_index":549,"title":{},"body":{"components/HomePage.html":{}}}],["dismiss",{"_index":831,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["dismissclick",{"_index":813,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["display",{"_index":356,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["diventare",{"_index":227,"title":{},"body":{"injectables/AlarmService.html":{}}}],["documentation",{"_index":1158,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["done",{"_index":572,"title":{},"body":{"components/HomePage.html":{}}}],["duration",{"_index":73,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"interfaces/IAlarm.html":{},"interfaces/PickerColumnOption.html":{},"components/SettingsPopoverComponent.html":{}}}],["dynamic",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":322,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["echotimer",{"_index":589,"title":{},"body":{"components/HomePage.html":{}}}],["element",{"_index":299,"title":{},"body":{"classes/Alarms.html":{},"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{}}}],["enabled",{"_index":793,"title":{},"body":{"classes/Settings.html":{}}}],["end",{"_index":215,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["endregion",{"_index":1039,"title":{},"body":{"injectables/StorageService.html":{}}}],["entrycomponents",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":944,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["enumerations",{"_index":1230,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1196,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["essere",{"_index":881,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["event",{"_index":42,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/TimerService.html":{}}}],["ex",{"_index":248,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{}}}],["example",{"_index":112,"title":{},"body":{"classes/Alarm.html":{}}}],["existingalarm",{"_index":311,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["existingalarm.length",{"_index":314,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["exists",{"_index":317,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["export",{"_index":32,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"interfaces/IAlarm.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["exports",{"_index":461,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["extra",{"_index":757,"title":{},"body":{"injectables/NotificationService.html":{}}}],["f",{"_index":798,"title":{},"body":{"classes/Settings.html":{}}}],["fabcontainer",{"_index":665,"title":{},"body":{"components/HomePage.html":{}}}],["false",{"_index":212,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":1015,"title":{},"body":{"injectables/StorageService.html":{}}}],["fff",{"_index":923,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"interfaces/IAlarm.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["fine",{"_index":321,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["flex",{"_index":619,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["font",{"_index":603,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["for(let",{"_index":1061,"title":{},"body":{"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["format",{"_index":104,"title":{},"body":{"classes/Alarm.html":{}}}],["formsmodule",{"_index":679,"title":{},"body":{"modules/HomePageModule.html":{}}}],["fri",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["full",{"_index":458,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":489,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["functions",{"_index":1232,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fuori",{"_index":239,"title":{},"body":{"injectables/AlarmService.html":{}}}],["gestire",{"_index":551,"title":{},"body":{"components/HomePage.html":{}}}],["gestre",{"_index":245,"title":{},"body":{"injectables/AlarmService.html":{}}}],["getalarmbyindex",{"_index":963,"title":{},"body":{"injectables/StorageService.html":{}}}],["getalarmbyindex(idx",{"_index":980,"title":{},"body":{"injectables/StorageService.html":{}}}],["getalarmcount",{"_index":964,"title":{},"body":{"injectables/StorageService.html":{}}}],["getalarms",{"_index":177,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/StorageService.html":{}}}],["getcurrenttimeindex",{"_index":251,"title":{},"body":{"injectables/AlarmService.html":{}}}],["getdelayedtime",{"_index":716,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getdelayedtime(seconds",{"_index":726,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getdelayedtime(seconds:number",{"_index":766,"title":{},"body":{"injectables/NotificationService.html":{}}}],["gethour",{"_index":120,"title":{},"body":{"classes/Alarm.html":{}}}],["gethousoptions",{"_index":1162,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getlastalarm",{"_index":965,"title":{},"body":{"injectables/StorageService.html":{}}}],["getminutes",{"_index":123,"title":{},"body":{"classes/Alarm.html":{}}}],["getminutesoptions",{"_index":1164,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getpending",{"_index":717,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getsettings",{"_index":966,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstartedtimes",{"_index":1078,"title":{},"body":{"injectables/TimerService.html":{}}}],["getstatus",{"_index":967,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstoppedtimes",{"_index":1079,"title":{},"body":{"injectables/TimerService.html":{}}}],["getstoredalarms",{"_index":154,"title":{},"body":{"injectables/AlarmService.html":{}}}],["getstoreddata",{"_index":968,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstoreddata(key",{"_index":989,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstoredsettings",{"_index":969,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstoredstatus",{"_index":970,"title":{},"body":{"injectables/StorageService.html":{}}}],["gettime",{"_index":1080,"title":{},"body":{"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["gettime(maxval",{"_index":1235,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gettimelist",{"_index":1081,"title":{},"body":{"injectables/TimerService.html":{}}}],["getting",{"_index":1238,"title":{"index.html":{}},"body":{}}],["graph",{"_index":1243,"title":{},"body":{"modules.html":{}}}],["greenyellow",{"_index":933,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["grow",{"_index":655,"title":{},"body":{"components/HomePage.html":{}}}],["guard",{"_index":689,"title":{"guards/HomeResolver.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":690,"title":{},"body":{"guards/HomeResolver.html":{}}}],["handler",{"_index":375,"title":{},"body":{"injectables/AlertService.html":{}}}],["handler:(value:any",{"_index":895,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["header",{"_index":347,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{}}}],["height",{"_index":606,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["here",{"_index":1239,"title":{},"body":{"index.html":{}}}],["hh",{"_index":754,"title":{},"body":{"injectables/NotificationService.html":{}}}],["hh:mm",{"_index":105,"title":{},"body":{"classes/Alarm.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["hh:mm:ss",{"_index":950,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["hidden",{"_index":657,"title":{},"body":{"components/HomePage.html":{}}}],["history",{"_index":464,"title":{},"body":{"components/HistoryComponent.html":{}}}],["history'},{'name",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["history.component.html",{"_index":466,"title":{},"body":{"components/HistoryComponent.html":{}}}],["history.component.scss",{"_index":465,"title":{},"body":{"components/HistoryComponent.html":{}}}],["historycomponent",{"_index":407,"title":{"components/HistoryComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["home",{"_index":451,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["home'},{'name",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["home.page",{"_index":681,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home.page.html",{"_index":473,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":472,"title":{},"body":{"components/HomePage.html":{}}}],["home.resolve",{"_index":686,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["homepage",{"_index":409,"title":{"components/HomePage.html":{}},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homepagemodule",{"_index":671,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules.html":{},"overview.html":{}}}],["homepageroutingmodule",{"_index":675,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["homeresolver",{"_index":685,"title":{"guards/HomeResolver.html":{}},"body":{"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"coverage.html":{}}}],["honeydew",{"_index":934,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["hour",{"_index":80,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"injectables/NotificationService.html":{},"injectables/TimerService.html":{}}}],["hour_opts",{"_index":1166,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["hourminute",{"_index":948,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["hourminuteseconds",{"_index":949,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["hours",{"_index":568,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["ialarm",{"_index":71,"title":{"interfaces/IAlarm.html":{}},"body":{"classes/Alarm.html":{},"interfaces/IAlarm.html":{},"coverage.html":{}}}],["icon",{"_index":616,"title":{},"body":{"components/HomePage.html":{}}}],["id",{"_index":747,"title":{},"body":{"injectables/NotificationService.html":{}}}],["identified",{"_index":66,"title":{},"body":{"classes/Alarm.html":{}}}],["identifier",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["idex",{"_index":67,"title":{},"body":{"classes/Alarm.html":{}}}],["idx",{"_index":175,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["if(currentidx",{"_index":294,"title":{},"body":{"classes/Alarms.html":{}}}],["if(idx",{"_index":286,"title":{},"body":{"classes/Alarms.html":{}}}],["if(this.running",{"_index":1139,"title":{},"body":{"injectables/TimerService.html":{}}}],["if(typeof(timestr",{"_index":332,"title":{},"body":{"classes/Alarms.html":{}}}],["il",{"_index":240,"title":{},"body":{"injectables/AlarmService.html":{}}}],["implements",{"_index":70,"title":{},"body":{"classes/Alarm.html":{},"components/HistoryComponent.html":{},"guards/HomeResolver.html":{},"components/SettingsPopoverComponent.html":{}}}],["import",{"_index":20,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["import('./pages/home/home.module').then",{"_index":453,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["increment",{"_index":501,"title":{},"body":{"components/HomePage.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"interfaces/IAlarm.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"interfaces/IAlarm.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["initialize",{"_index":11,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/StorageService.html":{}}}],["initializefortesting",{"_index":39,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["initializesettings",{"_index":971,"title":{},"body":{"injectables/StorageService.html":{}}}],["initializestatus",{"_index":972,"title":{},"body":{"injectables/StorageService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"overview.html":{}}}],["inner",{"_index":928,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["insert/add",{"_index":229,"title":{},"body":{"injectables/AlarmService.html":{}}}],["install",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["instantiate",{"_index":1000,"title":{},"body":{"injectables/StorageService.html":{}}}],["interface",{"_index":705,"title":{"interfaces/IAlarm.html":{},"interfaces/PickerColumnOption.html":{},"interfaces/Status.html":{}},"body":{"interfaces/IAlarm.html":{},"interfaces/PickerColumnOption.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"coverage.html":{}}}],["interfaces",{"_index":706,"title":{},"body":{"interfaces/IAlarm.html":{},"interfaces/PickerColumnOption.html":{},"interfaces/Status.html":{},"overview.html":{}}}],["interfaces/ialarm",{"_index":126,"title":{},"body":{"classes/Alarm.html":{}}}],["ion",{"_index":615,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["ionic/angular",{"_index":362,"title":{},"body":{"injectables/AlertService.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"guards/HomeResolver.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"dependencies.html":{}}}],["ionic/core",{"_index":854,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["ionicmodule",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["ionicmodule.forroot",{"_index":441,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":437,"title":{},"body":{"modules/AppModule.html":{}}}],["ispause",{"_index":74,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"interfaces/IAlarm.html":{}}}],["isrunning",{"_index":943,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["istesting",{"_index":56,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["istimeractive",{"_index":1082,"title":{},"body":{"injectables/TimerService.html":{}}}],["item",{"_index":922,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["items",{"_index":628,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["json.parse(alarms.value",{"_index":1022,"title":{},"body":{"injectables/StorageService.html":{}}}],["json.parse(res.value",{"_index":1041,"title":{},"body":{"injectables/StorageService.html":{}}}],["json.stringify(data",{"_index":1030,"title":{},"body":{"injectables/StorageService.html":{}}}],["json.stringify(status",{"_index":1037,"title":{},"body":{"injectables/StorageService.html":{}}}],["json.stringify(this.settings.alarms",{"_index":1034,"title":{},"body":{"injectables/StorageService.html":{}}}],["jsondata",{"_index":1029,"title":{},"body":{"injectables/StorageService.html":{}}}],["justify",{"_index":622,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["key",{"_index":69,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"interfaces/IAlarm.html":{},"classes/Settings.html":{},"injectables/StorageService.html":{}}}],["keys",{"_index":181,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/StorageService.html":{}}}],["keys.alarms",{"_index":224,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/StorageService.html":{}}}],["keys.status",{"_index":1038,"title":{},"body":{"injectables/StorageService.html":{}}}],["l'alarm",{"_index":1021,"title":{},"body":{"injectables/StorageService.html":{}}}],["l'array",{"_index":324,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["l'elemento",{"_index":319,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["l'if",{"_index":552,"title":{},"body":{"components/HomePage.html":{}}}],["la",{"_index":877,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["labels",{"_index":183,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"classes/Settings.html":{}}}],["labels.pause",{"_index":791,"title":{},"body":{"classes/Settings.html":{}}}],["labels.start",{"_index":503,"title":{},"body":{"components/HomePage.html":{}}}],["labels.stop",{"_index":545,"title":{},"body":{"components/HomePage.html":{}}}],["last",{"_index":986,"title":{},"body":{"injectables/StorageService.html":{}}}],["late",{"_index":563,"title":{},"body":{"components/HomePage.html":{}}}],["le",{"_index":1045,"title":{},"body":{"injectables/StorageService.html":{}}}],["left",{"_index":596,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["legend",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["line",{"_index":605,"title":{},"body":{"components/HomePage.html":{}}}],["list",{"_index":774,"title":{},"body":{"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{}}}],["listener",{"_index":43,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["lists",{"_index":534,"title":{},"body":{"components/HomePage.html":{}}}],["literal",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ln",{"_index":1058,"title":{},"body":{"injectables/StorageService.html":{}}}],["load",{"_index":834,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["loadchildren",{"_index":452,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaddefaultsettings",{"_index":973,"title":{},"body":{"injectables/StorageService.html":{}}}],["loadsettings",{"_index":814,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["local",{"_index":839,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["localnotification",{"_index":737,"title":{},"body":{"injectables/NotificationService.html":{}}}],["localnotifications",{"_index":740,"title":{},"body":{"injectables/NotificationService.html":{}}}],["localnotifications.cancel(this._id",{"_index":762,"title":{},"body":{"injectables/NotificationService.html":{}}}],["localnotifications.getpending",{"_index":763,"title":{},"body":{"injectables/NotificationService.html":{}}}],["localnotifications.schedule",{"_index":759,"title":{},"body":{"injectables/NotificationService.html":{}}}],["localnotificationschema",{"_index":734,"title":{},"body":{"injectables/NotificationService.html":{}}}],["logica",{"_index":878,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["lucky",{"_index":745,"title":{},"body":{"injectables/NotificationService.html":{}}}],["m",{"_index":454,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":455,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["manage",{"_index":530,"title":{},"body":{"components/HomePage.html":{}}}],["margin",{"_index":54,"title":{},"body":{"injectables/AdvertisementService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["matching",{"_index":60,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"interfaces/IAlarm.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.floor(date.now",{"_index":764,"title":{},"body":{"injectables/NotificationService.html":{}}}],["maxval",{"_index":1237,"title":{},"body":{"miscellaneous/functions.html":{}}}],["media(min",{"_index":632,"title":{},"body":{"components/HomePage.html":{}}}],["message",{"_index":343,"title":{},"body":{"injectables/AlertService.html":{}}}],["messaggi",{"_index":246,"title":{},"body":{"injectables/AlarmService.html":{}}}],["metadata",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["methods",{"_index":8,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["miglirabole",{"_index":202,"title":{},"body":{"injectables/AlarmService.html":{}}}],["min",{"_index":254,"title":{},"body":{"injectables/AlarmService.html":{},"components/SettingsPopoverComponent.html":{}}}],["minute",{"_index":125,"title":{},"body":{"classes/Alarm.html":{},"injectables/NotificationService.html":{}}}],["minutes",{"_index":81,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["minutes_opts",{"_index":1167,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1229,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":755,"title":{},"body":{"injectables/NotificationService.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["models/interfaces",{"_index":522,"title":{},"body":{"components/HomePage.html":{}}}],["module",{"_index":416,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}},"body":{}}],["modules",{"_index":418,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mon",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["month",{"_index":753,"title":{},"body":{"injectables/NotificationService.html":{}}}],["more",{"_index":635,"title":{},"body":{"components/HomePage.html":{}}}],["msg",{"_index":273,"title":{},"body":{"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"injectables/TimerService.html":{}}}],["msg:'a",{"_index":315,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["msg:'alarm",{"_index":801,"title":{},"body":{"classes/Settings.html":{}}}],["msg:'pause",{"_index":304,"title":{},"body":{"classes/Alarms.html":{}}}],["name",{"_index":88,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["name:'hours",{"_index":905,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["name:'minutes",{"_index":908,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["new",{"_index":167,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["newstoppedduration",{"_index":1142,"title":{},"body":{"injectables/TimerService.html":{}}}],["newstoppedduration:any",{"_index":1140,"title":{},"body":{"injectables/TimerService.html":{}}}],["nex",{"_index":270,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["ngmodule",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["ngoninit",{"_index":467,"title":{},"body":{"components/HistoryComponent.html":{},"components/SettingsPopoverComponent.html":{}}}],["none",{"_index":614,"title":{},"body":{"components/HomePage.html":{}}}],["notification",{"_index":711,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/TimerService.html":{}}}],["notification/notification.service",{"_index":1121,"title":{},"body":{"injectables/TimerService.html":{}}}],["notificationpromise",{"_index":712,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notifications",{"_index":742,"title":{},"body":{"injectables/NotificationService.html":{},"dependencies.html":{}}}],["notificationservice",{"_index":708,"title":{"injectables/NotificationService.html":{}},"body":{"injectables/NotificationService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["npa",{"_index":57,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["npm",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":92,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["num",{"_index":1106,"title":{},"body":{"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":85,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"interfaces/IAlarm.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":274,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":863,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["offset",{"_index":475,"title":{},"body":{"components/HomePage.html":{}}}],["oggetti",{"_index":1046,"title":{},"body":{"injectables/StorageService.html":{}}}],["ok",{"_index":378,"title":{},"body":{"injectables/AlertService.html":{},"components/SettingsPopoverComponent.html":{}}}],["oktext",{"_index":345,"title":{},"body":{"injectables/AlertService.html":{}}}],["onfabtimerclick",{"_index":479,"title":{},"body":{"components/HomePage.html":{}}}],["oninit",{"_index":463,"title":{},"body":{"components/HistoryComponent.html":{},"components/SettingsPopoverComponent.html":{}}}],["onpause",{"_index":1083,"title":{},"body":{"injectables/TimerService.html":{}}}],["ontimechange",{"_index":815,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["ontimechange(val",{"_index":836,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["open",{"_index":494,"title":{},"body":{"components/HomePage.html":{}}}],["optional",{"_index":90,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"interfaces/IAlarm.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":48,"title":{},"body":{"injectables/AdvertisementService.html":{},"components/SettingsPopoverComponent.html":{}}}],["optionswidth",{"_index":906,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["original",{"_index":866,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["out",{"_index":289,"title":{},"body":{"classes/Alarms.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"classes/Settings.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["over",{"_index":832,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["overflow",{"_index":656,"title":{},"body":{"components/HomePage.html":{}}}],["overview",{"_index":1245,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":608,"title":{},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{}}}],["package",{"_index":1203,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":924,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["param",{"_index":137,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["parameters",{"_index":87,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":591,"title":{},"body":{"components/HomePage.html":{}}}],["passed",{"_index":117,"title":{},"body":{"classes/Alarm.html":{},"classes/Alarms.html":{}}}],["passing",{"_index":103,"title":{},"body":{"classes/Alarm.html":{}}}],["path",{"_index":450,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["pathmatch",{"_index":457,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pause",{"_index":298,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pause.index",{"_index":306,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["per",{"_index":234,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{}}}],["picker",{"_index":912,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["picker.present",{"_index":914,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["pickerclassname",{"_index":932,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["pickercolumnoption",{"_index":769,"title":{"interfaces/PickerColumnOption.html":{}},"body":{"interfaces/PickerColumnOption.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pickercontroller",{"_index":819,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["pickeroptions",{"_index":853,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["platform",{"_index":693,"title":{},"body":{"guards/HomeResolver.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["platform.pause",{"_index":1097,"title":{},"body":{"injectables/TimerService.html":{}}}],["plugins",{"_index":738,"title":{},"body":{"injectables/NotificationService.html":{}}}],["poi",{"_index":244,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{}}}],["pop",{"_index":496,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["popover",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["popover.component",{"_index":516,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["popover.component.html",{"_index":805,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.scss",{"_index":804,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts",{"_index":803,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["popover.component.ts:100",{"_index":829,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:108",{"_index":833,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:116",{"_index":830,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:124",{"_index":843,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:170",{"_index":841,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:18",{"_index":850,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:19",{"_index":852,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:20",{"_index":844,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:21",{"_index":845,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:22",{"_index":847,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:23",{"_index":846,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:24",{"_index":820,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:32",{"_index":849,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:33",{"_index":848,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:36",{"_index":835,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:54",{"_index":837,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:71",{"_index":838,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:82",{"_index":823,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:91",{"_index":822,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.ondiddismiss",{"_index":586,"title":{},"body":{"components/HomePage.html":{}}}],["popover.present",{"_index":585,"title":{},"body":{"components/HomePage.html":{}}}],["popover/settings",{"_index":515,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["popovercontroller",{"_index":485,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["posistion",{"_index":982,"title":{},"body":{"injectables/StorageService.html":{}}}],["position",{"_index":52,"title":{},"body":{"injectables/AdvertisementService.html":{},"components/HomePage.html":{}}}],["positional",{"_index":203,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{}}}],["prefix",{"_index":915,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["preloadallmodules",{"_index":447,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":460,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["presentconfirm",{"_index":337,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentconfirm(header",{"_index":342,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentconfirmalert",{"_index":338,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentconfirmalert(msg",{"_index":348,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentwarningalert",{"_index":339,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentwarningalert(msg",{"_index":359,"title":{},"body":{"injectables/AlertService.html":{}}}],["private",{"_index":75,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["production",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":18,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlertService.html":{},"injectables/NotificationService.html":{}}}],["promise(async",{"_index":364,"title":{},"body":{"injectables/AlertService.html":{}}}],["properties",{"_index":72,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"interfaces/IAlarm.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["provide",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":30,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["providers",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["public",{"_index":77,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{}}}],["push",{"_index":264,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["push(alarm",{"_index":267,"title":{},"body":{"classes/Alarms.html":{}}}],["px",{"_index":637,"title":{},"body":{"components/HomePage.html":{}}}],["questo",{"_index":548,"title":{},"body":{"components/HomePage.html":{}}}],["quot;hh:mm&quot",{"_index":113,"title":{},"body":{"classes/Alarm.html":{}}}],["range",{"_index":241,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{}}}],["read",{"_index":995,"title":{},"body":{"injectables/StorageService.html":{}}}],["ready",{"_index":704,"title":{},"body":{"guards/HomeResolver.html":{}}}],["recover",{"_index":533,"title":{},"body":{"components/HomePage.html":{}}}],["redirectto",{"_index":456,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["region",{"_index":1027,"title":{},"body":{"injectables/StorageService.html":{}}}],["reload",{"_index":826,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["reorder",{"_index":325,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["repeat",{"_index":918,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["requesttrackingauthorization",{"_index":35,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["require",{"_index":1200,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":195,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"dependencies.html":{}}}],["res.foreach(savedalarm",{"_index":197,"title":{},"body":{"injectables/AlarmService.html":{}}}],["res.succeded",{"_index":901,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["res.value",{"_index":1040,"title":{},"body":{"injectables/StorageService.html":{}}}],["res://logo",{"_index":750,"title":{},"body":{"injectables/NotificationService.html":{}}}],["reset",{"_index":155,"title":{},"body":{"injectables/AlarmService.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/TimerService.html":{},"overview.html":{}}}],["resetbuttoncontainer",{"_index":669,"title":{},"body":{"components/HomePage.html":{}}}],["resetdefault",{"_index":156,"title":{},"body":{"injectables/AlarmService.html":{}}}],["resolve",{"_index":365,"title":{},"body":{"injectables/AlertService.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{}}}],["resolve('cancel",{"_index":383,"title":{},"body":{"injectables/AlertService.html":{}}}],["resolve('ok",{"_index":384,"title":{},"body":{"injectables/AlertService.html":{}}}],["resolve(false",{"_index":376,"title":{},"body":{"injectables/AlertService.html":{}}}],["resolve(route",{"_index":696,"title":{},"body":{"guards/HomeResolver.html":{}}}],["resolve(true",{"_index":379,"title":{},"body":{"injectables/AlertService.html":{}}}],["resolved",{"_index":588,"title":{},"body":{"components/HomePage.html":{}}}],["result",{"_index":59,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"interfaces/IAlarm.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":61,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"interfaces/IAlarm.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":122,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["returns",{"_index":16,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["rgb(20",{"_index":920,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["rgba(48",{"_index":658,"title":{},"body":{"components/HomePage.html":{}}}],["rgba(51",{"_index":663,"title":{},"body":{"components/HomePage.html":{}}}],["rgba(66",{"_index":651,"title":{},"body":{"components/HomePage.html":{}}}],["right",{"_index":597,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["riordino",{"_index":323,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["role",{"_index":372,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["root",{"_index":31,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["root'},{'name",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["route",{"_index":701,"title":{},"body":{"guards/HomeResolver.html":{}}}],["router",{"_index":694,"title":{},"body":{"guards/HomeResolver.html":{}}}],["routereusestrategy",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":448,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":688,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":459,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":699,"title":{},"body":{"guards/HomeResolver.html":{}}}],["routes",{"_index":449,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["routing.module.ts",{"_index":446,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["row",{"_index":649,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["running",{"_index":538,"title":{},"body":{"components/HomePage.html":{},"injectables/NotificationService.html":{},"injectables/TimerService.html":{}}}],["rxjs",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["salvataggio",{"_index":880,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["same",{"_index":310,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["sart",{"_index":499,"title":{},"body":{"components/HomePage.html":{}}}],["sat",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["save",{"_index":157,"title":{},"body":{"injectables/AlarmService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["savedalarm.value",{"_index":199,"title":{},"body":{"injectables/AlarmService.html":{}}}],["savedata",{"_index":974,"title":{},"body":{"injectables/StorageService.html":{}}}],["savedata(data",{"_index":1001,"title":{},"body":{"injectables/StorageService.html":{}}}],["savedstatus",{"_index":1126,"title":{},"body":{"injectables/TimerService.html":{}}}],["savedstatus.clickcounter",{"_index":1136,"title":{},"body":{"injectables/TimerService.html":{}}}],["savedstatus.timelist",{"_index":1131,"title":{},"body":{"injectables/TimerService.html":{}}}],["savedstatus?.isrunning",{"_index":1129,"title":{},"body":{"injectables/TimerService.html":{}}}],["savesettings",{"_index":975,"title":{},"body":{"injectables/StorageService.html":{}}}],["savesettings(settings",{"_index":1004,"title":{},"body":{"injectables/StorageService.html":{}}}],["savestatus",{"_index":976,"title":{},"body":{"injectables/StorageService.html":{}}}],["savestatus(status",{"_index":1006,"title":{},"body":{"injectables/StorageService.html":{}}}],["saving",{"_index":220,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/StorageService.html":{}}}],["schedule",{"_index":751,"title":{},"body":{"injectables/NotificationService.html":{}}}],["se",{"_index":236,"title":{},"body":{"injectables/AlarmService.html":{}}}],["second",{"_index":767,"title":{},"body":{"injectables/NotificationService.html":{}}}],["secondary",{"_index":374,"title":{},"body":{"injectables/AlertService.html":{}}}],["seconds",{"_index":723,"title":{},"body":{"injectables/NotificationService.html":{}}}],["selected",{"_index":280,"title":{},"body":{"classes/Alarms.html":{},"interfaces/PickerColumnOption.html":{}}}],["selectedindex",{"_index":909,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["selector",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["service",{"_index":535,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["service/storage/storage.service",{"_index":401,"title":{},"body":{"components/AppComponent.html":{}}}],["set",{"_index":173,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{}}}],["setalarms(alarms",{"_index":283,"title":{},"body":{"classes/Alarms.html":{}}}],["setdefaultalarms",{"_index":158,"title":{},"body":{"injectables/AlarmService.html":{}}}],["setings",{"_index":495,"title":{},"body":{"components/HomePage.html":{}}}],["setinterval(this.clockrunning.bind(this",{"_index":1138,"title":{},"body":{"injectables/TimerService.html":{}}}],["setting",{"_index":996,"title":{},"body":{"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["settings",{"_index":412,"title":{"classes/Settings.html":{}},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settingscontainer",{"_index":919,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["settingspopovercomponent",{"_index":411,"title":{"components/SettingsPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{},"overview.html":{}}}],["showalarmdurationpicker",{"_index":816,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["showalarmdurationpicker(alarm",{"_index":840,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["showalarmpicker",{"_index":817,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["showalarmpicker(alarm",{"_index":842,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["showsettings",{"_index":480,"title":{},"body":{"components/HomePage.html":{}}}],["siamo",{"_index":237,"title":{},"body":{"injectables/AlarmService.html":{}}}],["sistemare",{"_index":547,"title":{},"body":{"components/HomePage.html":{}}}],["size",{"_index":45,"title":{},"body":{"injectables/AdvertisementService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["size:2rem",{"_index":631,"title":{},"body":{"components/HomePage.html":{}}}],["size:3rem",{"_index":638,"title":{},"body":{"components/HomePage.html":{}}}],["size:4rem",{"_index":641,"title":{},"body":{"components/HomePage.html":{}}}],["size:5rem",{"_index":644,"title":{},"body":{"components/HomePage.html":{}}}],["size:7rem",{"_index":647,"title":{},"body":{"components/HomePage.html":{}}}],["smallicon",{"_index":749,"title":{},"body":{"injectables/NotificationService.html":{}}}],["soluzione",{"_index":232,"title":{},"body":{"injectables/AlarmService.html":{}}}],["sostituire",{"_index":1019,"title":{},"body":{"injectables/StorageService.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolver.html":{},"interfaces/IAlarm.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{}}}],["space",{"_index":624,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["spec\\.ts",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":783,"title":{},"body":{"classes/Settings.html":{}}}],["specified",{"_index":730,"title":{},"body":{"injectables/NotificationService.html":{}}}],["spostata",{"_index":882,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["src/.../constant.ts",{"_index":1233,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../default_val.ts",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interfaces.ts",{"_index":1231,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../keys.ts",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../labels.ts",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utility.ts",{"_index":1234,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":445,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":400,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":426,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/common/constant",{"_index":857,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["src/app/common/constant.ts",{"_index":1161,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/default_val",{"_index":180,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/common/default_val.ts",{"_index":1168,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/keys",{"_index":182,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/StorageService.html":{}}}],["src/app/common/keys.ts",{"_index":1169,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/labels",{"_index":184,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{}}}],["src/app/common/labels.ts",{"_index":1170,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/utility",{"_index":186,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/TimerService.html":{}}}],["src/app/common/utility.ts",{"_index":1171,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/history/history/history.component.ts",{"_index":462,"title":{},"body":{"components/HistoryComponent.html":{},"coverage.html":{}}}],["src/app/components/history/history/history.component.ts:12",{"_index":469,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/components/history/history/history.component.ts:8",{"_index":468,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/components/settingspopover/settings",{"_index":514,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["src/app/models/alarm",{"_index":187,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/SettingsPopoverComponent.html":{}}}],["src/app/models/alarm.ts",{"_index":64,"title":{},"body":{"classes/Alarm.html":{},"coverage.html":{}}}],["src/app/models/alarm.ts:17",{"_index":95,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/alarm.ts:18",{"_index":96,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/alarm.ts:19",{"_index":93,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/alarm.ts:20",{"_index":94,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/alarm.ts:21",{"_index":86,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/alarm.ts:40",{"_index":121,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/alarm.ts:49",{"_index":124,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/alarm.ts:59",{"_index":115,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/alarm.ts:90",{"_index":98,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/alarms",{"_index":188,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/models/alarms.ts",{"_index":262,"title":{},"body":{"classes/Alarms.html":{},"coverage.html":{}}}],["src/app/models/alarms.ts:114",{"_index":275,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/alarms.ts:14",{"_index":282,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/alarms.ts:18",{"_index":284,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/alarms.ts:27",{"_index":279,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/alarms.ts:55",{"_index":268,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/alarms.ts:9",{"_index":265,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/alarms.ts:99",{"_index":266,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/interfaces",{"_index":1009,"title":{},"body":{"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["src/app/models/interfaces.ts",{"_index":942,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/interfaces.ts:23",{"_index":1062,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/interfaces.ts:32",{"_index":1065,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/interfaces.ts:33",{"_index":1066,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/interfaces.ts:34",{"_index":1063,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/interfaces.ts:35",{"_index":1064,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/interfaces.ts:36",{"_index":1067,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/interfaces.ts:37",{"_index":1068,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/interfaces/ialarm.ts",{"_index":707,"title":{},"body":{"interfaces/IAlarm.html":{},"coverage.html":{}}}],["src/app/models/interfaces/pickeroption.ts",{"_index":770,"title":{},"body":{"interfaces/PickerColumnOption.html":{},"coverage.html":{}}}],["src/app/models/settings",{"_index":855,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["src/app/models/settings.ts",{"_index":772,"title":{},"body":{"classes/Settings.html":{},"coverage.html":{}}}],["src/app/models/settings.ts:10",{"_index":777,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/models/settings.ts:37",{"_index":779,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/models/settings.ts:83",{"_index":781,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/pages/home/home",{"_index":684,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":676,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":471,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:147",{"_index":498,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:163",{"_index":490,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:176",{"_index":493,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:21",{"_index":504,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:22",{"_index":510,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:23",{"_index":509,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:24",{"_index":508,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:25",{"_index":511,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:27",{"_index":486,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:39",{"_index":507,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:40",{"_index":506,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:41",{"_index":505,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:66",{"_index":502,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:76",{"_index":487,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.resolve.ts",{"_index":691,"title":{},"body":{"guards/HomeResolver.html":{},"coverage.html":{}}}],["src/app/pages/home/home.resolve.ts:13",{"_index":700,"title":{},"body":{"guards/HomeResolver.html":{}}}],["src/app/pages/home/home.resolve.ts:6",{"_index":695,"title":{},"body":{"guards/HomeResolver.html":{}}}],["src/app/service/advertisement/advertisement.service",{"_index":517,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/service/advertisement/advertisement.service.ts",{"_index":6,"title":{},"body":{"injectables/AdvertisementService.html":{},"coverage.html":{}}}],["src/app/service/advertisement/advertisement.service.ts:11",{"_index":19,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["src/app/service/advertisement/advertisement.service.ts:19",{"_index":15,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["src/app/service/advertisement/advertisement.service.ts:7",{"_index":14,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["src/app/service/alarm/alarm.service",{"_index":518,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["src/app/service/alarm/alarm.service.ts",{"_index":151,"title":{},"body":{"injectables/AlarmService.html":{},"coverage.html":{}}}],["src/app/service/alarm/alarm.service.ts:109",{"_index":165,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:15",{"_index":163,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:21",{"_index":178,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:25",{"_index":169,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:29",{"_index":170,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:33",{"_index":168,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:69",{"_index":172,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:84",{"_index":171,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:89",{"_index":176,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alert/alert.service",{"_index":519,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["src/app/service/alert/alert.service.ts",{"_index":335,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["src/app/service/alert/alert.service.ts:25",{"_index":350,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/service/alert/alert.service.ts:52",{"_index":360,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/service/alert/alert.service.ts:7",{"_index":341,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/service/alert/alert.service.ts:70",{"_index":346,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/service/alert/alert.service.ts:9",{"_index":361,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/service/notification/notification.service.ts",{"_index":709,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/service/notification/notification.service.ts:13",{"_index":735,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:14",{"_index":736,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:15",{"_index":718,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:22",{"_index":720,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:51",{"_index":725,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:56",{"_index":731,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:63",{"_index":722,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:73",{"_index":727,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/storage/storage.service",{"_index":520,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["src/app/service/storage/storage.service.ts",{"_index":961,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/service/storage/storage.service.ts:112",{"_index":990,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:128",{"_index":992,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:14",{"_index":1008,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:144",{"_index":993,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:15",{"_index":977,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:169",{"_index":987,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:176",{"_index":988,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:183",{"_index":984,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:192",{"_index":981,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:199",{"_index":985,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:208",{"_index":983,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:219",{"_index":979,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:26",{"_index":994,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:47",{"_index":998,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:54",{"_index":999,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:65",{"_index":1002,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:79",{"_index":1005,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:93",{"_index":1007,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/timer/timer.service",{"_index":521,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{}}}],["src/app/service/timer/timer.service.ts",{"_index":1069,"title":{},"body":{"injectables/TimerService.html":{},"coverage.html":{}}}],["src/app/service/timer/timer.service.ts:106",{"_index":1103,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:115",{"_index":1089,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:131",{"_index":1086,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:14",{"_index":1111,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:155",{"_index":1092,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:159",{"_index":1093,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:16",{"_index":1118,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:163",{"_index":1090,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:167",{"_index":1091,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:17",{"_index":1120,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:174",{"_index":1094,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:18",{"_index":1114,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:181",{"_index":1096,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:19",{"_index":1112,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:20",{"_index":1108,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:203",{"_index":1095,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:21",{"_index":1117,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:22",{"_index":1119,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:23",{"_index":1115,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:24",{"_index":1113,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:26",{"_index":1085,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:29",{"_index":1110,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:30",{"_index":1116,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:31",{"_index":1109,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:56",{"_index":1099,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:77",{"_index":1100,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:89",{"_index":1098,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1195,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1197,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1198,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":209,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["start/stop",{"_index":488,"title":{},"body":{"components/HomePage.html":{}}}],["started",{"_index":476,"title":{"index.html":{}},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{}}}],["startedlist",{"_index":1071,"title":{},"body":{"injectables/TimerService.html":{}}}],["starting",{"_index":208,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{}}}],["startstoptimer",{"_index":481,"title":{},"body":{"components/HomePage.html":{}}}],["state",{"_index":698,"title":{},"body":{"guards/HomeResolver.html":{}}}],["statements",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":941,"title":{"interfaces/Status.html":{}},"body":{"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statusjson",{"_index":1036,"title":{},"body":{"injectables/StorageService.html":{}}}],["still",{"_index":721,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/TimerService.html":{}}}],["sting",{"_index":138,"title":{},"body":{"classes/Alarm.html":{}}}],["stop",{"_index":500,"title":{},"body":{"components/HomePage.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stopped",{"_index":477,"title":{},"body":{"components/HomePage.html":{}}}],["stoppedduration",{"_index":1072,"title":{},"body":{"injectables/TimerService.html":{}}}],["stoppedduration:any",{"_index":1123,"title":{},"body":{"injectables/TimerService.html":{}}}],["stoppedlist",{"_index":1073,"title":{},"body":{"injectables/TimerService.html":{}}}],["stopping",{"_index":214,"title":{},"body":{"injectables/AlarmService.html":{}}}],["storage",{"_index":221,"title":{},"body":{"injectables/AlarmService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["storage.get({key",{"_index":1017,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.set",{"_index":1032,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage/storage.service",{"_index":189,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/TimerService.html":{}}}],["storageservice",{"_index":162,"title":{"injectables/StorageService.html":{}},"body":{"injectables/AlarmService.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["stored",{"_index":827,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["str",{"_index":897,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["string",{"_index":83,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"interfaces/IAlarm.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["strong",{"_index":602,"title":{},"body":{"components/HomePage.html":{}}}],["styles",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["styleurls",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["subheader",{"_index":349,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{}}}],["subscribe",{"_index":41,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/TimerService.html":{}}}],["succeded",{"_index":272,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["sun",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1240,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":355,"title":{},"body":{"injectables/AlertService.html":{}}}],["svg",{"_index":1241,"title":{},"body":{"modules.html":{}}}],["t",{"_index":555,"title":{},"body":{"components/HomePage.html":{}}}],["table",{"_index":1202,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1201,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["templateurl",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["temporary",{"_index":825,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["testingdevices",{"_index":37,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["text",{"_index":370,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"interfaces/PickerColumnOption.html":{},"components/SettingsPopoverComponent.html":{}}}],["text:'ok",{"_index":894,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["then(res",{"_index":353,"title":{},"body":{"injectables/AlertService.html":{},"guards/HomeResolver.html":{}}}],["this._alarms",{"_index":192,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{}}}],["this._alarms.clear",{"_index":196,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this._alarms.filter(x",{"_index":312,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms.foreach(alarm",{"_index":293,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms.length",{"_index":287,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms.push(alarm",{"_index":200,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this._alarms.push(end",{"_index":218,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this._alarms.push(pause",{"_index":303,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms.push(start",{"_index":213,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this._alarms.sort((a",{"_index":326,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms.update(value",{"_index":225,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this._alarms[currentidx].update(value",{"_index":296,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms[idx].update(value",{"_index":291,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms[this._alarms.length",{"_index":307,"title":{},"body":{"classes/Alarms.html":{}}}],["this._id",{"_index":748,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this._startstoptxt",{"_index":543,"title":{},"body":{"components/HomePage.html":{}}}],["this.advertisementservice.banner",{"_index":528,"title":{},"body":{"components/HomePage.html":{}}}],["this.advertisementservice.initialize",{"_index":527,"title":{},"body":{"components/HomePage.html":{}}}],["this.alarms",{"_index":861,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.alarms.filter(x",{"_index":795,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.find(x",{"_index":799,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.length",{"_index":790,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.push(end",{"_index":786,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.push(pause",{"_index":796,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.push(start",{"_index":785,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.sort((a",{"_index":797,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.splice(idx,1",{"_index":800,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms[idx].index",{"_index":788,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms[idx].update(val",{"_index":205,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.alarms[idx].value",{"_index":787,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms[this.alarms.length",{"_index":794,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarmservice.getalarms",{"_index":862,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.alarmservice.getcurrenttimeindex",{"_index":554,"title":{},"body":{"components/HomePage.html":{}}}],["this.alarmservice.updatealarm(this.alarmtmpvalue",{"_index":885,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.alarmtmpindex",{"_index":876,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.alarmtmpvalue",{"_index":875,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.alert.presentconfirmalert(msg",{"_index":574,"title":{},"body":{"components/HomePage.html":{}}}],["this.alert.presentwarningalert(res.msg",{"_index":903,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.alertcontroller.create",{"_index":368,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.blanktime",{"_index":1148,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.calcdiff",{"_index":1145,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.clickcounter",{"_index":582,"title":{},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{}}}],["this.convertstr2date(this.status.timelist.start",{"_index":1050,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.convertstr2date(this.status.timelist.stop",{"_index":1052,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.diff",{"_index":953,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["this.diffms",{"_index":954,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["this.dismissclick",{"_index":886,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.duration",{"_index":132,"title":{},"body":{"classes/Alarm.html":{}}}],["this.getdelayedtime",{"_index":756,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.getstoredalarms",{"_index":191,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.getstoredstatus",{"_index":1026,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.index",{"_index":129,"title":{},"body":{"classes/Alarm.html":{}}}],["this.initializesettings",{"_index":1011,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.initializestatus",{"_index":1012,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.ispause",{"_index":131,"title":{},"body":{"classes/Alarm.html":{}}}],["this.istimeractive",{"_index":1151,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.key",{"_index":127,"title":{},"body":{"classes/Alarm.html":{}}}],["this.loaddefaultsettings",{"_index":1014,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.loadsettings",{"_index":859,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.myservice.presentconfirmalert('message",{"_index":352,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.notification",{"_index":743,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.notificationservice.addlocalnotification(msg",{"_index":1153,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.notificationservice.getpending",{"_index":1154,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.offset",{"_index":531,"title":{},"body":{"components/HomePage.html":{}}}],["this.onpause",{"_index":1124,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.onresume",{"_index":1125,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.pickercontroller.create(options",{"_index":913,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.platform.ready",{"_index":702,"title":{},"body":{"guards/HomeResolver.html":{},"injectables/StorageService.html":{}}}],["this.popovercontroller.create",{"_index":583,"title":{},"body":{"components/HomePage.html":{}}}],["this.popovercontroller.dismiss",{"_index":893,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.presenttoast(msg",{"_index":761,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.reset",{"_index":575,"title":{},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{}}}],["this.running",{"_index":1130,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.save",{"_index":222,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.savesettings(this.settings",{"_index":1023,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.setdefaultalarms",{"_index":193,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.settings",{"_index":869,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["this.settings.addalarm(str",{"_index":900,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.settings.alarms",{"_index":868,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["this.settings.alarms.length",{"_index":1055,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.settings.alarms[end",{"_index":1056,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.settings.alarms[idx",{"_index":1054,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.settings.deletealarm(alarm",{"_index":891,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.settings.updatealaram(time",{"_index":871,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.showalarmdurationpicker",{"_index":902,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.showalarmpicker(alarm",{"_index":889,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.start",{"_index":951,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["this.started",{"_index":1137,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.startstoptimer",{"_index":570,"title":{},"body":{"components/HomePage.html":{}}}],["this.status",{"_index":1025,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.status.timelist.start",{"_index":1049,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.status.timelist.stop",{"_index":1051,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.stop",{"_index":952,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["this.stoppedduration",{"_index":1141,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.storageservice.getalarmbyindex(this.timerservice.clickcounter",{"_index":546,"title":{},"body":{"components/HomePage.html":{}}}],["this.storageservice.getalarmcount",{"_index":556,"title":{},"body":{"components/HomePage.html":{}}}],["this.storageservice.getlastalarm().index",{"_index":567,"title":{},"body":{"components/HomePage.html":{}}}],["this.storageservice.getsettings",{"_index":892,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.storageservice.getstatus",{"_index":1127,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.storageservice.getstoreddata(keys.alarms",{"_index":194,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.storageservice.savedata(this._alarms",{"_index":223,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.storageservice.savestatus(status",{"_index":1150,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.time",{"_index":1147,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timebegan",{"_index":1132,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timelist",{"_index":540,"title":{},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{}}}],["this.timelist.start.length",{"_index":1156,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timelist.start.push(new",{"_index":1143,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timelist.start[0",{"_index":1133,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timelist.stop.push(this.timestopped",{"_index":1144,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timelist.stop[this.timelist.stop.length",{"_index":1135,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timerservice",{"_index":539,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.clickcounter",{"_index":559,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.gettimelist",{"_index":578,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.isrunning",{"_index":544,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.reset",{"_index":580,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.start",{"_index":577,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.stop",{"_index":576,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.timelist",{"_index":541,"title":{},"body":{"components/HomePage.html":{}}}],["this.timestopped",{"_index":1134,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timetoindex(datestr",{"_index":261,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.timetoindex(val",{"_index":141,"title":{},"body":{"classes/Alarm.html":{}}}],["this.timetoindex(val.value",{"_index":143,"title":{},"body":{"classes/Alarm.html":{}}}],["this.timetoindex(value",{"_index":130,"title":{},"body":{"classes/Alarm.html":{},"classes/Alarms.html":{}}}],["this.tmpsettings.alarms",{"_index":867,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.total",{"_index":955,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["this.totalms",{"_index":956,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["this.updategui",{"_index":542,"title":{},"body":{"components/HomePage.html":{}}}],["this.value",{"_index":128,"title":{},"body":{"classes/Alarm.html":{}}}],["this.value.split",{"_index":134,"title":{},"body":{"classes/Alarm.html":{}}}],["this_expr",{"_index":512,"title":{},"body":{"components/HomePage.html":{}}}],["thu",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":100,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["timebegan",{"_index":1074,"title":{},"body":{"injectables/TimerService.html":{}}}],["timecontainer",{"_index":627,"title":{},"body":{"components/HomePage.html":{}}}],["timelist",{"_index":478,"title":{"classes/TimeList.html":{}},"body":{"components/HomePage.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["timelistcontainer",{"_index":648,"title":{},"body":{"components/HomePage.html":{}}}],["timenumber",{"_index":149,"title":{},"body":{"classes/Alarm.html":{},"classes/Alarms.html":{}}}],["timer",{"_index":111,"title":{},"body":{"classes/Alarm.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"injectables/TimerService.html":{}}}],["timerfab",{"_index":666,"title":{},"body":{"components/HomePage.html":{}}}],["timerfabtxt",{"_index":668,"title":{},"body":{"components/HomePage.html":{}}}],["timerservice",{"_index":484,"title":{"injectables/TimerService.html":{}},"body":{"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"injectables/TimerService.html":{},"coverage.html":{},"overview.html":{}}}],["timerservice.gettime",{"_index":590,"title":{},"body":{"components/HomePage.html":{}}}],["timeslist",{"_index":654,"title":{},"body":{"components/HomePage.html":{}}}],["timestext",{"_index":660,"title":{},"body":{"components/HomePage.html":{}}}],["timestopped",{"_index":1075,"title":{},"body":{"injectables/TimerService.html":{}}}],["timestopped:any",{"_index":1122,"title":{},"body":{"injectables/TimerService.html":{}}}],["timestr",{"_index":110,"title":{},"body":{"classes/Alarm.html":{},"classes/Alarms.html":{}}}],["timestr.replace",{"_index":147,"title":{},"body":{"classes/Alarm.html":{},"classes/Alarms.html":{}}}],["timestr.value",{"_index":333,"title":{},"body":{"classes/Alarms.html":{}}}],["timetoindex",{"_index":76,"title":{},"body":{"classes/Alarm.html":{},"classes/Alarms.html":{}}}],["timetoindex(04:00",{"_index":108,"title":{},"body":{"classes/Alarm.html":{}}}],["timetoindex(12:00",{"_index":106,"title":{},"body":{"classes/Alarm.html":{}}}],["timetoindex(timestr",{"_index":97,"title":{},"body":{"classes/Alarm.html":{},"classes/Alarms.html":{}}}],["timetostring(alarmvalue",{"_index":792,"title":{},"body":{"classes/Settings.html":{}}}],["timetostring(val",{"_index":789,"title":{},"body":{"classes/Settings.html":{}}}],["tipo",{"_index":1047,"title":{},"body":{"injectables/StorageService.html":{}}}],["title",{"_index":744,"title":{},"body":{"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{}}}],["tmp",{"_index":133,"title":{},"body":{"classes/Alarm.html":{}}}],["tmp[0",{"_index":135,"title":{},"body":{"classes/Alarm.html":{}}}],["tmp[1",{"_index":136,"title":{},"body":{"classes/Alarm.html":{}}}],["tmptime",{"_index":331,"title":{},"body":{"classes/Alarms.html":{}}}],["today",{"_index":564,"title":{},"body":{"components/HomePage.html":{}}}],["todo",{"_index":201,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["top",{"_index":598,"title":{},"body":{"components/HomePage.html":{}}}],["total",{"_index":959,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["totalms",{"_index":960,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{}}}],["tracked",{"_index":1152,"title":{},"body":{"injectables/TimerService.html":{}}}],["transform",{"_index":600,"title":{},"body":{"components/HomePage.html":{},"interfaces/PickerColumnOption.html":{}}}],["translatey",{"_index":601,"title":{},"body":{"components/HomePage.html":{}}}],["translucent",{"_index":584,"title":{},"body":{"components/HomePage.html":{}}}],["tree",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["trovare",{"_index":231,"title":{},"body":{"injectables/AlarmService.html":{}}}],["true",{"_index":36,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"classes/Settings.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["tue",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tutte",{"_index":1044,"title":{},"body":{"injectables/StorageService.html":{}}}],["type",{"_index":89,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"interfaces/IAlarm.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"interfaces/Status.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof(alarm",{"_index":300,"title":{},"body":{"classes/Alarms.html":{}}}],["typeof(val",{"_index":140,"title":{},"body":{"classes/Alarm.html":{}}}],["una",{"_index":228,"title":{},"body":{"injectables/AlarmService.html":{}}}],["unknown",{"_index":732,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/StorageService.html":{}}}],["up",{"_index":497,"title":{},"body":{"components/HomePage.html":{}}}],["update",{"_index":78,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{}}}],["update(val",{"_index":114,"title":{},"body":{"classes/Alarm.html":{}}}],["update(value",{"_index":278,"title":{},"body":{"classes/Alarms.html":{}}}],["updatealaram(val",{"_index":204,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{}}}],["updatealarm",{"_index":159,"title":{},"body":{"injectables/AlarmService.html":{}}}],["updatealarm(value",{"_index":174,"title":{},"body":{"injectables/AlarmService.html":{}}}],["updated",{"_index":281,"title":{},"body":{"classes/Alarms.html":{}}}],["updategui",{"_index":482,"title":{},"body":{"components/HomePage.html":{}}}],["use",{"_index":351,"title":{},"body":{"injectables/AlertService.html":{}}}],["useclass",{"_index":444,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":101,"title":{},"body":{"classes/Alarm.html":{},"classes/Alarms.html":{}}}],["user",{"_index":529,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["utility",{"_index":185,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["utility.gettime(24",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utility.gettime(60",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utility.zeroprefix(hour",{"_index":257,"title":{},"body":{"injectables/AlarmService.html":{}}}],["utility.zeroprefix(min",{"_index":259,"title":{},"body":{"injectables/AlarmService.html":{}}}],["val",{"_index":116,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{}}}],["val.detail.value",{"_index":870,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["val.duration",{"_index":144,"title":{},"body":{"classes/Alarm.html":{}}}],["val.ispause",{"_index":146,"title":{},"body":{"classes/Alarm.html":{}}}],["val.key",{"_index":145,"title":{},"body":{"classes/Alarm.html":{}}}],["val.value",{"_index":142,"title":{},"body":{"classes/Alarm.html":{}}}],["value",{"_index":68,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"interfaces/IAlarm.html":{},"injectables/NotificationService.html":{},"interfaces/PickerColumnOption.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.hours.value",{"_index":898,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["value.minutes.value",{"_index":899,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["values",{"_index":207,"title":{},"body":{"injectables/AlarmService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["var",{"_index":148,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["variable",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1249,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":119,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolver.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["wait",{"_index":358,"title":{},"body":{"injectables/AlertService.html":{}}}],["want",{"_index":573,"title":{},"body":{"components/HomePage.html":{}}}],["wed",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["white",{"_index":630,"title":{},"body":{"components/HomePage.html":{}}}],["width",{"_index":633,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["wooops",{"_index":357,"title":{},"body":{"injectables/AlertService.html":{}}}],["working",{"_index":565,"title":{},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{}}}],["works",{"_index":470,"title":{},"body":{"components/HistoryComponent.html":{}}}],["wrap",{"_index":937,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["x.index",{"_index":313,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["year",{"_index":752,"title":{},"body":{"injectables/NotificationService.html":{},"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["yearmonth",{"_index":947,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["yyyy",{"_index":946,"title":{},"body":{"interfaces/Status.html":{},"classes/TimeList.html":{},"miscellaneous/enumerations.html":{}}}],["zero",{"_index":1149,"title":{},"body":{"injectables/TimerService.html":{}}}],["zeroprefix",{"_index":1084,"title":{},"body":{"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["zeroprefix(num",{"_index":1101,"title":{},"body":{"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["zeros",{"_index":1104,"title":{},"body":{"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AdvertisementService.html":{"url":"injectables/AdvertisementService.html","title":"injectable - AdvertisementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdvertisementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Advertisement/advertisement.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                banner\n                            \n                            \n                                    Async\n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Advertisement/advertisement.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        banner\n                        \n                    \n                \n            \n            \n                \n                    \n                    banner()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Advertisement/advertisement.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Advertisement/advertisement.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AdMob, AdMobBannerSize, BannerAdOptions, BannerAdPluginEvents, BannerAdPosition, BannerAdSize } from '@capacitor-community/admob';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdvertisementService {\n\n  constructor() { }\n  \n  async initialize(): Promise {\n     AdMob.initialize({\n       requestTrackingAuthorization: true,\n      testingDevices: ['2077ef9a63d2b398840261c8221a0c9b'],\n      initializeForTesting: true,\n    });\n  }\n  \n  async banner(): Promise {\n    AdMob.addListener(BannerAdPluginEvents.Loaded, () => {\n      // Subscribe Banner Event Listener\n    });\n    \n    AdMob.addListener(BannerAdPluginEvents.SizeChanged, (size: AdMobBannerSize) => {\n      // Subscribe Change Banner Size\n    });\n    \n    const options: BannerAdOptions = {\n      adId: 'YOUR ADID',\n      adSize: BannerAdSize.BANNER,\n      position: BannerAdPosition.BOTTOM_CENTER,\n      margin: 0,\n      // isTesting: true\n      // npa: true\n    };\n    AdMob.showBanner(options);\n  }\n  \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Alarm.html":{"url":"classes/Alarm.html","title":"class - Alarm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Alarm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/Alarm.ts\n        \n\n\n            \n                Description\n            \n            \n                Alarm is identified by an idex, a value and a key\n\n            \n\n\n            \n                Implements\n            \n            \n                            IAlarm\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                duration\n                            \n                            \n                                index\n                            \n                            \n                                isPause\n                            \n                            \n                                key\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                timeToIndex\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Hour\n                                \n                                \n                                    Minutes\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string, value: string, isPause: boolean, duration: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/MODELS/Alarm.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isPause\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        duration\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/Alarm.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/Alarm.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPause\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/Alarm.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/Alarm.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/Alarm.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        timeToIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    timeToIndex(timeStr: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/Alarm.ts:90\n                \n            \n\n\n            \n                \n                    Convert the time value from string to number, used as index\nCall by passing a time string in the format \"HH:mm\"\n    timeToIndex(12:00) = 1200\n    timeToIndex(04:00) = 400\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    timeStr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Alarm timer string (\"HH:mm\")\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            Call by passing a time string in the format &quot;HH:mm&quot;\n    timeToIndex(12:00) = 1200 \n    timeToIndex(04:00) = 400\n                        \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        Alarm index\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(val: string | Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/Alarm.ts:59\n                \n            \n\n\n            \n                \n                    Update value and index of the alarm\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                string | Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        if value is passed, the index is Automatically update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Hour\n                    \n                \n\n                \n                    \n                        getHour()\n                    \n                \n                            \n                                \n                                    Defined in src/app/MODELS/Alarm.ts:40\n                                \n                            \n                    \n                        \n                                Return the hour of the alarm as string\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Minutes\n                    \n                \n\n                \n                    \n                        getMinutes()\n                    \n                \n                            \n                                \n                                    Defined in src/app/MODELS/Alarm.ts:49\n                                \n                            \n                    \n                        \n                                Return the minute of the alarm as string\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { IAlarm } from \"./INTERFACES/IAlarm\";\n\n/**\n * Alarm is identified by an idex, a value and a key\n */\nexport class Alarm implements IAlarm {\n        \n    key: string = null;\n    value: string = null;\n    index: number = null;\n    isPause: boolean = null;\n    duration: number = null;\n\n    constructor(\n        key: string = null, \n        value: string = null, \n        isPause: boolean = null, \n        duration: number = null\n    ) {\n        this.key      = key,\n        this.value    = value,\n        this.index    = this.timeToIndex(value),\n        this.isPause  = isPause,\n        this.duration = duration\n    }\n    \n    /**\n     * Return the hour of the alarm as string\n     * @returns {string} Alarm hour\n     */\n    public get Hour(): string {\n        let tmp = this.value.split(\":\");\n        return tmp[0];\n    };\n\n    /**\n     * Return the minute of the alarm as string\n     * @returns {string} Alarm minutes\n     */\n    public get Minutes(): string {\n        let tmp = this.value.split(\":\");\n        return tmp[1];\n    }\n\n    /**\n     * Update value and index of the alarm\n     * \n     * @param {sting | Alarm} val if value is passed, the index is Automatically update\n     */\n    public update(val: string | Alarm) {\n        console.log('Updating alarm...');\n        if (typeof(val) == 'string') {\n            this.value = val;\n            this.index = this.timeToIndex(val);\n        } else {\n            this.value = val.value;\n            this.index = this.timeToIndex(val.value);\n            if (val.duration) {\n                this.duration = val.duration;\n            }\n            if (val.key) {\n                this.key = val.key;\n            }\n            if (val.isPause) {\n                this.isPause = val.isPause;\n            }\n        }\n    }\n\n\n    /**\n    * Convert the time value from string to number, used as index\n    * \n    * @example\n    * Call by passing a time string in the format \"HH:mm\"\n    *     timeToIndex(12:00) = 1200 \n    *     timeToIndex(04:00) = 400\n    * @param {string} timeStr Alarm timer string (\"HH:mm\")\n    * @returns {number} Alarm index\n    */\n    private timeToIndex(timeStr: string): number {\n        timeStr = timeStr.replace(\":\", \"\");\n        var timeNumber: number = + timeStr;\n        return timeNumber;\n    }\n    \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlarmService.html":{"url":"injectables/AlarmService.html","title":"injectable - AlarmService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlarmService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Alarm/alarm.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _alarms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createAlarm\n                            \n                            \n                                    Public\n                                GetStoredAlarms\n                            \n                            \n                                    Public\n                                Reset\n                            \n                            \n                                    Public\n                                ResetDefault\n                            \n                            \n                                    Public\n                                Save\n                            \n                            \n                                    Private\n                                SetDefaultAlarms\n                            \n                            \n                                    Public\n                                updateAlarm\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Alarms\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Alarm/alarm.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createAlarm\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAlarm(key: string, value: string, isPause: boolean, duration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        Create a new Alarm\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                    \n                                \n                                \n                                    isPause\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                    \n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Alarm\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        GetStoredAlarms\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetStoredAlarms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Reset\n                        \n                    \n                \n            \n            \n                \n                    \n                    Reset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ResetDefault\n                        \n                    \n                \n            \n            \n                \n                    \n                    ResetDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Save\n                        \n                    \n                \n            \n            \n                \n                    \n                    Save()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        SetDefaultAlarms\n                        \n                    \n                \n            \n            \n                \n                    \n                    SetDefaultAlarms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:69\n                \n            \n\n\n            \n                \n                    Set default alarm\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateAlarm\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAlarm(value: string, idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _alarms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Alarms\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Alarm/alarm.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Alarms\n                    \n                \n\n                \n                    \n                        getAlarms()\n                    \n                \n                            \n                                \n                                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DEFAULT_VAL } from 'src/app/COMMON/DEFAULT_VAL';\nimport { KEYS } from 'src/app/COMMON/KEYS';\nimport { LABELS } from 'src/app/COMMON/LABELS';\nimport { Utility } from 'src/app/COMMON/Utility';\nimport { Alarm } from 'src/app/MODELS/Alarm';\nimport { Alarms } from 'src/app/MODELS/alarms';\nimport { StorageService } from '../Storage/storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlarmService {\n  \n  private _alarms?: Alarms;\n  \n  constructor(private storageService: StorageService) { \n    this.GetStoredAlarms();\n  }\n\n  public get Alarms(): Alarms {\n    return this._alarms;\n  }\n\n  public Reset() {\n    this.GetStoredAlarms();\n  }\n\n  public ResetDefault() {\n    this.SetDefaultAlarms();\n  }\n\n  public GetStoredAlarms() {\n    this.storageService.getStoredData(KEYS.ALARMS)\n    .then( res => {\n      if (res == null) {\n        this.SetDefaultAlarms(); \n      } else {\n        this._alarms.clear();\n        res.forEach(savedAlarm => {\n          let alarm = new Alarm(savedAlarm.key, savedAlarm.value);\n          this._alarms.push(alarm);\n        });\n      }\n    })\n  }\n\n  // ToDo\n  // miglirabole\n  // /**\n  // * Update Alarm by positional index\n  // * @param val string\n  // * @param idx number\n  // */\n  //  public updateAlaram(val: string, idx: number) {\n  //   this.alarms[idx].update(val);\n  // };\n\n\n\n\n\n\n\n\n  /**\n   * Set default alarm\n   */\n  private SetDefaultAlarms() {\n    console.log('Loading default alarm values...');\n    this._alarms.clear();\n    // Default starting time\n    const start: Alarm = new Alarm(LABELS.START, DEFAULT_VAL.START, false);\n    this._alarms.push(start);\n    // Default stopping time\n    const end: Alarm = new Alarm(LABELS.STOP, DEFAULT_VAL.STOP, false);\n    this._alarms.push(end);\n    console.log('Default alarms: ', this._alarms);\n    // Saving on storage\n    this.Save();\n\n  }\n  \n  public Save() {\n    this.storageService.SaveData(this._alarms, KEYS.ALARMS);\n  }\n\n\n  public updateAlarm(value: string, idx: number = null) {\n    if (idx != null) {\n      this._alarms.update(value);\n    }\n    else {\n\n    }\n  }\n\n  // ToDo\n  // deve diventare una insert/add alarm\n\n  /**\n  * \n  * @param key Create a new Alarm\n  * @param value \n  * @param isPause \n  * @param duration \n  * @returns \n  */\n  public createAlarm (key: string = null, value: string = null, isPause: boolean = null, duration: number = null): Alarm {\n    var alarm: Alarm = new Alarm(key, value, true); \n    return alarm;\n  }\n  \n  \n\n  \n  \n  \n  \n  \n  \n  // ToDo\n  // trovare una soluzione differente per capire se siamo dentro a fuori il range degli allarmi\n  // per poi gestre i messaggi\n\n  // /**\n  //  * \n  //  * Get the current hour and minutes as number (ex. 13:15 => 1315)\n  //  */\n  //  getCurrentTimeIndex() {\n  //   let current = new Date();\n  //   let hour = current.getHours()\n  //   let min = current.getMinutes()\n  //   let dateStr = Utility.zeroPrefix(hour, 2) + \":\" + Utility.zeroPrefix(min, 2);\n  //   let dateIdx = this.timeToIndex(dateStr);\n  //   return dateIdx;\n  // }\n  \n  \n  \n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Alarms.html":{"url":"classes/Alarms.html","title":"class - Alarms","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Alarms\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/alarms.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _alarms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                push\n                            \n                            \n                                    Private\n                                timeToIndex\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Alarms\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/MODELS/alarms.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _alarms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Alarm[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/alarms.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/alarms.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        push\n                        \n                    \n                \n            \n            \n                \n                    \n                    push(alarm: string | Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/alarms.ts:55\n                \n            \n\n\n            \n                \n                    Add a nex alarm to the alarm array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                                string | Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { succeded: boolean; msg: string; }\n\n                    \n                    \n                        Object {succeded: boolean, msg: string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        timeToIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    timeToIndex(timeStr: string | Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/alarms.ts:114\n                \n            \n\n\n            \n                \n                    Convert the time value from string to number, used as index\nex.\n12:00 => 1200\n04:00 => 400\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeStr\n                                    \n                                                string | Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(value: string | Alarm, idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/alarms.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string | Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        if passed, the Alarm at selected index will be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Alarms\n                    \n                \n\n                \n                    \n                        getAlarms()\n                    \n                \n                            \n                                \n                                    Defined in src/app/MODELS/alarms.ts:14\n                                \n                            \n\n                \n                    \n                        setAlarms(alarms: Alarm[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/MODELS/alarms.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            alarms\n                                                    \n                                                            \n                                                                            Alarm[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { KEYS } from 'src/app/COMMON/KEYS';\nimport { LABELS } from 'src/app/COMMON/LABELS';\nimport { Utility } from 'src/app/COMMON/Utility';\nimport { Alarm } from 'src/app/MODELS/Alarm';\n\n\nexport class Alarms {\n  \n  private _alarms?: Alarm[] = [];\n  \n  constructor() { \n  }\n  \n  public get Alarms(): Alarm[] {\n    return this._alarms;\n  }\n  \n  public set Alarms(alarms: Alarm[]) {\n    this._alarms = alarms;\n  }\n  \n  /**\n  * \n  * @param value \n  * @param idx if passed, the Alarm at selected index will be updated\n  */\n  public update(value: string | Alarm, idx: number = null) {\n    if (idx != null) {\n      if(idx > this._alarms.length) {\n        console.log(\"Index out of range\");\n        return;\n      }\n      console.log(\"Alarms updated...\");\n      this._alarms[idx].update(value);\n    }\n    else {\n      let currentIdx = this.timeToIndex(value);\n      this._alarms.forEach(alarm => {\n        if(currentIdx == alarm.index) {\n          this._alarms[currentIdx].update(value);\n          console.log(\"Alarms updated...\");\n          return;\n        }\n      });\n      console.log(\"Index out of range\");\n    }\n  }\n  \n  \n  /**\n  * Add a nex alarm to the alarm array\n  * @param alarmValue - string \"hh:mm\"\n  * @returns Object {succeded: boolean, msg: string}\n  */\n  public push(alarm: string | Alarm) {\n    \n    // create pause element\n    let pause: Alarm;\n    if (typeof(alarm) == \"string\") {\n      pause = new Alarm(LABELS.PAUSE, alarm, true);\n    } else {\n      pause = alarm;\n    }\n    console.log(pause);\n    \n    if (this._alarms.length == 0) {\n      this._alarms.push(pause);\n      return {succeded: true, msg:'Pause updated'};\n    }\n    \n    // ChecK if out of range\n    if (pause.index  this._alarms[this._alarms.length - 1].index) {\n      let msg = 'PAUSE OUT OF RANGE!';\n      console.log(msg);\n      return {succeded: false, msg: msg};\n    }\n    // check if there is an alarm with the same index\n    //     => same starting time\n    var existingAlarm = this._alarms.filter(x => x.index == pause.index);\n    if (existingAlarm.length > 0) {\n      return {succeded: false, msg:'A PAUSE at the same time ALREADY EXISTS!'};;\n    }\n    \n    // aggiungo l'elemento alla fine e poi riordino l'array\n    this._alarms.push(pause);\n    // reorder the alarm array\n    this._alarms.sort((a, b) => {\n      if (a.index && b.index) {\n        if (a.index > b.index) return 1;\n        if (a.index  1200 \n  *     04:00 => 400\n  * @param timeStr \n  * @returns \n  */\n  private timeToIndex(timeStr: string | Alarm): number {\n    let tmpTime: string;\n    if(typeof(timeStr) == \"string\") {\n      tmpTime = timeStr.replace(\":\", \"\");\n    } else {\n      tmpTime = timeStr.value;\n    }\n    var timeNumber: number = + tmpTime;\n    return timeNumber;\n  }\n  \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Alert/alert.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertController\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                presentConfirm\n                            \n                            \n                                    Async\n                                presentConfirmAlert\n                            \n                            \n                                    Async\n                                presentWarningAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Alert/alert.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        presentConfirm\n                        \n                    \n                \n            \n            \n                \n                    \n                    presentConfirm(header: any, message: any, cancelText: any, okText: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alert/alert.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    header\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cancelText\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    okText\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        presentConfirmAlert\n                        \n                    \n                \n            \n            \n                \n                    \n                    presentConfirmAlert(msg: string, subheader: string | null, header: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alert/alert.service.ts:25\n                \n            \n\n\n            \n                \n                    Use as:\nthis.myservice.presentConfirmAlert('message')\n.then(res => {\n  if (res) {\n    // codes\n  }\n});\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Are you sure?'\n                                    \n\n                                    \n                                        message to display\n\n                                    \n                                \n                                \n                                    subheader\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        (optional) subheader to display (Default null)\n\n                                    \n                                \n                                \n                                    header\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'WOOOPS'\n                                    \n\n                                    \n                                        (optional) header to display (Default 'WAIT')\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Use as:\nthis.myservice.presentConfirmAlert('message')\n.then(res => {\n  if (res) {\n    // codes\n  }\n});\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        presentWarningAlert\n                        \n                    \n                \n            \n            \n                \n                    \n                    presentWarningAlert(msg: string, subheader: string | null, header: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alert/alert.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Are you sure?'\n                                    \n\n                                \n                                \n                                    subheader\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    header\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'WOOOPS'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        alertController\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AlertController\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Alert/alert.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(public alertController: AlertController) { }\n\n  /**\n   * \n   * @param msg message to display\n   * @param subheader (optional) subheader to display (Default null)\n   * @param header (optional) header to display (Default 'WAIT')\n   * @returns \n   * Use as:\n   * this.myservice.presentConfirmAlert('message')\n   * .then(res => {\n   *   if (res) {\n   *     // codes\n   *   }\n   * });\n   */\n  async presentConfirmAlert(msg: string = 'Are you sure?', subheader: string | null = null, header: string = 'WOOOPS'): Promise {\n    return new Promise(async (resolve) => {\n      const alert = await this.alertController.create({\n        header: header,\n        subHeader: subheader,\n        message: msg,\n        buttons: [\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: (cancel) => {\n              resolve(false);\n            }\n          }, {\n            text: 'Continue',\n            handler: (ok) => {\n              resolve(true);\n            }\n          }\n        ]\n      });\n      alert.present();\n    });\n  }\n\n\n  async presentWarningAlert(msg: string = 'Are you sure?', subheader: string | null = null, header: string = 'WOOOPS'): Promise {\n    return new Promise(async (resolve) => {\n      const alert = await this.alertController.create({\n        header: header,\n        subHeader: subheader,\n        message: msg,\n        buttons: [\n          {\n            text: 'OK',\n            role: 'cancel',\n            cssClass: 'secondary',\n          }\n        ]\n      });\n      alert.present();\n    });\n  }\n\n  async presentConfirm(header: any, message: any,cancelText: any,okText: any): Promise {\n    return new Promise(async (resolve) => {\n      const alert = await this.alertController.create({\n        header: header,\n        message: message,\n        buttons: [\n          {\n            text: cancelText,\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: (cancel) => {\n              resolve('cancel');\n            }\n          }, {\n            text: okText,\n            handler: (ok) => {\n              resolve('ok');\n            }\n          }\n        ]\n      });\n      alert.present();\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { StorageService } from './SERVICE/Storage/storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n  constructor(private storageService: StorageService) { }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HistoryComponent', 'selector': 'app-history'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'SettingsPopoverComponent', 'selector': 'app-settings-popover'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [\n    BrowserModule, \n    IonicModule.forRoot(), \n    AppRoutingModule\n  ],\n  providers: [{ provide: RouteReuseStrategy, useClass: IonicRouteStrategy }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    loadChildren: () => \"import('./PAGES/home/home.module').then( m => m.HomePageModule)\"\n  },\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoryComponent.html":{"url":"components/HistoryComponent.html","title":"component - HistoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HistoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/COMPONENTS/history/history/history.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-history\n            \n\n            \n                styleUrls\n                ./history.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./history.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/COMPONENTS/history/history/history.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/history/history/history.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.scss'],\n})\nexport class HistoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n\n    \n\n    \n        \n  history works!\n\n\n    \n\n    \n                \n                    ./history.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  history works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HistoryComponent', 'selector': 'app-history'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'SettingsPopoverComponent', 'selector': 'app-settings-popover'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HistoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/PAGES/home/home.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _startStopTxt\n                            \n                            \n                                    Public\n                                advertisementService\n                            \n                            \n                                    Public\n                                alert\n                            \n                            \n                                    Public\n                                alertController\n                            \n                            \n                                    Private\n                                offset\n                            \n                            \n                                    Private\n                                started\n                            \n                            \n                                    Private\n                                stopped\n                            \n                            \n                                    Private\n                                time\n                            \n                            \n                                    Private\n                                timeList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                OnFabTimerClick\n                            \n                            \n                                Reset\n                            \n                            \n                                    Async\n                                showSettings\n                            \n                            \n                                StartStopTimer\n                            \n                            \n                                UpdateGUI\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(timerService: TimerService, alarmService: AlarmService, popoverController: PopoverController, storageService: StorageService, alertController: AlertController, alert: AlertService, advertisementService: AdvertisementService)\n                    \n                \n                        \n                            \n                                Defined in src/app/PAGES/home/home.page.ts:27\n                            \n                        \n\n                \n                    \n                            CONSTRUCTOR\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timerService\n                                                  \n                                                        \n                                                                        TimerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                        AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverController\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alert\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        advertisementService\n                                                  \n                                                        \n                                                                        AdvertisementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        OnFabTimerClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    OnFabTimerClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:76\n                \n            \n\n\n            \n                \n                    Start/Stop timer function\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Reset\n                        \n                    \n                \n            \n            \n                \nReset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:163\n                \n            \n\n\n            \n                \n                    Reset timer and click counter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        showSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    showSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:176\n                \n            \n\n\n            \n                \n                    Open Setings pop-up\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StartStopTimer\n                        \n                    \n                \n            \n            \n                \nStartStopTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:147\n                \n            \n\n\n            \n                \n                    Sart or Stop timer,\nand increment click counter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateGUI\n                        \n                    \n                \n            \n            \n                \nUpdateGUI()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _startStopTxt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : LABELS.START\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        advertisementService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AdvertisementService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        alert\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AlertService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        alertController\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AlertController\n\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        offset\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        started\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stopped\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        timeList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimeList\n\n                    \n                \n                \n                    \n                        Default value : new TimeList()\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { Component } from '@angular/core';\nimport { AlertController, PopoverController } from '@ionic/angular';\nimport { LABELS } from 'src/app/COMMON/LABELS';\nimport { SettingsPopoverComponent } from 'src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component';\nimport { AdvertisementService } from 'src/app/SERVICE/Advertisement/advertisement.service';\nimport { AlarmService } from 'src/app/SERVICE/Alarm/alarm.service';\nimport { AlertService } from 'src/app/SERVICE/Alert/alert.service';\nimport { StorageService } from 'src/app/SERVICE/Storage/storage.service';\nimport { TimerService } from 'src/app/SERVICE/Timer/timer.service';\nimport { TimeList } from '../../MODELS/Interfaces';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n\n\n  private _startStopTxt: string = LABELS.START;\n  private time: string;\n  private stopped: Date[] = [];\n  private started: Date[] = [];\n  private timeList: TimeList = new TimeList();\n  \n  private offset;  // time offset between current time and alarm time\n\n  // private clickCounter: number = 0; // count the number of click on Start/Stop timer button\n\n  /**\n   * CONSTRUCTOR\n   */\n  constructor(\n    private timerService: TimerService,\n    private alarmService: AlarmService,\n    private popoverController: PopoverController,\n    private storageService: StorageService,\n    public alertController: AlertController,\n    public alert: AlertService,\n    public advertisementService: AdvertisementService\n  ) { \n\n    // this.advertisementService.initialize();\n    // this.advertisementService.banner();\n\n    \n    // ToDo\n    // let User manage the offset\n    this.offset = 15;\n\n    // ToDo\n    // recover time lists from timer service\n    // in case of app closed while running\n\n    // this.timerService. ...\n\n    this.timeList = this.timerService.timeList;\n\n    \n    this.UpdateGUI();\n\n  }\n\n\n  UpdateGUI() {\n    this._startStopTxt = this.timerService.isRunning() ? LABELS.STOP : LABELS.START;\n  }\n\n\n\n\n  /**\n   * Start/Stop timer function\n   */\n  async OnFabTimerClick() {\n    \n    // check for alarm\n    let alarm = this.storageService.getAlarmByIndex(this.timerService.clickCounter);\n\n    // ToDo\n    // sistemare questo discorso dell'indice per gestire l'if\n    let currentTime: number = 1; //this.alarmService.getCurrentTimeIndex();\n\n    if (alarm) {\n\n      let t = this.storageService.getAlarmCount();\n      console.log(t);\n      console.log('click count: ', this.timerService.clickCounter);\n\n\n      let msg = null;\n\n      console.log(\"Alarm: \", alarm);\n      console.log(\"Scheduled: \", alarm.index);\n      console.log(\"Current: \", currentTime);\n      // check if it is too late for today working day\n      if (currentTime > (this.storageService.getLastAlarm().index)) {\n        msg = \"You are out of your working hours!\";\n      }\n\n      if (currentTime  {\n        if (res) {\n          console.log('Confirmed');\n          this.StartStopTimer();\n\n\n\n        } else {\n          console.log('Canceled')\n        }\n      })\n\n\n    } \n    else if (this.timerService.clickCounter == this.storageService.getAlarmCount()) {\n      this.StartStopTimer();\n    }\n    \n    else {\n      // this.StartStopTimer();\n      let subheader = \"You are done for today!\";\n      let msg = \"Do you want to reset timer?\"\n      await this.alert.presentConfirmAlert(msg, subheader)\n      .then( res => {\n        if (res) {\n          console.log('Confirmed');\n          this.Reset();\n        } else {\n          console.log('Canceled')\n        }\n      })\n    }\n  }\n\n\n  /**\n   * Sart or Stop timer,\n   * and increment click counter\n   */\n  StartStopTimer() {\n    if (this.timerService.isRunning()) \n    {\n      this.timerService.stop();\n    } \n    else \n    {\n      this.timerService.start();\n    }\n    this.UpdateGUI();\n    this.timeList = this.timerService.GetTimeList();\n  }\n\n  /**\n   * Reset timer and click counter\n   */\n  Reset() {\n    console.log(\"Resetting...\");\n    this.timerService.reset();\n    this.timeList = this.timerService.GetTimeList();\n    // console.log(this.timeList)\n    // this.clickCounter = 0;\n  }\n\n\n\n  /**\n   * Open Setings pop-up\n   */\n  async showSettings() {\n    const popover = await this.popoverController.create({\n      component: SettingsPopoverComponent,\n      translucent: true\n    });\n    await popover.present();\n    const { role } = await popover.onDidDismiss();\n    console.log('onDidDismiss resolved with role', role);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      EchoTimer\n    \n    \n    \n      \n              \n      \n    \n  \n\n\n\n\n  \n\n    \n\n      \n      {{timerService.GetTime()}}\n\n      \n\n        \n          \n            Start\n          \n          \n            {{time | date : 'HH:mm'}}\n          \n        \n        \n        \n          \n            Stop\n          \n          \n              {{time | date : 'HH:mm'}}\n          \n        \n\n        \n          \n            Partial\n          \n          \n              {{time}}\n          \n        \n\n\n      \n\n    \n\n    \n    \n      \n        \n          {{_startStopTxt}}\n        \n      \n    \n      \n    \n    \n      Reset\n    \n\n  \n    \n\n  \n    \n\n    \n                \n                    home.page.scss\n                \n                #container {\n  text-align: center;\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n#container strong {\n  font-size: 20px;\n  line-height: 26px;\n}\n\n#container p {\n  font-size: 16px;\n  line-height: 22px;\n\n  color: #8c8c8c;\n\n  margin: 0;\n}\n\n#container a {\n  text-decoration: none;\n}\n\nion-header{\n  ion-icon{\n    font-size: 2rem;\n  }\n}\n\n.appContainer{\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  height: 100%;\n  .timeContainer{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 40%;\n    .time{\n      color: white;\n      font-size:2rem; // default val\n    }\n    @media(min-width: 350px) //if more than 350 px\n    {\n      .time{\n        font-size:3rem;\n      }\n    }\n    @media(min-width: 500px) //if more than 500 px\n    {\n      .time{\n        font-size:4rem;\n      }\n    }\n    @media(min-width: 600px) //if more than 600 px\n    {\n      .time{\n        font-size:5rem;\n      }\n    }\n    @media(min-width: 850px) //if more than 850 px\n    {\n      .time{\n        font-size:7rem;\n      }\n    }\n    .timeListContainer{\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n      height: 50%;\n      width: 100%;\n      // background-color: rgba(66, 65, 65, 0.795);\n      .timesList{\n        display: flex;\n        flex-direction: column;\n        // flex-grow: 1;\n        width: 50%;\n        overflow: hidden;\n        // background-color: rgba(48, 45, 45, 0.795);\n        .timesText{\n          margin: 0.5rem 1rem;\n        }\n      }\n      .left{\n        // background-color: rgba(51, 36, 36, 0.795);\n        align-items: flex-end;\n      }\n    }\n  }\n  \n  .fabContainer{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    height: 50%;\n    .timerFab{\n      width: 50vw;\n      height: 50vw;\n      .timerFabTxt{\n        font-size:2rem; // default val\n      }\n      @media(min-width: 350px) //if more than 350 px\n      {\n        .timerFabTxt{\n          font-size:3rem;\n        }\n      }\n      @media(min-width: 500px) //if more than 500 px\n      {\n        .timerFabTxt{\n          font-size:4rem;\n        }\n      }\n      @media(min-width: 600px) //if more than 600 px\n      {\n        .timerFabTxt{\n          font-size:5rem;\n        }\n      }\n      @media(min-width: 850px) //if more than 850 px\n      {\n        .timerFabTxt{\n          font-size:7rem;\n        }\n      }\n    }\n  }\n\n  .resetButtonContainer{\n    height: 10%;\n    ion-button {\n      height: 100%;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                EchoTimer                                                              {{timerService.GetTime()}}                                    Start                                {{time | date : \\'HH:mm\\'}}                                                        Stop                                  {{time | date : \\'HH:mm\\'}}                                                Partial                                  {{time}}                                                            {{_startStopTxt}}                                      Reset            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HistoryComponent', 'selector': 'app-history'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'SettingsPopoverComponent', 'selector': 'app-settings-popover'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nSettingsPopoverComponent\n\nSettingsPopoverComponent\n\nHomePageModule -->\n\nSettingsPopoverComponent->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/PAGES/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                        \n                            SettingsPopoverComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { SettingsPopoverComponent } from 'src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule\n  ],\n  declarations: [\n    HomePage,\n    SettingsPopoverComponent]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomePageRoutingModule\n\n\n\ncluster_HomePageRoutingModule_providers\n\n\n\n\nTimerService\n\nTimerService\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageRoutingModule -->\n\nTimerService->HomePageRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/PAGES/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TimerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TimerService } from 'src/app/SERVICE/Timer/timer.service';\nimport { HomePage } from './home.page';\nimport { HomeResolver } from './home.resolve';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n    resolve: {\n      bool: HomeResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    TimerService,\n    HomeResolver]\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/HomeResolver.html":{"url":"guards/HomeResolver.html","title":"guard - HomeResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    HomeResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/PAGES/home/home.resolve.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/PAGES/home/home.resolve.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resolve\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.resolve.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from \"@angular/router\";\nimport { Platform } from \"@ionic/angular\";\n\n@Injectable()\nexport class HomeResolver implements Resolve {\n\n    constructor(\n        private platform: Platform,\n        private router: Router\n    ) { }\n\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {        \n        this.platform.ready()\n        .then(res => {\n            if (res) {\n                console.log('Platform ready')\n                return true\n            }\n        })\n    }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAlarm.html":{"url":"interfaces/IAlarm.html","title":"interface - IAlarm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAlarm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/INTERFACES/IAlarm.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            isPause\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPause\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPause:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAlarm {\n    key: string;\n    value: string;\n    isPause: boolean;\n    index: number;\n    duration?: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Notification/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _ID\n                            \n                            \n                                    Private\n                                notification\n                            \n                            \n                                    Private\n                                notificationPromise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addLocalNotification\n                            \n                            \n                                Date2Id\n                            \n                            \n                                    Async\n                                deleteLocalNotification\n                            \n                            \n                                getDelayedTime\n                            \n                            \n                                    Async\n                                getPending\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Notification/notification.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addLocalNotification\n                        \n                    \n                \n            \n            \n                \n                    \n                    addLocalNotification(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Notification/notification.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Timer is still running'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Date2Id\n                        \n                    \n                \n            \n            \n                \nDate2Id()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Notification/notification.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        number of seconds from 1970\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteLocalNotification\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteLocalNotification()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Notification/notification.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDelayedTime\n                        \n                    \n                \n            \n            \n                \ngetDelayedTime(seconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Notification/notification.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        seconds to delay\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        delayed current time of specified seconds\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPending\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPending()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Notification/notification.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 439209432321129530\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Notification/notification.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Type :     LocalNotificationSchema\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Notification/notification.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notificationPromise\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Promise\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Notification/notification.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n// import { LocalNotification, Plugins } from '@capacitor/core';\n// const { LocalNotifications } = Plugins;\n\nimport { LocalNotifications, LocalNotificationSchema } from '@capacitor/local-notifications';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  private notification: LocalNotificationSchema;\n  private notificationPromise: Promise;\n  private _ID: number = 439209432321129530;\n\n  constructor() { }\n\n\n  \n\n  async addLocalNotification(msg: string = 'Timer is still running') {\n\n    this.notification = {\n      title: \"YOU ARE LUCKY\",\n      body: msg,\n      id: this._ID,\n      smallIcon: 'res://logo',\n      schedule: {\n        // every: \"day\",\n        // on: \t{ year: year, month: month, day: day, hour: hh, minute: mm },\n        at: this.getDelayedTime()\n      },\n      extra: {\n      }\n    };\n\n    console.log(\"Adding notification...\", this.notification);\n\n    await LocalNotifications.schedule({\n      notifications: [\n        this.notification\n      ]\n    });\n    \n    // let msg = 'Added notification at ';\n    // this.presentToast(msg);\n  }\n\n\n  async deleteLocalNotification() {\n    // await LocalNotifications.cancel(this._ID);\n  }\n\n\n  async getPending() {\n    return await LocalNotifications.getPending();\n  }\n  /**\n   * \n   * @returns number of seconds from 1970\n   */\n  Date2Id(): number {\n    let seconds = Math.floor(Date.now() / 1000);\n    return seconds;\n  }\n  \n  /**\n   * \n   * @param seconds seconds to delay\n   * @returns delayed current time of specified seconds\n   */\n  getDelayedTime(seconds:number = 1): Date {\n    var date = new Date();\n    // add a second\n    date.setDate(date.getTime() + seconds * 1000);\n    return date;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PickerColumnOption.html":{"url":"interfaces/PickerColumnOption.html","title":"interface - PickerColumnOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PickerColumnOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/INTERFACES/PickerOption.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            duration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            transform\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transform:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PickerColumnOption {\n    text?: string;\n    value?: any;\n    disabled?: boolean;\n    duration?: number;\n    transform?: string;\n    selected?: boolean;\n  }\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Settings.html":{"url":"classes/Settings.html","title":"class - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/Settings.ts\n        \n\n\n            \n                Description\n            \n            \n                Settings contains:\n\nList of alarms\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alarms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAlarmn\n                            \n                            \n                                deleteAlarm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/MODELS/Settings.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        alarms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Alarm[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/Settings.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addAlarmn\n                        \n                    \n                \n            \n            \n                \naddAlarmn(alarmValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/Settings.ts:37\n                \n            \n\n\n            \n                \n                    Add a nex alarm to the alarm array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alarmValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nstring \"hh:mm\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { succeded: boolean; msg: string; }\n\n                    \n                    \n                        Object {succeded: boolean, msg: string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAlarm\n                        \n                    \n                \n            \n            \n                \ndeleteAlarm(alarm: Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/Settings.ts:83\n                \n            \n\n\n            \n                \n                    Delete a specific alarm from alarms array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                                Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        alarm to delete (type Alarm)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { succeded: boolean; msg: string; }\n\n                    \n                    \n                        Object {succeded: boolean, msg: string}\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LABELS } from \"../COMMON/LABELS\";\nimport { Alarm } from \"./Alarm\";\n\n/**\n * Settings contains:\n * 1. List of alarms\n */\nexport class Settings {\n    \n    alarms?: Alarm[] = [];\n    \n    constructor() {\n        \n        // const start = new Alarm(LABELS.START, DEFAULT_VAL.START, false);\n        // const end = new Alarm(LABELS.STOP, DEFAULT_VAL.STOP, false);\n\n        // this.alarms.push(start);\n        // this.alarms.push(end);\n    };\n\n\n    // /**\n    //  * Update Alarm by positional index\n    //  * @param val string\n    //  * @param idx number\n    //  */\n    // updateAlaram(val: string, idx: number) {\n    //     this.alarms[idx].value = val;\n    //     this.alarms[idx].index = timeToString(val);\n    // };\n\n    /**\n     * Add a nex alarm to the alarm array\n     * @param alarmValue - string \"hh:mm\"\n     * @returns Object {succeded: boolean, msg: string}\n     */\n    addAlarmn(alarmValue: string) {\n        // aggiungo l'elemento alla fine e poi riordino l'array\n        // const idx = this.alarms.length;\n        // create pause element\n\n        // const pause: Alarm = {\n        //     key: LABELS.PAUSE,\n        //     value: alarmValue,\n        //     index: timeToString(alarmValue),\n        //     enabled: false\n        // }\n        const pause: Alarm = new Alarm(LABELS.PAUSE, alarmValue, true);\n\n\n        console.log(pause);\n        // ChecK if out of range\n        if (pause.index  this.alarms[this.alarms.length - 1].index) {\n            let msg = 'PAUSE OUT OF RANGE!';\n            console.log(msg);\n            return {succeded: false, msg: msg};\n        }\n        // check if there is an alarm with the same index\n        //     => same starting time\n        var existingAlarm = this.alarms.filter(x => x.index == pause.index);\n        if (existingAlarm.length > 0) {\n            return {succeded: false, msg:'A PAUSE at the same time ALREADY EXISTS!'};;\n        }\n        // push the new alarm\n        this.alarms.push(pause);\n        // reorder the alarm array\n        this.alarms.sort((a, b) => {\n            if (a.index && b.index) {\n                if (a.index > b.index) return 1;\n                if (a.index  x.index == alarm.index);\n        // var f = this.alarms.find(x => x.index == alarm.index);\n        for (var idx = this.alarms.length - 1; idx >= 0; --idx) {\n            if (this.alarms[idx].index == alarm.index) {\n                this.alarms.splice(idx,1);\n                return {succeded: true, msg:'Alarm deleted'};\n            }\n        }\n        return {succeded: false, msg:'Alarm not deleted'};\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsPopoverComponent.html":{"url":"components/SettingsPopoverComponent.html","title":"component - SettingsPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsPopoverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-popover\n            \n\n            \n                styleUrls\n                ./settings-popover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-popover.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alarms\n                            \n                            \n                                    Private\n                                alarmTmp\n                            \n                            \n                                    Private\n                                alarmTmpIndex\n                            \n                            \n                                    Private\n                                alarmTmpValue\n                            \n                            \n                                    Public\n                                alert\n                            \n                            \n                                    Public\n                                alertController\n                            \n                            \n                                    Private\n                                customPickerOptions\n                            \n                            \n                                    Private\n                                days\n                            \n                            \n                                    Private\n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddPause\n                            \n                            \n                                    Async\n                                Cancel\n                            \n                            \n                                DeletePause\n                            \n                            \n                                    Async\n                                DismissClick\n                            \n                            \n                                    Async\n                                loadSettings\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTimeChange\n                            \n                            \n                                Save\n                            \n                            \n                                    Async\n                                showAlarmDurationPicker\n                            \n                            \n                                    Async\n                                showAlarmPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popoverController: PopoverController, storageService: StorageService, alarmService: AlarmService, pickerController: PickerController, alertController: AlertController, alert: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popoverController\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                        AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pickerController\n                                                  \n                                                        \n                                                                    PickerController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alert\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        AddPause\n                        \n                    \n                \n            \n            \n                \nAddPause(alarm: Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:91\n                \n            \n\n\n            \n                \n                    Add a pause to the time array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                                Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        Cancel\n                        \n                    \n                \n            \n            \n                \n                    \n                    Cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:82\n                \n            \n\n\n            \n                \n                    Calcel the current temporary user settings and reload stored settings\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeletePause\n                        \n                    \n                \n            \n            \n                \nDeletePause(alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:100\n                \n            \n\n\n            \n                \n                    Delete pause\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alarm\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        DismissClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    DismissClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:116\n                \n            \n\n\n            \n                \n                    Dismiss settings pop-over\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loadSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:108\n                \n            \n\n\n            \n                \n                    Load User Settings\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTimeChange\n                        \n                    \n                \n            \n            \n                \nonTimeChange(val, idx)\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:54\n                \n            \n\n\n            \n                \n                    Update time values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    val\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : string (HH:mm)\n\n                                    \n                                \n                                \n                                    idx\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : index of the Alarms array to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Save\n                        \n                    \n                \n            \n            \n                \nSave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:71\n                \n            \n\n\n            \n                \n                    Save new settings on the local storage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        showAlarmDurationPicker\n                        \n                    \n                \n            \n            \n                \n                    \n                    showAlarmDurationPicker(alarm: Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                                Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        showAlarmPicker\n                        \n                    \n                \n            \n            \n                \n                    \n                    showAlarmPicker(alarm: Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                                Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alarms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Alarm[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alarmTmp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Alarm\n\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alarmTmpIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alarmTmpValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        alert\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AlertService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        alertController\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AlertController\n\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        customPickerOptions\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        days\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CONSTANT.DAYS\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Settings\n\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlertController, PickerController, PopoverController } from '@ionic/angular';\nimport { Alarm } from 'src/app/MODELS/Alarm';\nimport { StorageService } from 'src/app/SERVICE/Storage/storage.service';\nimport { PickerOptions } from \"@ionic/core\";\nimport { Settings } from 'src/app/MODELS/Settings';\nimport { AlertService } from 'src/app/SERVICE/Alert/alert.service';\nimport { CONSTANT } from 'src/app/COMMON/CONSTANT';\nimport { AlarmService } from 'src/app/SERVICE/Alarm/alarm.service';\n\n@Component({\n  selector: 'app-settings-popover',\n  templateUrl: './settings-popover.component.html',\n  styleUrls: ['./settings-popover.component.scss'],\n})\nexport class SettingsPopoverComponent implements OnInit {\n\n  private customPickerOptions; \n  private settings: Settings;\n  private alarms: Alarm[];\n  private alarmTmp: Alarm;\n  private alarmTmpValue: string;\n  private alarmTmpIndex: number;\n  private days = CONSTANT.DAYS;\n\n\n  constructor(\n    private popoverController: PopoverController,\n    private storageService: StorageService,\n    private alarmService: AlarmService,\n    private pickerController: PickerController,\n    public alertController: AlertController,\n    public alert: AlertService\n  ) {}\n\n  ngOnInit() {\n    // console.log(\"Loading settings...\")\n    // this.loadSettings();\n    // console.log(this.settings);\n\n    // this.alarms = this.alarmService.GetAlarms();\n    // this.alarms = Object.assign([], this.alarmService.GetAlarms());\n    // this.alarms = [...this.alarmService.GetAlarms()];\n\n    //     console.log(this.alarms);\n\n  }\n\n  /**\n   * Update time values\n   * @param val : string (HH:mm)\n   * @param idx : index of the Alarms array to update\n   */\n  onTimeChange(val, idx) {\n    // Todo\n    // update alarm\n    // let copy = Object.assign({}, original );\n    // this.tmpSettings.alarms = Object.assign([], this.settings.alarms); //{...this.settings};\n    let time: string = val.detail.value;\n    // this.settings.updateAlaram(time, idx);\n    // alarm.update(val.detail.value);\n    console.log(val);\n    console.log(idx);\n    this.alarmTmpValue = time;\n    this.alarmTmpIndex  = idx;\n  }\n\n  /**\n   * Save new settings on the local storage\n   */\n  Save() {\n    // ToDo\n    // la logica di salvataggio deve essere spostata all'interno dell'alarm service \n\n    this.alarmService.updateAlarm(this.alarmTmpValue, this.alarmTmpIndex);\n    this.DismissClick();\n  }\n  \n  /**\n   * Calcel the current temporary user settings and reload stored settings\n   */\n  async Cancel() {\n    console.log(\"Cancel\")\n    this.DismissClick();\n  }\n\n\n  /**\n   * Add a pause to the time array\n   */\n  AddPause(alarm: Alarm = null) {\n    console.log(\"Selected alarm: \", alarm);\n    this.showAlarmPicker(alarm);\n  }\n\n  /**\n   * Delete pause\n   * @param alarm \n   */\n  DeletePause(alarm) {\n    console.log(alarm);\n    this.settings.deleteAlarm(alarm);\n  }\n\n  /**\n   * Load User Settings\n   */\n  async loadSettings() {\n    this.settings = this.storageService.getSettings();\n  }\n\n\n  /**\n   * Dismiss settings pop-over\n   */\n  async DismissClick() {\n    await this.popoverController.dismiss();\n  }\n\n\n\n\n\n  async showAlarmPicker(alarm: Alarm = null) {\n    let options: PickerOptions = {\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: 'cancel'\n        },\n        {\n          text:'Ok',\n          handler:(value:any) => {\n            // console.log(value);\n            var str: string = value.hours.value + ':' + value.minutes.value;\n            // let res = this.settings.addAlarm(str);\n\n            // if (res.succeded == false) {\n\n            // }\n            this.showAlarmDurationPicker();\n            // this.alert.presentWarningAlert(res.msg);\n            \n          }\n        }\n      ],\n      columns:[\n      {\n        name:'hours',\n        optionsWidth: '2rem',\n        align: 'right',\n        options: CONSTANT.MINUTES_OPTS\n      }\n      , {\n        name:'minutes',\n        optionsWidth: '2rem',\n        align: 'left',\n        // selectedIndex: alarm ? alarm.getMinutesIdex() : null,\n        options: CONSTANT.MINUTES_OPTS\n      }\n    ],\n    // cssClass: 'my-custom-picker',\n    };\n    let picker = await this.pickerController.create(options);\n    picker.present()\n  }\n\n\n\n  async showAlarmDurationPicker(alarm: Alarm = null) {\n    let options: PickerOptions = {\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: 'cancel'\n        },\n        {\n          text:'Ok',\n          handler:(value:any) => {\n            // console.log(value);\n            var str: string = value.hours.value + ':' + value.minutes.value;\n            // let res = this.settings.addAlarm(str);\n\n            // if (res.succeded == false) {\n\n            // }\n            // this.alert.presentWarningAlert(res.msg);\n            \n          }\n        }\n      ],\n      columns:[\n      {\n        name:'minutes',\n        prefix: 'Duration: ',\n        options: CONSTANT.MINUTES_OPTS\n      }\n    ],\n    // cssClass: 'my-custom-picker',\n    };\n    let picker = await this.pickerController.create(options);\n    picker.present()\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n    Settings\n  \n  \n  \n    \n    \n    \n      {{alarm.key}}\n      \n      \n    \n    \n    \n    \n      \n        \n          \n            \n              \n                {{alarm.key}}\n              \n              \n                {{alarm.value}}\n              \n                        \n          \n        \n      \n      \n      \n        Delete\n      \n    \n    \n  \n\n\n\n  \n  \n    \n      Add pause\n    \n  \n\n  \n  \n    \n      Repeat every\n    \n    \n      \n        \n          \n            {{day}}\n          \n          \n        \n      \n    \n  \n\n  \n  \n    \n      Cancel\n      OK\n    \n  \n\n\n    \n\n    \n                \n                    ./settings-popover.component.scss\n                \n                \n.settingsContainer{\n    \n    // background-color: rgb(20, 20, 20);\n    background-color: var(--ion-item-background, var(--ion-background-color, #fff));\n    \n    .title{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: 1rem;\n    }\n    \n    .buttonsContainer{\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        ion-buttons{\n            width: 100%;\n            ion-button{\n                width: 50%;\n                min-height: 3rem;\n            }\n        }\n    }\n    \n    \n    .addAlarmContainer {\n        min-height: 2rem;\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        ion-item {\n            width: 100%;\n            --inner-padding-end: 0px;\n            --padding-start: 0px;\n        }\n        ion-buttons{\n            width: 100%;\n            ion-button{\n                width: 100%;\n                min-height: 3rem;\n            }\n        }\n    }\n    \n    .alarm {\n        display: flex;\n        width: 100%;\n        justify-content: space-between;\n        padding: 1px 6px;\n    }\n    \n    .pickerClassName {\n        color: greenyellow;\n        background-color: honeydew;\n    }\n    \n    .checkbox-container {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        .checkbox-title {\n            margin: 5px;\n        }\n        .checkbox-list {\n            display: flex;\n            flex-direction: row;\n            flex-wrap: wrap;\n            align-content: center;\n            justify-content: flex-start;\n            width: 90%;\n            .checkbox {\n                display: flex;\n                flex-direction: row;\n                margin: 3px;\n                width: 3rem;\n                justify-content: flex-end;\n                .day-name {\n                    font-size: 0.9rem;\n                    margin-right: 1px;\n                }\n            }\n        }\n        \n    }\n \n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Settings                        {{alarm.key}}                                                                                              {{alarm.key}}                                            {{alarm.value}}                                                                                  Delete                              Add pause                    Repeat every                                            {{day}}                                                      Cancel      OK      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HistoryComponent', 'selector': 'app-history'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'SettingsPopoverComponent', 'selector': 'app-settings-popover'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Status.html":{"url":"interfaces/Status.html","title":"interface - Status","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Status\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/Interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            clickCounter\n                                        \n                                \n                                \n                                        \n                                            isRunning\n                                        \n                                \n                                \n                                        \n                                            timeList\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clickCounter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clickCounter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRunning\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isRunning:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeList:         TimeList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimeList\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum DateFormat {\n    Year = \"YYYY\",\n    YearMonth =\t\"YYYY-MM\",\n    HourMinute = \"HH:mm\",\n    HourMinuteSeconds = \"HH:mm:ss\"\n}\n\n// export enum SETTINGS {\n//     ALARMS = \"Alarms\"\n// }\n\nexport class TimeList {\n    constructor() {\n        this.start = [];\n        this.stop = [];\n        this.diff = [];\n        this.diffms = [];\n        this.total = null;\n        this.totalms = 0;\n    };\n    start?: Date[];\n    stop?: Date[];\n    diff?: string[];\n    diffms?: number[];\n    total?: string;\n    totalms?: number;\n}\n\n\n\nexport interface Status {\n    isRunning: boolean,\n    timeList: TimeList,\n    clickCounter: number\n}\n\n\n\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Storage/storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                settings\n                            \n                            \n                                    Private\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertStr2Date\n                            \n                            \n                                getAlarmByIndex\n                            \n                            \n                                getAlarmCount\n                            \n                            \n                                getAlarms\n                            \n                            \n                                getLastAlarm\n                            \n                            \n                                getSettings\n                            \n                            \n                                getStatus\n                            \n                            \n                                    Async\n                                getStoredData\n                            \n                            \n                                    Async\n                                getStoredSettings\n                            \n                            \n                                    Async\n                                getStoredStatus\n                            \n                            \n                                    Async\n                                initializeSettings\n                            \n                            \n                                    Async\n                                initializeStatus\n                            \n                            \n                                loadDefaultSettings\n                            \n                            \n                                SaveData\n                            \n                            \n                                SaveSettings\n                            \n                            \n                                SaveStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Storage/storage.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertStr2Date\n                        \n                    \n                \n            \n            \n                \nconvertStr2Date(dateStr: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dateStr\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAlarmByIndex\n                        \n                    \n                \n            \n            \n                \ngetAlarmByIndex(idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:192\n                \n            \n\n\n            \n                \n                    Get alarm by index\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index of the alarm in the alarms array\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        alarm at index posistion\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAlarmCount\n                        \n                    \n                \n            \n            \n                \ngetAlarmCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        alarms number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAlarms\n                        \n                    \n                \n            \n            \n                \ngetAlarms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Alarms array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLastAlarm\n                        \n                    \n                \n            \n            \n                \ngetLastAlarm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the last alarm in the alarms array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSettings\n                        \n                    \n                \n            \n            \n                \ngetSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                         current settings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        current status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getStoredData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStoredData(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:112\n                \n            \n\n\n            \n                \n                    Return the stored settings from the device local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getStoredSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStoredSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:128\n                \n            \n\n\n            \n                \n                    Return the stored settings from the device local storage\n\n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getStoredStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStoredStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:144\n                \n            \n\n\n            \n                \n                    Return the stored status from the device local storage or null\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initializeSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:26\n                \n            \n\n\n            \n                \n                    Read Setting from local storage or initialize the defailt setting\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initializeStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:47\n                \n            \n\n\n            \n                \n                    Read status from local storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDefaultSettings\n                        \n                    \n                \n            \n            \n                \nloadDefaultSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:54\n                \n            \n\n\n            \n                \n                    Instantiate a new Settings class with the default values\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SaveData\n                        \n                    \n                \n            \n            \n                \nSaveData(data: any, key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:65\n                \n            \n\n\n            \n                \n                    Save settings on the local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SaveSettings\n                        \n                    \n                \n            \n            \n                \nSaveSettings(settings: Settings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:79\n                \n            \n\n\n            \n                \n                    Save settings on the local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                                Settings\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SaveStatus\n                        \n                    \n                \n            \n            \n                \nSaveStatus(status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:93\n                \n            \n\n\n            \n                \n                    Save status on the local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Settings\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Storage/storage.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Status\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Storage/storage.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Status } from 'src/app/MODELS/Interfaces';\nimport { Settings } from 'src/app/MODELS/Settings';\nimport { Storage } from '@capacitor/storage';\nimport { KEYS } from 'src/app/COMMON/KEYS';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n  \n  private settings: Settings;\n  private status: Status;\n  \n  constructor(private platform: Platform) {\n    this.initializeSettings();\n    this.initializeStatus();\n  }\n  \n  \n  /**\n  * Read Setting from local storage or initialize the defailt setting\n  */\n  async initializeSettings() {\n    console.log(\"Initialising settings...\");\n    this.loadDefaultSettings();\n    await this.platform.ready();\n    // Fetch ALARMS\n    console.log(\"Retrieving settings from storage...\");\n    const alarms = await Storage.get({key: KEYS.ALARMS});\n    if (alarms?.value != null) {\n      // ToDo\n      // sostituire con l'alarm service\n      // this.settings.alarms = JSON.parse(alarms.value);\n    } else {\n      // this.SaveSettings(this.settings);\n    }\n    console.log(\"Settings: \", this.settings);\n  }\n  \n  \n  /**\n  * Read status from local storage\n  */\n  async initializeStatus() {\n    this.status = await this.getStoredStatus();\n  }\n  \n  /**\n  * Instantiate a new Settings class with the default values\n  */\n  loadDefaultSettings() {\n    this.settings = new Settings();\n  }\n  \n  \n  //#region ------------ Saving on local storage methods --------------------------\n  \n  /**\n  * Save settings on the local storage\n  * @param {Settings} settings\n  */\n  SaveData(data: any, key: string) {\n    console.log(\"Saving data to storage...\");\n    let JSONdata = JSON.stringify(data);\n    console.log('Data: ', JSONdata);\n    Storage.set({\n      key: key,\n      value: JSONdata\n    });\n  }\n  \n  /**\n  * Save settings on the local storage\n  * @param {Settings} settings\n  */\n  SaveSettings(settings: Settings) {\n    console.log(\"Saving settings to storage...\");\n    let alarmsJSON = JSON.stringify(this.settings.alarms);\n    console.log(alarmsJSON);\n    Storage.set({\n      key: KEYS.ALARMS,\n      value: alarmsJSON\n    });\n  }\n  \n  /**\n  * Save status on the local storage\n  * @param {Status} status\n  */\n  SaveStatus(status: Status) {\n    let statusJSON: string = JSON.stringify(status);\n    console.log(\"Saving status to storage...\");\n    Storage.set({\n      key: KEYS.STATUS,\n      value: statusJSON\n    });\n  }\n  \n  //#endregion \n  \n  \n  \n  //#region ------------ GET METHODS -------------------\n  \n  \n  /**\n  * Return the stored settings from the device local storage\n  */\n  async getStoredData(key: string) {\n    console.log(\"Retrieving data from storage...\");\n    // Fetch ALARMS\n    let data = null;\n    const res = await Storage.get({key: key});\n    if (res.value != null) {\n      data = JSON.parse(res.value);\n    }\n    console.log(\"Retrieved Data: \", data)\n    return data;\n  }\n  \n  \n  /**\n  * Return the stored settings from the device local storage\n  */\n  async getStoredSettings() {\n    console.log(\"Retrieving settings from storage...\");\n    // Fetch ALARMS\n    const res = await Storage.get({key: KEYS.ALARMS});\n    if (res.value != null) {\n      this.settings.alarms = JSON.parse(res.value);\n      console.log(\"Settings: \", this.settings)\n      return this.settings\n    }\n    return null;\n  }\n  \n  /**\n  * Return the stored status from the device local storage or null\n  * @returns \n  */\n  async getStoredStatus() {\n    console.log(\"Retrieving status from storage...\");\n    const res = await Storage.get({key: KEYS.STATUS});\n    if (res.value != null) {\n      this.status = JSON.parse(res.value);\n      \n      // converto tutte le date in oggetti di tipo Date\n      console.log(\"Converting date time\");\n      this.status.timeList.start = this.convertStr2Date(this.status.timeList.start);\n      this.status.timeList.stop = this.convertStr2Date(this.status.timeList.stop);\n      \n      console.log(\"Status: \", this.status);\n      return this.status\n    }\n    return null;\n  }\n  \n  \n  \n  \n  \n  \n  /**\n  * @returns {Settings} current settings\n  */\n  getSettings() {\n    return this.settings;\n  }\n  \n  /**\n  * @returns {Status} current status\n  */\n  getStatus() {\n    return this.status;\n  }\n  \n  /**\n  * @returns Alarms array\n  */\n  getAlarms() {\n    return this.settings.alarms;\n  }\n  \n  /**\n  * Get alarm by index\n  * @param idx index of the alarm in the alarms array\n  * @returns alarm at index posistion\n  */\n  getAlarmByIndex(idx: number) {\n    return this.settings.alarms[idx];\n  }\n  \n  /**\n  * @returns the last alarm in the alarms array\n  */\n  getLastAlarm() {\n    let end = this.settings.alarms.length - 1;\n    return this.settings.alarms[end];\n  }\n  \n  /**\n  * \n  * @returns alarms number\n  */\n  getAlarmCount() {\n    console.log(this.settings.alarms.length);\n    return this.settings.alarms.length;\n  }\n  \n  \n  //#endregion\n  \n  \n  //#region ------------ UTILITY ----------------------\n  \n  convertStr2Date(dateStr: Array) {\n    console.log(\"Converting date time\");\n    let ln = dateStr.length;\n    var convrtedDate: Date[] = [];\n    for(let idx = 0; idx \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeList.html":{"url":"classes/TimeList.html","title":"class - TimeList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/Interfaces.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                diff\n                            \n                            \n                                    Optional\n                                diffms\n                            \n                            \n                                    Optional\n                                start\n                            \n                            \n                                    Optional\n                                stop\n                            \n                            \n                                    Optional\n                                total\n                            \n                            \n                                    Optional\n                                totalms\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/MODELS/Interfaces.ts:23\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        diff\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/Interfaces.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        diffms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/Interfaces.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/Interfaces.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        stop\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/Interfaces.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/Interfaces.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        totalms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/Interfaces.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum DateFormat {\n    Year = \"YYYY\",\n    YearMonth =\t\"YYYY-MM\",\n    HourMinute = \"HH:mm\",\n    HourMinuteSeconds = \"HH:mm:ss\"\n}\n\n// export enum SETTINGS {\n//     ALARMS = \"Alarms\"\n// }\n\nexport class TimeList {\n    constructor() {\n        this.start = [];\n        this.stop = [];\n        this.diff = [];\n        this.diffms = [];\n        this.total = null;\n        this.totalms = 0;\n    };\n    start?: Date[];\n    stop?: Date[];\n    diff?: string[];\n    diffms?: number[];\n    total?: string;\n    totalms?: number;\n}\n\n\n\nexport interface Status {\n    isRunning: boolean,\n    timeList: TimeList,\n    clickCounter: number\n}\n\n\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimerService.html":{"url":"injectables/TimerService.html","title":"injectable - TimerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Timer/timer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                blankTime\n                            \n                            \n                                    Public\n                                clickCounter\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Public\n                                platform\n                            \n                            \n                                    Private\n                                running\n                            \n                            \n                                    Public\n                                started\n                            \n                            \n                                    Public\n                                startedList\n                            \n                            \n                                    Public\n                                stoppedDuration\n                            \n                            \n                                    Public\n                                stoppedList\n                            \n                            \n                                    Public\n                                storageService\n                            \n                            \n                                    Public\n                                time\n                            \n                            \n                                    Public\n                                timeBegan\n                            \n                            \n                                    Public\n                                timeList\n                            \n                            \n                                    Public\n                                timeStopped\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcDiff\n                            \n                            \n                                clockRunning\n                            \n                            \n                                GetStartedTimes\n                            \n                            \n                                GetStoppedTimes\n                            \n                            \n                                GetTime\n                            \n                            \n                                GetTimeList\n                            \n                            \n                                isRunning\n                            \n                            \n                                isTimerActive\n                            \n                            \n                                onPause\n                            \n                            \n                                reset\n                            \n                            \n                                start\n                            \n                            \n                                stop\n                            \n                            \n                                zeroPrefix\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, storageService: StorageService, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcDiff\n                        \n                    \n                \n            \n            \n                \ncalcDiff()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:131\n                \n            \n\n\n            \n                \n                    Calc difference between Start Date and End Date\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clockRunning\n                        \n                    \n                \n            \n            \n                \nclockRunning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetStartedTimes\n                        \n                    \n                \n            \n            \n                \nGetStartedTimes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetStoppedTimes\n                        \n                    \n                \n            \n            \n                \nGetStoppedTimes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetTime\n                        \n                    \n                \n            \n            \n                \nGetTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetTimeList\n                        \n                    \n                \n            \n            \n                \nGetTimeList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRunning\n                        \n                    \n                \n            \n            \n                \nisRunning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:174\n                \n            \n\n\n            \n                \n                    Return true if timer is running\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTimerActive\n                        \n                    \n                \n            \n            \n                \nisTimerActive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPause\n                        \n                    \n                \n            \n            \n                \nonPause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:181\n                \n            \n\n\n            \n                \n                    Save the current status to local storage on platform.pause event\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:89\n                \n            \n\n\n            \n                \n                    Reset timer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n            \n                \nstart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:56\n                \n            \n\n\n            \n                \n                    Start timer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:77\n                \n            \n\n\n            \n                \n                    Stop timer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zeroPrefix\n                        \n                    \n                \n            \n            \n                \nzeroPrefix(num, digit)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:106\n                \n            \n\n\n            \n                \n                    Add digit-1 zeros at the begin of the number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    num\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    digit\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        number of zeros\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        blankTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"00:00.00\"\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clickCounter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        notificationService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Platform\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        running\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        started\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startedList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        stoppedDuration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        stoppedList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        storageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StorageService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"00:00.00\"\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timeBegan\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timeList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimeList\n\n                    \n                \n                \n                    \n                        Default value : new TimeList\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timeStopped\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Utility } from 'src/app/COMMON/Utility';\nimport { Status, TimeList } from 'src/app/MODELS/Interfaces';\nimport { NotificationService } from '../Notification/notification.service';\nimport { StorageService } from '../Storage/storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimerService {\n\n\n  private running = false\n\n  public timeBegan = null\n  public timeStopped:any = null\n  public stoppedDuration:any = 0\n  public started = null\n  public blankTime = \"00:00.00\"\n  public time: string = \"00:00.00\"\n  public timeList: TimeList = new TimeList;\n  public stoppedList: Date[] = [];\n  public startedList: Date[] = [];\n\n  public clickCounter: number = 0;\n\n  constructor(\n    public platform: Platform,\n    public storageService: StorageService,\n    public notificationService: NotificationService\n  ) { \n    // subscribe to on pause event\n    this.onPause();\n    // this.onResume();\n    var savedStatus: Status = this.storageService.getStatus();\n    console.log(\"Saved status: \", savedStatus);\n\n    if (savedStatus?.isRunning) {\n\n      this.running = true;\n      this.timeList = savedStatus.timeList;\n\n      this.timeBegan = this.timeList.start[0];\n      this.timeStopped = this.timeList.stop[this.timeList.stop.length];\n      this.clickCounter = savedStatus.clickCounter;\n      this.started = setInterval(this.clockRunning.bind(this), 10);\n    }\n\n  }\n\n\n  /**\n   * Start timer\n   */\n  start() {\n    if(this.running) {\n      return;\n    }\n    if (this.timeBegan === null) {\n        this.reset();\n        this.timeBegan = new Date();\n    }\n    if (this.timeStopped !== null) {\n      let newStoppedDuration:any = (+new Date() - this.timeStopped)\n      this.stoppedDuration = this.stoppedDuration + newStoppedDuration;\n    }\n    this.timeList.start.push(new Date());\n    this.started = setInterval(this.clockRunning.bind(this), 10);\n    this.running = true;\n    this.clickCounter++;\n  }\n  \n  /**\n   * Stop timer\n   */\n  stop() {\n    this.running = false;\n    this.timeStopped = new Date();\n    this.timeList.stop.push(this.timeStopped);\n    this.calcDiff();\n    clearInterval(this.started);\n    // this.clickCounter++;\n  }\n  \n  /**\n   * Reset timer\n   */\n  reset() {\n      this.running = false;\n      clearInterval(this.started);\n      this.stoppedDuration = 0;\n      this.timeBegan = null;\n      this.timeStopped = null;\n      this.time = this.blankTime;\n      this.timeList = new TimeList;\n      this.clickCounter = 0;\n  }\n  \n  /**\n   * Add digit-1 zeros at the begin of the number\n   * @param num \n   * @param digit number of zeros\n   * @returns \n   */\n  zeroPrefix(num, digit) {\n    let zero = '';\n    for(let i = 0; i  {\n      var status: Status = {\n        isRunning : this.running, \n        timeList: this.timeList,\n        clickCounter: this.clickCounter\n      };   \n      this.storageService.SaveStatus(status);\n\n      // add notification\n      if (this.isTimerActive()) {\n        console.log(\"Adding local notification...\");\n        let msg: string = \"Your working hour is still tracked\";\n        this.notificationService.addLocalNotification(msg);\n      } else {\n        let p = this.notificationService.getPending();\n        console.log(p);\n      }\n    })\n      \n  }\n\n  isTimerActive(): boolean {\n    if (this.running) return true;\n    else if (this.timeList.start.length > 0) return true;\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/COMMON/CONSTANT.ts\n            \n            function\n            getHousOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/CONSTANT.ts\n            \n            function\n            getMinutesOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/CONSTANT.ts\n            \n            variable\n            DAYS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/CONSTANT.ts\n            \n            variable\n            HOUR_OPTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/CONSTANT.ts\n            \n            variable\n            HOURS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/CONSTANT.ts\n            \n            variable\n            MINUTES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/CONSTANT.ts\n            \n            variable\n            MINUTES_OPTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/DEFAULT_VAL.ts\n            \n            variable\n            START\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/DEFAULT_VAL.ts\n            \n            variable\n            STOP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/KEYS.ts\n            \n            variable\n            ALARMS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/KEYS.ts\n            \n            variable\n            SETTINGS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/KEYS.ts\n            \n            variable\n            STATUS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/LABELS.ts\n            \n            variable\n            PAUSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/LABELS.ts\n            \n            variable\n            START\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/LABELS.ts\n            \n            variable\n            STOP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/Utility.ts\n            \n            function\n            GetTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/Utility.ts\n            \n            function\n            zeroPrefix\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/COMPONENTS/history/history/history.component.ts\n            \n            component\n            HistoryComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts\n            \n            component\n            SettingsPopoverComponent\n            \n                33 %\n                (7/21)\n            \n        \n        \n            \n                \n                src/app/MODELS/Alarm.ts\n            \n            class\n            Alarm\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/MODELS/INTERFACES/IAlarm.ts\n            \n            interface\n            IAlarm\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/MODELS/INTERFACES/PickerOption.ts\n            \n            interface\n            PickerColumnOption\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/MODELS/Interfaces.ts\n            \n            class\n            TimeList\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/MODELS/Interfaces.ts\n            \n            interface\n            Status\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/MODELS/Settings.ts\n            \n            class\n            Settings\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/MODELS/alarms.ts\n            \n            class\n            Alarms\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/PAGES/home/home.page.ts\n            \n            component\n            HomePage\n            \n                31 %\n                (5/16)\n            \n        \n        \n            \n                \n                src/app/PAGES/home/home.resolve.ts\n            \n            guard\n            HomeResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Advertisement/advertisement.service.ts\n            \n            injectable\n            AdvertisementService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Alarm/alarm.service.ts\n            \n            injectable\n            AlarmService\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Alert/alert.service.ts\n            \n            injectable\n            AlertService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Notification/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Storage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                50 %\n                (10/20)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Timer/timer.service.ts\n            \n            injectable\n            TimerService\n            \n                24 %\n                (7/29)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ~12.0.1\n        \n            @angular/core : ~12.0.1\n        \n            @angular/forms : ~12.0.1\n        \n            @angular/platform-browser : ~12.0.1\n        \n            @angular/platform-browser-dynamic : ~12.0.1\n        \n            @angular/router : ~12.0.1\n        \n            @capacitor-community/admob : ^3.1.0\n        \n            @capacitor/android : ^3.1.1\n        \n            @capacitor/app : 1.0.2\n        \n            @capacitor/core : 3.1.1\n        \n            @capacitor/haptics : 1.0.2\n        \n            @capacitor/keyboard : 1.0.2\n        \n            @capacitor/local-notifications : ^1.0.3\n        \n            @capacitor/status-bar : 1.0.2\n        \n            @capacitor/storage : ^1.0.3\n        \n            @ionic/angular : ^5.5.2\n        \n            cordova-res : ^0.15.3\n        \n            install : ^0.13.0\n        \n            npm : ^7.20.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DateFormat   (src/.../Interfaces.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/MODELS/Interfaces.ts\n    \n        \n            \n                \n                    \n                        \n                        DateFormat\n                    \n                \n                        \n                            \n                                 Year\n                            \n                        \n                        \n                            \n                                Value : YYYY\n                            \n                        \n                        \n                            \n                                 YearMonth\n                            \n                        \n                        \n                            \n                                Value : YYYY-MM\n                            \n                        \n                        \n                            \n                                 HourMinute\n                            \n                        \n                        \n                            \n                                Value : HH:mm\n                            \n                        \n                        \n                            \n                                 HourMinuteSeconds\n                            \n                        \n                        \n                            \n                                Value : HH:mm:ss\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getHousOptions   (src/.../CONSTANT.ts)\n                        \n                        \n                            getMinutesOptions   (src/.../CONSTANT.ts)\n                        \n                        \n                            GetTime   (src/.../Utility.ts)\n                        \n                        \n                            zeroPrefix   (src/.../Utility.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/COMMON/CONSTANT.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getHousOptions\n                        \n                    \n                \n            \n            \n                \ngetHousOptions()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMinutesOptions\n                        \n                    \n                \n            \n            \n                \ngetMinutesOptions()\n                \n            \n\n\n\n\n        \n    \n    src/app/COMMON/Utility.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetTime\n                        \n                    \n                \n            \n            \n                \nGetTime(maxVal, digits)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    maxVal\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    digits\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zeroPrefix\n                        \n                    \n                \n            \n            \n                \nzeroPrefix(num, digit)\n                \n            \n\n\n\n\n            \n                \n                    Add digit-1 zeros at the begin of the number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    num\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    digit\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        number of zeros\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nClick here for DOCUMENTATION\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_HomePageRoutingModule\n\n\n\ncluster_HomePageRoutingModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nSettingsPopoverComponent\n\nSettingsPopoverComponent\n\nHomePageModule -->\n\nSettingsPopoverComponent->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nTimerService\n\nTimerService\n\nHomePageRoutingModule -->\n\nTimerService->HomePageRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALARMS   (src/.../KEYS.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            DAYS   (src/.../CONSTANT.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            HOUR_OPTS   (src/.../CONSTANT.ts)\n                        \n                        \n                            HOURS   (src/.../CONSTANT.ts)\n                        \n                        \n                            MINUTES   (src/.../CONSTANT.ts)\n                        \n                        \n                            MINUTES_OPTS   (src/.../CONSTANT.ts)\n                        \n                        \n                            PAUSE   (src/.../LABELS.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            SETTINGS   (src/.../KEYS.ts)\n                        \n                        \n                            START   (src/.../DEFAULT_VAL.ts)\n                        \n                        \n                            START   (src/.../LABELS.ts)\n                        \n                        \n                            STATUS   (src/.../KEYS.ts)\n                        \n                        \n                            STOP   (src/.../DEFAULT_VAL.ts)\n                        \n                        \n                            STOP   (src/.../LABELS.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/COMMON/KEYS.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALARMS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Alarms\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SETTINGS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Setting\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STATUS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Status\"\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/app/COMMON/CONSTANT.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DAYS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"\n    ]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HOUR_OPTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PickerColumnOption[]\n\n                    \n                \n                \n                    \n                        Default value : getHousOptions()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HOURS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : Utility.GetTime(24, 2)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MINUTES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : Utility.GetTime(60, 2)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MINUTES_OPTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PickerColumnOption[]\n\n                    \n                \n                \n                    \n                        Default value : getMinutesOptions()\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/app/COMMON/LABELS.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PAUSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"PAUSE\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        START\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"IN\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STOP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"OUT\"\n                    \n                \n\n\n        \n    \n\n    src/app/COMMON/DEFAULT_VAL.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        START\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"08:30\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STOP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"18:00\"\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
