var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AdvertisementService.html",[0,0.962,1,2.164]],["body/injectables/AdvertisementService.html",[0,1.508,1,3.393,2,2.027,3,0.377,4,0.377,5,0.331,6,3.422,7,0.424,8,1.508,9,3.41,10,6.285,11,5.961,12,1.324,13,1.324,14,4.071,15,4.071,16,1.401,17,0.029,18,3.545,19,4.071,20,0.801,21,1.026,22,4.071,23,5.162,24,5.162,25,4.071,26,4.071,27,4.071,28,3.422,29,3.422,30,2.209,31,2.027,32,0.377,33,0.331,34,4.071,35,4.071,36,2.528,37,4.071,38,4.071,39,4.071,40,4.071,41,4.339,42,3.422,43,4.071,44,4.071,45,3.797,46,4.071,47,1.6,48,2.421,49,5.162,50,4.071,51,4.071,52,2.675,53,4.071,54,2.995,55,1.378,56,4.071,57,4.071,58,4.071,59,0.017,60,0.022,61,0.017]],["title/classes/Alarm.html",[33,0.268,62,1.2]],["body/classes/Alarm.html",[3,0.166,4,0.166,5,0.146,7,0.641,8,0.837,12,0.669,13,1.379,16,1.512,17,0.029,20,0.279,32,0.166,33,0.146,55,1.38,59,0.008,60,0.012,61,0.008,62,2.349,63,0.895,64,1.512,65,2.029,66,2.866,67,2.866,68,1.727,69,3.166,70,2.409,71,1.232,72,3.395,73,2.866,74,2.866,75,2.866,76,2.866,77,2.866,78,1.216,79,1.704,80,1.462,81,2.108,82,2.409,83,3.742,84,2.409,85,3.742,86,1.555,87,2.125,88,0.881,89,2.092,90,3.573,91,1.92,92,3.573,93,3.077,94,3.66,95,2.108,96,3.245,97,1.884,98,1.555,99,3.117,100,2.998,101,4.451,102,1.798,103,1.623,104,2.866,105,1.301,106,1.208,107,0.773,108,0.82,109,1.749,110,2.504,111,1.798,112,1.798,113,1.798,114,1.798,115,2.409,116,1.798,117,2.409,118,1.507,119,2.409,120,3.573,121,3.573,122,3.573,123,3.573,124,3.573,125,3.426,126,1.315,127,2.866,128,1.798,129,2.866,130,1.798,131,4.075,132,4.743,133,1.126,134,2.348,135,2.866,136,1.884,137,1.315,138,2.108,139,3.489,140,1.798,141,1.427,142,1.515,143,2.998,144,2.108,145,2.108,146,1.798,147,1.798,148,1.798,149,1.798,150,2.125,151,2.409,152,1.798,153,1.798,154,1.798,155,1.798,156,2.263,157,1.512,158,1.798,159,2.409,160,1.798,161,1.798,162,2.108,163,1.704,164,2.866,165,1.798,166,2.866,167,3.573,168,2.866,169,3.573,170,1.798,171,2.866,172,2.866,173,1.798,174,2.866,175,2.866,176,1.798,177,1.798,178,1.798,179,2.866,180,1.798,181,2.866,182,1.798,183,4.743,184,1.798,185,2.866,186,1.798,187,1.798,188,2.866,189,1.704,190,1.798,191,1.798,192,1.884,193,1.798,194,1.798,195,1.87,196,1.798,197,1.798,198,1.798,199,1.798,200,2.866,201,2.866,202,2.866,203,1.798,204,0.707,205,2.866,206,1.512,207,1.323]],["title/injectables/AlarmService.html",[0,0.962,208,1.958]],["body/injectables/AlarmService.html",[0,0.874,2,0.945,3,0.176,4,0.176,5,0.154,7,0.529,8,0.874,12,0.698,13,1.295,16,1.24,17,0.03,18,1.128,20,0.788,21,0.478,30,1.029,31,0.945,32,0.176,33,0.154,36,1.781,47,1.175,52,1.247,59,0.008,60,0.013,61,0.008,62,2.309,68,1.24,69,1.778,71,0.842,78,2.579,79,1.128,80,1.408,81,2.199,88,0.647,89,2.259,91,1.999,93,1.622,94,2.199,96,1.128,98,1.622,99,2.432,100,2.199,103,0.692,105,1.227,106,1.14,107,0.687,108,0.894,109,1.795,110,2.155,118,1.012,133,1.996,134,1.247,137,1.372,142,1.268,150,1.128,156,2.222,163,2.2,192,1.965,195,2.415,204,0.745,208,1.778,209,1.595,210,2.722,211,4.199,212,2.99,213,2.99,214,3.111,215,3.7,216,3.7,217,1.595,218,2.331,219,2.756,220,2.99,221,4.199,222,2.99,223,2.99,224,2.497,225,2.99,226,1.897,227,1.965,228,2.99,229,2.99,230,3.111,231,2.199,232,3.111,233,1.698,234,2.99,235,1.897,236,1.897,237,2.99,238,1.396,239,1.897,240,1.595,241,1.897,242,1.595,243,1.897,244,1.897,245,1.897,246,1.897,247,1.897,248,2.99,249,2.99,250,1.247,251,1.396,252,1.128,253,1.396,254,1.247,255,1.595,256,1.897,257,1.897,258,2.513,259,1.595,260,1.595,261,1.897,262,1.897,263,1.595,264,1.897,265,1.396,266,1.595,267,3.089,268,1.595,269,1.595,270,1.897,271,1.897,272,1.897,273,1.897,274,2.199,275,2.432,276,1.897,277,2.513,278,1.897,279,1.595,280,0.805,281,1.897,282,1.595,283,1.897,284,1.595,285,1.897,286,1.897,287,2.99,288,1.897,289,2.432,290,1.897,291,1.595,292,1.128,293,2.99,294,3.7,295,1.897,296,2.676,297,1.897,298,1.778,299,2.415,300,2.497,301,1.698,302,1.897,303,1.897,304,1.897,305,0.87,306,1.595,307,1.897,308,1.595,309,1.595,310,1.396,311,1.595,312,1.897,313,1.897,314,1.897,315,0.945,316,1.897,317,1.897,318,1.595,319,1.897,320,1.897,321,1.897,322,1.595,323,1.897,324,1.897,325,1.595,326,2.99,327,1.897,328,1.595,329,0.692,330,1.595,331,1.595,332,1.897,333,1.897,334,1.595,335,1.595,336,1.897,337,1.897,338,1.897,339,1.897,340,1.897,341,1.595,342,2.2,343,1.595,344,1.897,345,1.897,346,1.897,347,1.897,348,2.99,349,1.897,350,1.396,351,1.897,352,1.897,353,1.897,354,1.897,355,1.897,356,2.513,357,1.897,358,1.595,359,1.897,360,1.897,361,1.897,362,1.595,363,1.247,364,1.897,365,1.897,366,1.595,367,1.897,368,1.897]],["title/classes/Alarms.html",[33,0.268,78,1.397]],["body/classes/Alarms.html",[3,0.15,4,0.15,5,0.132,7,0.47,8,0.971,12,0.614,13,1.328,16,1.432,17,0.03,20,0.739,32,0.15,33,0.132,36,2.02,52,3.468,55,1.681,59,0.007,60,0.011,61,0.007,62,2.423,63,0.805,65,0.805,68,1.144,71,1.073,78,2.541,80,1.199,88,0.569,89,2.313,91,1.897,93,0.877,96,2.687,98,1.426,103,1.212,105,1.392,106,1.293,107,0.727,108,0.995,109,1.306,110,1.41,133,2.073,136,1.728,137,1.758,141,1.309,142,2.52,150,1.564,156,2.388,192,2.518,195,1.758,204,1.033,210,2.445,214,2.794,224,0.961,227,2.771,233,2.571,238,1.189,240,1.358,242,1.358,250,1.062,251,1.189,252,0.961,274,1.934,291,1.358,292,2.952,296,2.643,299,0.741,300,3.501,301,2.278,305,1.206,309,1.358,311,3.544,318,1.358,325,1.358,342,3.275,350,1.934,363,2.771,369,1.358,370,3.324,371,2.629,372,3.324,373,2.794,374,3.22,375,3.798,376,3.324,377,2.629,378,2.629,379,1.616,380,2.629,381,1.616,382,2.629,383,1.616,384,2.629,385,2.21,386,1.934,387,1.616,388,1.616,389,1.616,390,1.616,391,1.616,392,2.629,393,1.616,394,1.934,395,1.616,396,2.629,397,1.616,398,1.189,399,2.629,400,1.616,401,2.629,402,1.616,403,1.616,404,1.616,405,1.616,406,1.189,407,1.616,408,1.616,409,1.062,410,1.189,411,1.616,412,1.616,413,1.616,414,2.629,415,4.216,416,1.616,417,2.21,418,2.794,419,2.21,420,2.629,421,1.616,422,1.616,423,1.616,424,1.616,425,1.616,426,1.189,427,3.324,428,2.629,429,1.616,430,1.616,431,1.358,432,1.616,433,2.629,434,2.629,435,1.616,436,1.616,437,1.616,438,1.616,439,1.616,440,1.358,441,4.763,442,1.616,443,1.616,444,1.616,445,3.324,446,1.616,447,3.324,448,3.324,449,3.324,450,1.616,451,1.616,452,1.616,453,1.616,454,2.287,455,0.877,456,1.189,457,1.616,458,1.616,459,1.616,460,1.616,461,1.616,462,1.616,463,4.216,464,1.616,465,3.324,466,1.616,467,1.616,468,2.629,469,2.629,470,1.616,471,1.616,472,2.794,473,3.798,474,3.22,475,1.616,476,1.358,477,1.189,478,1.358,479,1.616,480,1.358,481,3.324,482,1.358,483,2.629,484,1.616,485,1.616,486,1.616]],["title/injectables/AlertService.html",[0,0.962,487,1.958]],["body/injectables/AlertService.html",[0,1.125,2,1.317,3,0.245,4,0.245,5,0.215,7,0.276,8,1.125,9,3.229,12,0.618,13,1.236,16,1.352,17,0.03,18,3.283,20,0.597,21,0.667,30,1.435,31,1.317,32,0.245,33,0.215,47,1.782,59,0.011,60,0.016,61,0.011,65,1.317,68,1.044,71,1.169,88,0.832,91,1.303,105,1.455,106,1.352,107,0.749,108,1.049,109,2.079,110,2.341,133,1.782,156,1.782,195,2.081,269,3.812,296,2.427,299,2.081,487,2.288,488,2.224,489,4.378,490,3.848,491,3.848,492,3.848,493,2.646,494,2.646,495,3.848,496,5.951,497,4.535,498,4.535,499,2.646,500,5.369,501,3.848,502,2.646,503,4.535,504,4.535,505,3.336,506,4.535,507,3.336,508,3.812,509,4.979,510,3.892,511,4.979,512,3.848,513,3.848,514,5.697,515,2.646,516,2.646,517,1.04,518,2.224,519,4.535,520,3.336,521,3.812,522,2.981,523,4.535,524,3.812,525,3.477,526,4.64,527,3.336,528,3.812,529,4.535,530,4.979,531,2.646,532,2.646,533,3.812,534,2.646,535,4.535,536,2.646,537,2.646,538,2.646,539,2.646]],["title/components/AppComponent.html",[540,1.294,541,1.511]],["body/components/AppComponent.html",[3,0.391,4,0.391,5,0.344,12,0.988,13,0.988,17,0.029,20,0.82,21,1.065,31,2.632,32,0.391,33,0.344,59,0.018,60,0.022,61,0.018,105,1.236,106,1.566,107,0.599,108,0.779,204,2.375,217,3.555,218,2.912,455,2.868,540,2.267,541,2.773,542,3.144,543,2.779,544,2.779,545,2.779,546,2.779,547,3.555,548,2.779,549,4.171,550,3.774,551,3.475,552,5.768,553,3.475,554,5.287,555,4.229,556,4.229,557,3.555,558,2.779,559,3.475,560,2.779,561,2.779,562,2.779,563,2.294,564,2.779,565,1.794,566,2.779,567,1.94,568,1.794,569,2.779,570,2.779,571,2.779]],["title/modules/AppModule.html",[572,2.164,573,2.164]],["body/modules/AppModule.html",[3,0.393,4,0.393,5,0.346,17,0.029,20,0.986,21,1.07,32,0.393,33,0.346,59,0.018,60,0.022,61,0.018,305,1.948,315,2.114,517,1.668,541,3.067,550,2.525,573,4.318,574,2.114,575,2.876,576,3.569,577,3.569,578,3.569,579,3.569,580,3.777,581,3.484,582,4.246,583,4.456,584,3.484,585,5.3,586,3.484,587,5.3,588,3.569,589,3.124,590,5.3,591,2.304,592,3.569,593,5.3,594,4.246,595,3.569,596,4.246,597,4.246,598,3.569,599,4.246,600,4.246]],["title/modules/AppRoutingModule.html",[572,2.164,580,1.958]],["body/modules/AppRoutingModule.html",[3,0.427,4,0.427,5,0.376,17,0.029,20,0.866,21,1.163,32,0.427,33,0.376,47,1.813,59,0.02,60,0.024,61,0.02,574,2.298,580,3.318,584,3.033,586,3.667,591,2.504,601,4.615,602,3.879,603,5.579,604,4.69,605,3.566,606,4.69,607,4.104,608,4.615,609,4.615,610,4.615,611,4.615,612,4.615,613,4.615,614,4.615,615,4.615,616,4.615,617,3.879]],["title/components/HistoryComponent.html",[540,1.294,563,1.787]],["body/components/HistoryComponent.html",[3,0.387,4,0.387,5,0.34,7,0.435,8,1.533,12,1.34,13,1.226,16,1.134,17,0.029,20,0.648,21,1.052,32,0.387,33,0.34,59,0.018,60,0.022,61,0.018,86,2.847,106,1.424,137,1.917,204,2.364,455,2.847,540,2.254,541,1.917,542,3.12,543,2.746,544,2.746,545,2.746,546,2.746,548,2.746,549,4.158,550,3.762,551,3.449,553,3.449,558,2.746,559,3.449,560,2.746,561,2.746,562,2.746,563,3.264,564,2.746,565,1.772,566,2.746,567,1.917,568,1.772,569,2.746,570,2.746,571,2.746,618,3.512,619,4.822,620,5.058,621,5.736,622,5.247,623,5.058,624,4.177,625,4.177,626,5.247]],["title/components/HomePage.html",[540,1.294,565,1.397]],["body/components/HomePage.html",[1,3.272,3,0.126,4,0.126,5,0.111,7,0.142,8,0.668,9,2.258,12,0.807,13,1.351,16,1.2,17,0.029,20,0.868,21,0.344,32,0.126,33,0.111,36,0.579,41,1.147,42,2.903,45,2.171,47,0.899,52,0.897,54,1.682,55,1.496,59,0.006,60,0.01,61,0.006,62,1.402,68,0.937,71,0.709,72,2.27,79,2.475,80,0.534,88,0.494,89,2.346,91,1.868,99,0.897,105,0.399,106,0.801,107,0.741,108,0.251,109,1.635,118,1.84,126,2.127,134,1.503,137,1.765,141,1.139,142,0.579,162,1.682,163,2.054,204,1.511,208,2.629,218,2.284,219,2.398,224,2.475,227,0.897,230,1.922,231,1.004,232,3.233,233,0.626,252,0.811,254,0.897,259,1.147,260,1.147,263,1.147,265,1.682,266,1.147,267,2.171,280,1.967,296,0.626,298,0.811,299,1.765,310,2.829,315,2.4,329,1.076,356,1.147,358,1.147,362,1.147,409,0.897,410,1.004,426,1.004,431,1.922,454,1.241,455,1.241,487,2.96,489,3.662,500,1.147,505,1.004,507,1.004,510,2.829,517,0.536,522,1.94,525,1.503,527,2.171,540,1.357,541,0.626,542,1.36,543,0.897,544,0.897,545,0.897,546,0.897,548,0.897,549,2.735,550,2.475,551,1.503,553,1.503,558,0.897,559,1.503,560,0.897,561,0.897,562,0.897,563,0.74,564,0.897,565,1.465,566,0.897,567,1.354,568,0.579,569,1.503,570,0.897,571,0.897,591,0.74,607,1.682,620,1.147,627,1.147,628,2.952,629,2.287,630,2.952,631,3.846,632,2.952,633,3.272,634,1.755,635,2.952,636,3.454,637,3.454,638,2.903,639,3.454,640,3.454,641,3.454,642,1.365,643,3.454,644,2.398,645,3.716,646,2.287,647,1.922,648,1.365,649,2.287,650,1.922,651,1.365,652,2.615,653,2.171,654,2.287,655,1.365,656,2.903,657,1.365,658,1.365,659,1.922,660,2.287,661,1.922,662,2.287,663,1.365,664,2.287,665,1.585,666,2.287,667,1.365,668,1.365,669,2.952,670,1.365,671,1.72,672,1.365,673,1.365,674,1.365,675,1.365,676,1.365,677,1.365,678,1.365,679,1.365,680,1.365,681,1.365,682,0.897,683,0.897,684,1.147,685,0.897,686,1.365,687,1.147,688,1.147,689,1.601,690,1.147,691,1.147,692,1.004,693,1.365,694,2.287,695,1.365,696,1.365,697,1.365,698,1.365,699,2.952,700,1.365,701,1.365,702,1.365,703,1.365,704,1.365,705,2.287,706,1.365,707,3.454,708,1.365,709,1.365,710,2.287,711,2.287,712,1.365,713,1.365,714,2.287,715,1.365,716,1.147,717,1.365,718,2.287,719,1.365,720,1.365,721,1.365,722,1.365,723,1.365,724,3.846,725,1.365,726,1.365,727,1.365,728,1.365,729,1.365,730,1.365,731,1.147,732,1.365,733,1.365,734,1.147,735,1.147,736,1.365,737,1.365,738,2.952,739,2.287,740,1.755,741,1.365,742,1.365,743,1.365,744,1.365,745,1.365,746,1.365,747,1.365,748,1.365,749,1.147,750,1.365,751,1.365,752,1.365,753,1.365,754,1.365,755,1.365,756,1.365,757,2.287,758,1.365,759,1.365,760,1.365,761,1.365,762,1.365,763,1.365,764,1.365,765,1.365,766,2.287,767,2.287,768,2.287,769,2.903,770,2.903,771,3.233,772,1.365,773,1.922,774,1.147,775,1.365,776,2.829,777,1.147,778,1.365,779,1.365,780,4.489,781,1.365,782,2.287,783,4.052,784,1.365,785,1.365,786,1.365,787,3.233,788,1.365,789,1.365,790,1.365,791,2.481,792,1.365,793,1.147,794,1.365,795,4.489,796,3.233,797,2.903,798,2.903,799,2.903,800,1.147,801,1.365,802,2.171,803,1.365,804,2.481,805,1.147,806,1.365,807,2.287,808,4.636,809,4.299,810,2.287,811,4.636,812,2.287,813,4.636,814,2.287,815,2.287,816,2.287,817,2.287,818,2.287,819,2.287,820,2.287,821,2.287,822,2.287,823,2.287,824,1.365,825,1.147,826,2.481,827,1.365,828,2.287,829,2.952,830,1.365,831,1.365,832,1.365,833,1.365,834,1.365,835,2.287,836,1.365,837,1.365,838,1.147,839,1.365,840,2.287,841,1.365,842,1.365,843,2.287,844,3.846,845,1.365,846,1.147,847,1.147]],["title/modules/HomePageModule.html",[572,2.164,848,2.164]],["body/modules/HomePageModule.html",[3,0.397,4,0.397,5,0.349,17,0.029,20,1.002,21,1.081,32,0.397,33,0.349,59,0.018,60,0.023,61,0.018,305,1.968,315,2.136,406,3.156,517,1.686,565,2.701,567,2.922,574,2.136,575,2.894,581,3.506,583,4.484,584,3.506,586,3.506,592,4.484,595,3.606,607,3.156,682,2.82,683,2.82,684,3.606,848,4.355,849,3.606,850,3.606,851,3.606,852,3.787,853,4.29,854,5.335,855,3.606,856,5.335,857,3.606]],["title/modules/HomePageRoutingModule.html",[572,2.164,852,1.958]],["body/modules/HomePageRoutingModule.html",[3,0.408,4,0.408,5,0.359,17,0.029,20,0.977,21,1.111,32,0.408,33,0.359,47,1.732,59,0.019,60,0.023,61,0.019,305,2.023,315,2.195,520,3.243,540,1.732,565,2.301,574,2.195,575,2.944,581,3.566,584,2.898,586,3.566,591,2.392,598,4.561,602,3.706,604,4.561,605,3.495,606,3.706,617,3.706,644,3.478,652,2.392,688,3.706,852,3.813,857,3.706,858,3.706,859,3.706,860,4.409,861,3.863,862,4.409,863,4.409]],["title/guards/HomeResolve.html",[861,2.164,864,2.423]],["body/guards/HomeResolve.html",[0,1.488,3,0.369,4,0.369,5,0.324,7,0.415,8,1.488,12,1.189,13,1.189,16,1.082,17,0.029,18,2.369,20,0.97,21,1.004,32,0.369,33,0.324,59,0.017,60,0.022,61,0.017,86,2.162,89,2.205,91,1.9,105,1.488,106,1.382,107,0.721,108,0.938,156,2.001,218,2.915,299,2.336,517,1.566,520,4.351,591,2.162,633,4.108,647,3.35,652,2.763,671,1.984,685,2.619,692,2.931,861,3.347,865,3.984,866,3.35,867,2.931,868,6.353,869,3.984,870,5.092,871,5.914,872,5.612,873,5.914,874,3.984,875,4.28,876,2.931,877,3.984,878,3.984,879,3.984,880,3.984,881,3.984,882,3.984]],["title/interfaces/IAlarm.html",[87,1.958,883,1.036]],["body/interfaces/IAlarm.html",[3,0.427,4,0.427,5,0.376,7,0.664,17,0.028,32,0.427,59,0.02,60,0.024,61,0.02,68,1.691,69,3.704,71,1.227,80,1.401,87,3.318,88,1.206,93,3.38,94,4.583,103,2.186,107,0.903,108,1.028,883,1.452,884,2.298,885,3.879]],["title/interfaces/IPickerColumnOption.html",[883,1.036,886,2.164]],["body/interfaces/IPickerColumnOption.html",[3,0.412,4,0.412,5,0.363,7,0.464,17,0.028,32,0.412,59,0.019,60,0.023,61,0.019,68,1.671,71,1.184,80,1.379,88,1.181,93,3.34,103,2.343,107,0.91,108,1.239,525,4.046,777,5.175,883,1.402,884,2.219,886,3.589,887,3.746,888,6.155,889,6.155]],["title/interfaces/IReturnMsg.html",[233,1.511,883,1.036]],["body/interfaces/IReturnMsg.html",[3,0.457,4,0.457,5,0.402,7,0.514,17,0.028,32,0.457,59,0.021,60,0.025,61,0.021,71,1.136,88,1.255,103,2.249,107,0.822,233,2.664,296,2.922,300,3.787,883,1.552,884,2.456,890,4.147]],["title/interfaces/IStatus.html",[671,1.64,883,1.036]],["body/interfaces/IStatus.html",[3,0.442,4,0.442,5,0.389,7,0.497,17,0.028,20,0.741,32,0.442,59,0.02,60,0.024,61,0.02,80,1.421,88,1.231,103,2.218,107,0.862,126,2.891,671,2.835,689,3.418,734,5.297,735,5.297,883,1.502,884,2.377,891,4.014,892,4.774]],["title/interfaces/ITimeList.html",[883,1.036,893,2.164]],["body/interfaces/ITimeList.html",[3,0.41,4,0.41,5,0.361,7,0.461,17,0.028,32,0.41,59,0.019,60,0.023,61,0.019,71,1.182,80,1.499,88,1.176,107,0.909,108,1.238,189,3.652,280,2.722,329,2.239,665,2.818,883,1.393,884,2.204,893,3.575,894,3.722,895,4.037,896,5.163,897,4.037]],["title/interfaces/ITimer.html",[883,1.036,898,1.958]],["body/interfaces/ITimer.html",[3,0.353,4,0.353,5,0.31,7,0.397,17,0.029,32,0.353,59,0.016,60,0.021,61,0.016,71,1.187,80,1.442,88,1.07,103,2.002,107,0.941,108,1.261,118,1.968,189,3.457,280,2.793,329,2.12,634,3.457,665,2.668,740,3.457,883,1.198,884,1.896,895,3.821,897,3.821,898,2.941,899,3.202,900,4.277,901,4.277,902,4.888,903,4.277,904,4.277,905,4.888]],["title/injectables/NotificationService.html",[0,0.962,219,1.787]],["body/injectables/NotificationService.html",[0,1.287,2,1.594,3,0.296,4,0.296,5,0.261,7,0.333,8,1.287,9,3.449,12,0.748,13,1.485,16,1.634,17,0.029,20,0.841,21,0.807,30,1.737,31,1.594,32,0.296,33,0.261,47,1.258,55,1.084,59,0.014,60,0.019,61,0.014,62,1.167,65,1.594,68,1.472,71,1.109,80,1.432,88,0.952,89,2.308,91,1.491,105,1.661,106,1.543,107,0.868,108,1.047,109,2.131,118,1.925,126,1.469,133,1.731,142,1.868,162,2.356,163,1.904,204,1.731,219,2.39,280,1.868,296,2.31,310,3.989,426,2.356,517,1.258,518,2.692,740,1.904,749,2.692,906,2.692,907,5.034,908,6.221,909,4.404,910,4.404,911,5.034,912,5.034,913,4.404,914,5.034,915,4.404,916,3.202,917,4.404,918,3.202,919,3.202,920,4.404,921,3.202,922,3.202,923,5.422,924,3.202,925,3.202,926,3.202,927,3.202,928,3.202,929,3.202,930,3.202,931,3.202,932,2.692,933,3.202,934,3.202,935,4.404,936,5.034,937,3.202,938,3.202,939,3.202,940,4.404,941,2.692,942,4.404,943,2.692,944,2.692,945,4.404,946,3.702,947,3.202,948,3.202,949,4.404,950,3.202,951,3.202,952,3.202]],["title/classes/Options.html",[33,0.268,48,1.958]],["body/classes/Options.html",[3,0.322,4,0.322,5,0.283,7,0.547,8,1.361,12,1.227,13,1.506,16,1.523,17,0.029,20,0.723,32,0.322,33,0.283,47,1.366,48,3.478,55,1.177,59,0.015,60,0.02,61,0.015,63,1.731,71,1.178,80,1.227,88,1.007,89,2.534,91,2.183,98,2.527,99,2.285,100,3.426,105,1.361,106,1.264,107,0.852,108,0.858,156,1.83,157,2.922,159,2.922,192,3.061,250,2.285,306,3.915,886,3.957,953,2.922,954,5.251,955,5.251,956,5.251,957,5.251,958,4.657,959,5.251,960,4.657,961,5.609,962,4.657,963,3.476,964,3.476,965,3.476,966,4.657,967,3.476,968,3.476,969,3.476,970,3.476,971,3.476,972,3.476,973,3.476,974,3.476,975,3.476,976,3.476,977,3.476,978,3.476,979,3.476,980,3.476,981,3.476,982,3.476,983,3.476,984,3.476,985,3.476,986,3.476,987,3.476,988,3.476,989,3.476,990,3.476,991,3.476,992,3.476,993,3.476,994,4.657,995,4.657,996,3.476]],["title/classes/Settings.html",[33,0.268,568,1.397]],["body/classes/Settings.html",[3,0.28,4,0.28,5,0.246,7,0.551,8,1.236,12,1.14,13,1.14,16,1.148,17,0.029,20,0.656,32,0.28,33,0.246,36,1.281,47,2.187,55,1.022,59,0.013,60,0.018,61,0.013,62,2.331,63,1.504,65,2.106,68,1.148,69,1.796,71,1.146,72,2.78,78,2.361,80,0.988,88,0.914,96,1.796,103,1.779,105,0.883,106,0.82,107,0.599,108,0.899,109,1.187,118,1.432,133,2.078,134,2.78,136,2.78,141,2.106,142,1.794,156,1.918,195,2.239,204,1.187,227,2.78,265,2.222,279,2.539,292,2.902,296,2.647,298,1.796,300,3.31,301,2.554,305,1.941,328,2.539,329,1.101,330,2.539,331,2.539,334,2.539,335,2.539,341,2.539,342,2.902,343,2.539,350,2.222,363,2.78,366,2.539,374,2.539,375,2.539,394,3.111,409,1.985,454,3.02,455,1.639,456,2.222,472,2.539,473,4.102,474,3.555,476,2.539,477,3.59,478,2.539,480,2.539,482,2.539,568,2.243,997,2.539,998,4.229,999,4.229,1000,4.229,1001,4.229,1002,3.02,1003,4.229,1004,5.287,1005,3.02,1006,3.02,1007,3.02,1008,3.02,1009,3.02,1010,3.02,1011,3.02,1012,3.02,1013,3.02,1014,3.02,1015,3.02,1016,3.02,1017,3.02,1018,3.02,1019,3.02,1020,3.02,1021,3.02,1022,3.02,1023,4.229,1024,3.02,1025,3.02,1026,3.02,1027,2.539,1028,2.539,1029,3.02,1030,3.02]],["title/components/SettingsPopoverComponent.html",[540,1.294,567,1.511]],["body/components/SettingsPopoverComponent.html",[3,0.129,4,0.129,5,0.113,7,0.145,8,0.678,9,2.718,12,0.542,13,1.329,16,1.318,17,0.029,20,0.833,21,0.35,32,0.129,33,0.113,36,0.589,45,1.022,48,2.886,54,2.2,59,0.006,60,0.01,61,0.006,62,2.28,68,0.948,71,0.428,78,1.781,79,2.497,80,0.981,86,1.259,88,0.502,89,2.302,91,1.818,93,1.259,96,2.077,98,1.259,105,1.135,106,1.268,107,0.709,108,0.716,109,0.912,110,1.982,118,0.786,133,1.836,137,2.045,141,2.091,156,0.546,163,1.38,195,1.372,204,1.65,208,2.65,210,2.2,218,2.045,224,1.38,231,2.2,233,1.372,238,1.022,252,0.826,253,1.022,254,0.913,258,1.951,267,1.708,268,2.513,274,1.022,275,0.913,277,1.951,282,2.513,289,0.913,292,1.38,298,1.38,299,0.637,301,1.065,322,1.168,329,0.846,342,2.31,373,2.936,385,2.513,386,1.022,394,1.022,398,1.708,409,0.913,410,1.022,417,3.747,418,1.168,419,2.513,440,2.936,454,2.418,455,1.259,456,1.022,487,2.31,489,3.686,510,3.437,517,0.546,521,3.266,522,1.965,524,3.266,525,1.526,526,4.212,527,1.708,528,1.951,533,1.951,540,1.175,541,0.637,542,1.38,543,0.913,544,0.913,545,0.913,546,0.913,548,0.913,549,2.76,550,2.497,551,1.526,553,1.526,558,0.913,559,1.526,560,0.913,561,0.913,562,0.913,563,0.754,564,0.913,565,0.589,566,0.913,567,1.603,568,2.524,569,1.965,570,0.913,571,0.913,619,2.513,623,2.936,645,3.53,653,1.708,659,1.168,661,1.951,682,3.779,683,3.779,687,1.168,691,1.168,692,1.022,769,1.168,770,3.927,771,3.747,773,1.951,774,2.513,776,1.022,780,1.168,783,2.513,787,3.266,791,3.747,793,3.266,795,4.662,796,2.936,797,1.951,798,3.53,799,3.747,800,1.168,802,3.089,804,2.513,809,4.08,825,1.951,826,3.266,838,1.168,847,1.951,1031,1.168,1032,2.99,1033,2.321,1034,2.99,1035,2.99,1036,2.99,1037,3.493,1038,2.321,1039,3.493,1040,2.321,1041,2.321,1042,2.321,1043,1.389,1044,4.457,1045,2.321,1046,1.389,1047,1.389,1048,2.321,1049,2.321,1050,2.321,1051,2.321,1052,1.389,1053,1.389,1054,2.321,1055,2.321,1056,1.389,1057,1.389,1058,2.321,1059,1.389,1060,2.321,1061,1.389,1062,2.321,1063,1.389,1064,1.389,1065,1.389,1066,1.389,1067,1.389,1068,1.389,1069,1.389,1070,1.389,1071,2.99,1072,1.389,1073,1.168,1074,1.022,1075,1.022,1076,1.389,1077,1.389,1078,1.389,1079,1.389,1080,1.389,1081,1.168,1082,1.389,1083,1.389,1084,1.389,1085,2.321,1086,1.389,1087,1.389,1088,3.885,1089,1.389,1090,1.389,1091,1.389,1092,1.389,1093,1.389,1094,1.389,1095,1.389,1096,1.389,1097,1.389,1098,2.321,1099,2.321,1100,1.389,1101,1.389,1102,1.389,1103,1.389,1104,3.493,1105,2.321,1106,1.389,1107,2.321,1108,1.389,1109,3.885,1110,1.389,1111,3.493,1112,2.321,1113,1.389,1114,1.389,1115,2.321,1116,2.321,1117,2.321,1118,3.493,1119,3.493,1120,2.321,1121,2.321,1122,2.321,1123,2.321,1124,2.321,1125,2.321,1126,1.951,1127,2.321,1128,2.321,1129,2.321,1130,2.321,1131,2.321,1132,2.321,1133,1.389,1134,1.389,1135,1.389,1136,1.389,1137,1.389,1138,1.389,1139,2.321,1140,1.389,1141,1.389,1142,2.321,1143,2.321,1144,1.389,1145,2.321,1146,3.493,1147,1.389,1148,2.99,1149,1.389,1150,1.389,1151,2.321,1152,1.168,1153,2.321,1154,1.389,1155,1.389,1156,1.389,1157,1.389,1158,1.389,1159,3.493,1160,1.389,1161,2.321,1162,1.389,1163,1.389,1164,1.389]],["title/injectables/StorageService.html",[0,0.962,218,1.511]],["body/injectables/StorageService.html",[0,1.016,2,1.149,3,0.214,4,0.214,5,0.188,7,0.24,8,1.016,9,3.114,12,0.539,13,1.31,16,1.558,17,0.029,18,3.413,20,0.934,21,0.581,30,1.252,31,1.149,32,0.214,33,0.188,36,0.979,47,0.906,55,0.781,59,0.01,60,0.015,61,0.01,62,1.822,68,0.626,69,3.621,70,2.923,71,0.967,78,2.119,79,3.123,87,1.372,89,2.204,91,2.038,105,1.535,106,1.425,107,0.744,108,0.967,110,2.119,118,0.781,133,0.906,137,1.059,156,2.298,195,2.137,204,0.906,207,1.697,218,1.595,224,3.688,233,1.595,252,1.372,253,1.697,254,1.516,275,2.75,280,1.975,284,1.939,289,2.285,292,2.971,296,2.293,299,1.059,300,2.067,301,1.059,342,2.067,398,3.863,505,1.697,507,1.697,517,0.906,522,2.75,557,1.939,568,2.312,633,3.452,638,2.923,652,3.223,653,4.429,671,2.488,685,1.516,731,1.939,867,1.697,875,1.939,876,1.697,932,1.939,1073,1.939,1074,1.697,1075,1.697,1126,1.939,1165,1.939,1166,3.477,1167,4.657,1168,3.477,1169,4.657,1170,3.477,1171,3.477,1172,2.307,1173,3.477,1174,2.307,1175,2.307,1176,3.477,1177,2.307,1178,5.941,1179,5.252,1180,2.307,1181,3.477,1182,2.307,1183,3.477,1184,2.307,1185,3.477,1186,2.307,1187,1.939,1188,2.307,1189,2.307,1190,2.307,1191,2.307,1192,2.307,1193,2.307,1194,2.307,1195,2.307,1196,2.307,1197,2.307,1198,2.307,1199,2.307,1200,2.307,1201,2.307,1202,2.307,1203,2.307,1204,2.307,1205,2.307,1206,2.307,1207,2.307,1208,2.307,1209,2.307,1210,2.307,1211,2.307,1212,2.307,1213,2.307,1214,2.307,1215,2.307,1216,2.307,1217,2.307,1218,2.307,1219,4.184,1220,2.307,1221,2.307,1222,2.307,1223,2.307,1224,2.307,1225,2.307,1226,2.307,1227,2.307,1228,2.307,1229,2.307]],["title/classes/TimeList.html",[33,0.268,689,1.787]],["body/classes/TimeList.html",[3,0.382,4,0.382,5,0.336,7,0.43,12,1.332,13,1.496,17,0.029,20,0.64,32,0.382,33,0.336,55,1.397,59,0.018,60,0.022,61,0.018,63,2.055,71,1.104,80,1.399,86,2.825,88,1.126,107,0.893,108,1.227,110,1.751,189,3.392,280,2.541,329,2.08,665,2.618,689,2.825,893,3.749,895,3.749,896,4.796,897,3.749,1230,3.47,1231,4.127,1232,4.127,1233,4.127,1234,4.127,1235,4.127,1236,4.127,1237,4.127,1238,4.127,1239,3.47,1240,3.47,1241,3.47,1242,3.47,1243,4.127,1244,3.47]],["title/classes/Timer.html",[33,0.268,126,1.511]],["body/classes/Timer.html",[3,0.312,4,0.312,5,0.274,7,0.351,12,1.207,13,1.535,17,0.029,20,0.523,32,0.312,33,0.274,55,1.544,59,0.014,60,0.019,61,0.014,63,1.677,71,1.099,80,1.294,86,2.474,88,0.986,91,2.295,103,1.662,107,0.926,108,1.171,110,2.192,118,1.75,126,2.092,189,3.073,280,2.632,301,1.546,329,1.884,634,3.073,665,2.372,740,3.073,895,3.397,897,3.397,898,3.073,900,3.802,901,3.802,902,4.345,903,3.802,904,3.802,905,4.345,1239,2.832,1240,2.832,1241,2.832,1242,2.832,1244,2.832,1245,2.832,1246,3.369,1247,3.369,1248,3.369,1249,3.369,1250,3.369,1251,3.369,1252,3.369,1253,3.369,1254,3.369,1255,3.369,1256,3.369,1257,3.369,1258,3.369,1259,3.369,1260,3.369,1261,3.369,1262,3.369,1263,3.369,1264,3.833,1265,3.369,1266,3.369,1267,3.369,1268,3.369,1269,3.369,1270,3.369,1271,3.369]],["title/injectables/TimerService.html",[0,0.962,644,1.787]],["body/injectables/TimerService.html",[0,1.005,2,1.132,3,0.211,4,0.211,5,0.185,7,0.237,8,1.005,12,0.803,13,1.466,16,1.629,17,0.029,20,0.887,21,0.573,30,1.234,31,1.132,32,0.211,33,0.185,36,1.961,55,1.681,59,0.01,60,0.015,61,0.01,65,1.132,68,0.617,71,0.419,80,1.08,88,0.744,89,2.052,91,2.055,97,2.26,98,1.866,103,1.512,105,1.212,106,1.126,107,0.703,108,0.764,109,0.894,110,2.301,118,1.404,126,2.928,133,2.247,137,2.397,138,2.53,139,3.842,141,1.712,142,1.459,143,3.401,144,2.53,145,2.53,150,1.352,156,2.29,195,1.578,206,1.912,207,1.673,219,3.162,250,1.495,251,1.673,255,1.912,275,2.726,280,2.369,289,2.726,298,1.352,301,2.121,315,2.601,329,1.977,517,0.894,633,3.758,634,1.352,644,1.866,665,2.397,671,1.132,685,1.495,689,2.834,690,1.912,716,1.912,740,3.106,846,2.891,867,1.673,898,1.352,900,1.673,901,1.673,903,1.673,904,1.673,1074,1.673,1075,1.673,1152,1.912,1264,2.891,1272,1.912,1273,4.147,1274,4.147,1275,4.147,1276,4.623,1277,4.623,1278,4.147,1279,3.439,1280,2.274,1281,2.274,1282,2.274,1283,2.274,1284,2.274,1285,2.274,1286,2.274,1287,2.274,1288,2.274,1289,2.274,1290,2.274,1291,2.274,1292,2.274,1293,2.274,1294,2.274,1295,1.673,1296,2.274,1297,2.274,1298,2.274,1299,2.274,1300,2.274,1301,2.274,1302,2.274,1303,2.274,1304,2.274,1305,2.274,1306,2.274,1307,2.274,1308,4.623,1309,2.274,1310,2.274,1311,2.274,1312,2.274,1313,4.623,1314,4.965,1315,2.274,1316,4.147,1317,2.274,1318,2.274,1319,3.439,1320,3.439,1321,4.623,1322,2.274,1323,2.274,1324,3.439,1325,3.439,1326,2.274,1327,2.274,1328,2.274,1329,3.439,1330,2.274,1331,2.274,1332,2.274,1333,2.274,1334,2.274,1335,2.274,1336,2.274]],["title/coverage.html",[1337,3.774]],["body/coverage.html",[0,1.657,1,1.883,5,0.233,6,2.409,17,0.029,33,0.462,48,1.704,55,2.309,59,0.012,60,0.017,61,0.012,62,1.045,64,2.409,78,1.728,87,1.704,95,2.108,97,1.883,107,0.406,126,1.315,133,1.126,208,1.704,209,2.409,218,1.315,219,1.555,233,1.315,329,1.486,369,2.409,454,1.555,487,1.704,488,2.409,540,2.03,541,1.315,547,2.409,563,1.555,565,1.215,567,1.315,568,1.728,618,2.409,627,2.409,644,1.555,650,4.342,652,1.555,665,1.87,671,1.427,682,1.883,683,1.883,689,1.555,776,2.998,802,2.998,805,2.409,861,1.883,864,2.108,866,2.409,883,1.784,885,2.409,886,1.883,887,2.409,890,2.409,891,2.409,893,1.883,894,2.409,898,1.704,899,2.409,906,2.409,953,2.409,997,2.409,1031,2.409,1165,2.409,1230,2.409,1245,2.409,1272,2.409,1295,2.108,1337,2.409,1338,2.409,1339,2.865,1340,2.865,1341,4.342,1342,6.69,1343,2.409,1344,6.714,1345,2.409,1346,3.987,1347,3.987,1348,5.329,1349,2.409,1350,2.409,1351,2.409,1352,2.409,1353,2.409,1354,2.409,1355,2.409,1356,2.409,1357,2.409,1358,2.409,1359,2.409,1360,2.409,1361,2.409,1362,4.342,1363,2.409,1364,4.075,1365,4.742,1366,4.742,1367,2.865,1368,2.865,1369,2.865,1370,2.865,1371,2.865,1372,2.865,1373,2.865,1374,4.075,1375,4.075,1376,2.865,1377,2.865,1378,2.865,1379,2.865,1380,2.865,1381,2.865,1382,2.865,1383,2.865,1384,2.865,1385,2.865,1386,2.865,1387,2.865,1388,2.409,1389,3.426,1390,2.409,1391,3.426,1392,2.409,1393,2.409,1394,2.865,1395,2.865]],["title/dependencies.html",[575,2.148,1396,2.752]],["body/dependencies.html",[17,0.029,21,1.13,28,3.77,29,3.77,59,0.019,60,0.023,61,0.019,299,2.058,406,3.299,517,1.762,575,2.433,588,4.609,589,4.034,591,2.433,855,3.77,876,3.299,941,3.77,943,3.77,944,3.77,1187,3.77,1397,6.438,1398,4.485,1399,4.485,1400,4.485,1401,5.483,1402,4.485,1403,6.169,1404,4.485,1405,4.485,1406,5.483,1407,4.485,1408,4.485,1409,4.485,1410,4.485,1411,4.485,1412,4.485,1413,4.485,1414,4.485,1415,4.485,1416,4.485,1417,4.485,1418,4.485,1419,4.485,1420,4.485]],["title/miscellaneous/enumerations.html",[1421,1.493,1422,3.328]],["body/miscellaneous/enumerations.html",[7,0.524,17,0.028,59,0.021,60,0.025,61,0.021,68,1.739,72,3.306,946,4.228,1421,2.729,1422,4.228,1423,5.871,1424,5.029,1425,5.029,1426,5.029,1427,5.871,1428,5.029,1429,5.029,1430,5.029,1431,5.029]],["title/miscellaneous/functions.html",[1421,1.493,1432,3.328]],["body/miscellaneous/functions.html",[7,0.569,16,1.604,17,0.028,59,0.019,60,0.023,61,0.019,65,2.223,68,1.212,71,1.089,80,1.439,81,3.285,82,3.754,83,3.754,84,3.754,85,3.754,95,4.023,97,3.594,105,1.8,106,1.672,108,1.135,115,3.754,117,3.754,118,1.851,119,3.754,125,3.754,138,3.285,139,4.348,141,2.223,142,1.894,143,4.023,144,3.285,145,3.285,1295,4.023,1362,3.754,1363,4.597,1421,2.423,1432,3.754,1433,6.16,1434,4.466,1435,5.468,1436,4.466,1437,4.466]],["title/index.html",[7,0.287,634,1.637,1438,2.752]],["body/index.html",[17,0.026,59,0.022,60,0.026,61,0.022,656,4.455,1338,4.455,1439,5.3]],["title/modules.html",[574,2.235]],["body/modules.html",[17,0.025,59,0.022,60,0.025,61,0.022,573,3.338,574,2.529,580,3.02,589,4.593,848,3.338,852,3.02,1440,6.243,1441,6.243,1442,6.428,1443,5.079,1444,5.079]],["title/overview.html",[1445,3.774]],["body/overview.html",[2,2.223,17,0.028,59,0.019,60,0.023,61,0.019,63,2.223,142,1.894,305,2.049,315,2.223,541,2.989,542,2.656,565,2.507,567,2.712,573,4.281,574,2.223,575,2.967,576,3.754,577,3.754,578,3.754,579,3.754,580,3.515,581,3.594,605,2.656,644,3.207,848,4.322,849,3.754,850,3.754,851,3.754,852,3.758,858,3.754,859,3.754,864,3.285,884,2.223,1445,3.754,1446,5.911,1447,5.911]],["title/routes.html",[605,2.67]],["body/routes.html",[17,0.026,59,0.023,60,0.026,61,0.023,605,3.168]],["title/miscellaneous/variables.html",[1421,1.493,1448,3.328]],["body/miscellaneous/variables.html",[7,0.435,17,0.029,36,1.774,59,0.013,60,0.018,61,0.013,62,1.764,68,1.822,71,1.226,78,2.052,107,0.95,109,2.632,118,1.416,136,2.749,150,1.768,151,3.516,301,1.364,305,2.633,308,2.499,329,1.914,363,3.18,386,2.187,454,3.32,477,2.187,508,2.499,568,1.774,652,2.625,665,2.409,1027,2.499,1028,2.499,1081,2.499,1341,2.499,1343,3.516,1345,3.516,1346,2.499,1347,2.499,1348,2.499,1349,3.516,1350,3.516,1351,3.516,1352,3.516,1353,3.516,1354,3.516,1355,3.516,1356,3.516,1357,3.516,1358,3.516,1359,3.516,1360,3.516,1361,3.516,1388,2.499,1389,4.414,1390,2.499,1391,2.499,1392,3.516,1393,3.516,1421,1.613,1448,2.499,1449,6.379,1450,4.838,1451,4.182,1452,2.972,1453,2.972,1454,4.838,1455,5.25,1456,2.972,1457,2.972,1458,4.838,1459,4.182,1460,4.182,1461,2.972,1462,2.972,1463,2.972,1464,2.972,1465,2.972,1466,4.182,1467,2.972,1468,2.972,1469,2.972,1470,2.972]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolve.html":{},"interfaces/IAlarm.html":{},"interfaces/IPickerColumnOption.html":{},"interfaces/IReturnMsg.html":{},"interfaces/IStatus.html":{},"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":55,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1420,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":1413,"title":{},"body":{"dependencies.html":{}}}],["0.15.3",{"_index":1411,"title":{},"body":{"dependencies.html":{}}}],["0.5rem",{"_index":837,"title":{},"body":{"components/HomePage.html":{}}}],["0.795",{"_index":829,"title":{},"body":{"components/HomePage.html":{}}}],["0.9rem",{"_index":1164,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["0/1",{"_index":1344,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1383,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1376,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1372,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1387,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1365,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1375,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1374,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["00:00.00",{"_index":1264,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["04:00",{"_index":84,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/functions.html":{}}}],["08:30",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0px",{"_index":1151,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["1",{"_index":142,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["1.0.2",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1406,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1364,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1382,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":846,"title":{},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{}}}],["100",{"_index":802,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["12.0.1",{"_index":1397,"title":{},"body":{"dependencies.html":{}}}],["1200",{"_index":83,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/functions.html":{}}}],["12:00",{"_index":82,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/functions.html":{}}}],["1315",{"_index":249,"title":{},"body":{"injectables/AlarmService.html":{}}}],["13:00",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13:15",{"_index":248,"title":{},"body":{"injectables/AlarmService.html":{}}}],["14:00",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1381,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":785,"title":{},"body":{"components/HomePage.html":{}}}],["18:00",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1970",{"_index":924,"title":{},"body":{"injectables/NotificationService.html":{}}}],["1].index",{"_index":476,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["1px",{"_index":1153,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["1rem",{"_index":838,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["2",{"_index":192,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Options.html":{}}}],["2.0.0",{"_index":1418,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":1377,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1142,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["2077ef9a63d2b398840261c8221a0c9b",{"_index":38,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["20px",{"_index":781,"title":{},"body":{"components/HomePage.html":{}}}],["22px",{"_index":786,"title":{},"body":{"components/HomePage.html":{}}}],["26px",{"_index":784,"title":{},"body":{"components/HomePage.html":{}}}],["2rem",{"_index":793,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["3.1.0",{"_index":1399,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":1366,"title":{},"body":{"coverage.html":{}}}],["350",{"_index":812,"title":{},"body":{"components/HomePage.html":{}}}],["350px",{"_index":810,"title":{},"body":{"components/HomePage.html":{}}}],["36",{"_index":840,"title":{},"body":{"components/HomePage.html":{}}}],["3px",{"_index":1163,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["3rem",{"_index":1148,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["4",{"_index":1446,"title":{},"body":{"overview.html":{}}}],["4/10",{"_index":1368,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":805,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["400",{"_index":85,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/functions.html":{}}}],["439209432321129530",{"_index":935,"title":{},"body":{"injectables/NotificationService.html":{}}}],["45",{"_index":835,"title":{},"body":{"components/HomePage.html":{}}}],["5",{"_index":237,"title":{},"body":{"injectables/AlarmService.html":{}}}],["5.5.2",{"_index":1409,"title":{},"body":{"dependencies.html":{}}}],["5/14",{"_index":1386,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":1385,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":776,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["500",{"_index":816,"title":{},"body":{"components/HomePage.html":{}}}],["500px",{"_index":815,"title":{},"body":{"components/HomePage.html":{}}}],["50vw",{"_index":843,"title":{},"body":{"components/HomePage.html":{}}}],["55",{"_index":1384,"title":{},"body":{"coverage.html":{}}}],["59",{"_index":187,"title":{},"body":{"classes/Alarm.html":{}}}],["5px",{"_index":1160,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["6",{"_index":1447,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":1416,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["6/17",{"_index":1367,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":188,"title":{},"body":{"classes/Alarm.html":{}}}],["600",{"_index":819,"title":{},"body":{"components/HomePage.html":{}}}],["600px",{"_index":818,"title":{},"body":{"components/HomePage.html":{}}}],["65",{"_index":828,"title":{},"body":{"components/HomePage.html":{}}}],["6px",{"_index":1154,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["7.20.0",{"_index":1415,"title":{},"body":{"dependencies.html":{}}}],["7/20",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["850",{"_index":822,"title":{},"body":{"components/HomePage.html":{}}}],["850px",{"_index":821,"title":{},"body":{"components/HomePage.html":{}}}],["8c8c8c",{"_index":788,"title":{},"body":{"components/HomePage.html":{}}}],["90",{"_index":1162,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["______________get_____________________",{"_index":1194,"title":{},"body":{"injectables/StorageService.html":{}}}],["______________save____________________",{"_index":1212,"title":{},"body":{"injectables/StorageService.html":{}}}],["_____________utility__________________",{"_index":1225,"title":{},"body":{"injectables/StorageService.html":{}}}],["_________get______________________________________",{"_index":276,"title":{},"body":{"injectables/AlarmService.html":{}}}],["_________set______________________________________",{"_index":290,"title":{},"body":{"injectables/AlarmService.html":{}}}],["_______get",{"_index":1328,"title":{},"body":{"injectables/TimerService.html":{}}}],["_______meange",{"_index":1309,"title":{},"body":{"injectables/TimerService.html":{}}}],["_______set",{"_index":1332,"title":{},"body":{"injectables/TimerService.html":{}}}],["_alarms",{"_index":210,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/SettingsPopoverComponent.html":{}}}],["_alarmsidx",{"_index":370,"title":{},"body":{"classes/Alarms.html":{}}}],["_alarmtmp",{"_index":1034,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["_clickcounter",{"_index":630,"title":{},"body":{"components/HomePage.html":{}}}],["_hours",{"_index":954,"title":{},"body":{"classes/Options.html":{}}}],["_id",{"_index":907,"title":{},"body":{"injectables/NotificationService.html":{}}}],["_index",{"_index":90,"title":{},"body":{"classes/Alarm.html":{}}}],["_minutes",{"_index":955,"title":{},"body":{"classes/Options.html":{}}}],["_selectedalarmidx",{"_index":1035,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["_startstoptxt",{"_index":631,"title":{},"body":{"components/HomePage.html":{}}}],["_status",{"_index":632,"title":{},"body":{"components/HomePage.html":{}}}],["_time",{"_index":1305,"title":{},"body":{"injectables/TimerService.html":{}}}],["_timelist",{"_index":1306,"title":{},"body":{"injectables/TimerService.html":{}}}],["_timer",{"_index":1273,"title":{},"body":{"injectables/TimerService.html":{}}}],["_value",{"_index":92,"title":{},"body":{"classes/Alarm.html":{}}}],["a.index",{"_index":473,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["absolute",{"_index":772,"title":{},"body":{"components/HomePage.html":{}}}],["accepted",{"_index":470,"title":{},"body":{"classes/Alarms.html":{}}}],["accessors",{"_index":98,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Options.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{}}}],["activatedroute",{"_index":643,"title":{},"body":{"components/HomePage.html":{}}}],["activatedroutesnapshot",{"_index":871,"title":{},"body":{"guards/HomeResolve.html":{}}}],["actual_component",{"_index":571,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["add",{"_index":141,"title":{},"body":{"classes/Alarm.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["add(alarm",{"_index":380,"title":{},"body":{"classes/Alarms.html":{}}}],["addalarmcontainer",{"_index":1149,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["addalarmn",{"_index":999,"title":{},"body":{"classes/Settings.html":{}}}],["addalarmn(alarmvalue",{"_index":1001,"title":{},"body":{"classes/Settings.html":{}}}],["addlocalnotification",{"_index":909,"title":{},"body":{"injectables/NotificationService.html":{}}}],["addlocalnotification(msg",{"_index":918,"title":{},"body":{"injectables/NotificationService.html":{}}}],["addnotification",{"_index":910,"title":{},"body":{"injectables/NotificationService.html":{}}}],["addnotification(time",{"_index":920,"title":{},"body":{"injectables/NotificationService.html":{}}}],["addpause",{"_index":1037,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["adid",{"_index":49,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["admob",{"_index":22,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["admob.addlistener(banneradpluginevents.loaded",{"_index":40,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["admob.addlistener(banneradpluginevents.sizechanged",{"_index":44,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["admob.initialize",{"_index":34,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["admob.showbanner(options",{"_index":58,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["admobbannersize",{"_index":23,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["adsize",{"_index":50,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["advertisementservice",{"_index":1,"title":{"injectables/AdvertisementService.html":{}},"body":{"injectables/AdvertisementService.html":{},"components/HomePage.html":{},"coverage.html":{}}}],["aggiungo",{"_index":1012,"title":{},"body":{"classes/Settings.html":{}}}],["alarm",{"_index":62,"title":{"classes/Alarm.html":{}},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alarm(alarm",{"_index":428,"title":{},"body":{"classes/Alarms.html":{}}}],["alarm(alarm._value",{"_index":425,"title":{},"body":{"classes/Alarms.html":{}}}],["alarm(alarm.value",{"_index":416,"title":{},"body":{"classes/Alarms.html":{}}}],["alarm(key",{"_index":352,"title":{},"body":{"injectables/AlarmService.html":{}}}],["alarm(labels.pause",{"_index":1021,"title":{},"body":{"classes/Settings.html":{}}}],["alarm(labels.start",{"_index":330,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{}}}],["alarm(labels.stop",{"_index":334,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{}}}],["alarm(this._alarms[position].value",{"_index":436,"title":{},"body":{"classes/Alarms.html":{}}}],["alarm(valuestr",{"_index":1105,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alarm.duration",{"_index":419,"title":{},"body":{"classes/Alarms.html":{},"components/SettingsPopoverComponent.html":{}}}],["alarm.index",{"_index":441,"title":{},"body":{"classes/Alarms.html":{}}}],["alarm.ispause",{"_index":418,"title":{},"body":{"classes/Alarms.html":{},"components/SettingsPopoverComponent.html":{}}}],["alarm.key",{"_index":417,"title":{},"body":{"classes/Alarms.html":{},"components/SettingsPopoverComponent.html":{}}}],["alarm.value",{"_index":440,"title":{},"body":{"classes/Alarms.html":{},"components/SettingsPopoverComponent.html":{}}}],["alarm?.nextindex",{"_index":466,"title":{},"body":{"classes/Alarms.html":{}}}],["alarm_invalid",{"_index":1349,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["alarm_update",{"_index":1350,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["alarm_update_error",{"_index":1351,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["alarma",{"_index":396,"title":{},"body":{"classes/Alarms.html":{}}}],["alarmdate",{"_index":949,"title":{},"body":{"injectables/NotificationService.html":{}}}],["alarmidx",{"_index":311,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{}}}],["alarms",{"_index":78,"title":{"classes/Alarms.html":{}},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alarms(alarms",{"_index":291,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{}}}],["alarms(this.alarmservice.alarms",{"_index":1082,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alarms.foreach(alarm",{"_index":414,"title":{},"body":{"classes/Alarms.html":{}}}],["alarmservice",{"_index":208,"title":{"injectables/AlarmService.html":{}},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["alarmsidx",{"_index":214,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{}}}],["alarmstmp",{"_index":326,"title":{},"body":{"injectables/AlarmService.html":{}}}],["alarmstmp.push(end",{"_index":336,"title":{},"body":{"injectables/AlarmService.html":{}}}],["alarmstmp.push(start",{"_index":332,"title":{},"body":{"injectables/AlarmService.html":{}}}],["alarmtmp",{"_index":415,"title":{},"body":{"classes/Alarms.html":{}}}],["alarmtmp.duration",{"_index":459,"title":{},"body":{"classes/Alarms.html":{}}}],["alarmtmp.index",{"_index":481,"title":{},"body":{"classes/Alarms.html":{}}}],["alarmtmpindex",{"_index":1079,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alarmtmpvalue",{"_index":1078,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["alarmvalue",{"_index":1004,"title":{},"body":{"classes/Settings.html":{}}}],["alert",{"_index":521,"title":{},"body":{"injectables/AlertService.html":{},"components/SettingsPopoverComponent.html":{}}}],["alert.present",{"_index":535,"title":{},"body":{"injectables/AlertService.html":{}}}],["alertcontroller",{"_index":489,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["alertservice",{"_index":487,"title":{"injectables/AlertService.html":{}},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["align",{"_index":770,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["alla",{"_index":1014,"title":{},"body":{"classes/Settings.html":{}}}],["allarmi",{"_index":365,"title":{},"body":{"injectables/AlarmService.html":{}}}],["already",{"_index":1027,"title":{},"body":{"classes/Settings.html":{},"miscellaneous/variables.html":{}}}],["altri",{"_index":747,"title":{},"body":{"components/HomePage.html":{}}}],["angular/common",{"_index":855,"title":{},"body":{"modules/HomePageModule.html":{},"dependencies.html":{}}}],["angular/compiler/src/output/output_ast",{"_index":681,"title":{},"body":{"components/HomePage.html":{}}}],["angular/core",{"_index":21,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolve.html":{},"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":406,"title":{},"body":{"classes/Alarms.html":{},"modules/HomePageModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":588,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":591,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolve.html":{},"dependencies.html":{}}}],["another",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["any,canceltext",{"_index":536,"title":{},"body":{"injectables/AlertService.html":{}}}],["any,oktext",{"_index":537,"title":{},"body":{"injectables/AlertService.html":{}}}],["app",{"_index":550,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["app.component",{"_index":594,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":554,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":552,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":541,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appcontainer",{"_index":794,"title":{},"body":{"components/HomePage.html":{}}}],["application",{"_index":753,"title":{},"body":{"components/HomePage.html":{}}}],["appmodule",{"_index":573,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":580,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["around",{"_index":801,"title":{},"body":{"components/HomePage.html":{}}}],["array",{"_index":292,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["async",{"_index":9,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["automatically",{"_index":132,"title":{},"body":{"classes/Alarm.html":{}}}],["automaticcaly",{"_index":73,"title":{},"body":{"classes/Alarm.html":{}}}],["available",{"_index":1444,"title":{},"body":{"modules.html":{}}}],["avviato",{"_index":744,"title":{},"body":{"components/HomePage.html":{}}}],["await",{"_index":522,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["axcepted",{"_index":401,"title":{},"body":{"classes/Alarms.html":{}}}],["b",{"_index":472,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["b.index",{"_index":474,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["background",{"_index":826,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["banner",{"_index":10,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["banneradoptions",{"_index":24,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["banneradpluginevents",{"_index":25,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["banneradposition",{"_index":26,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["banneradposition.bottom_center",{"_index":53,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["banneradsize",{"_index":27,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["banneradsize.banner",{"_index":51,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["bar",{"_index":1408,"title":{},"body":{"dependencies.html":{}}}],["begin",{"_index":144,"title":{},"body":{"classes/Alarm.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["between",{"_index":1152,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{}}}],["blanktime",{"_index":900,"title":{},"body":{"interfaces/ITimer.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["boolean",{"_index":103,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"interfaces/IAlarm.html":{},"interfaces/IPickerColumnOption.html":{},"interfaces/IReturnMsg.html":{},"interfaces/IStatus.html":{},"interfaces/ITimer.html":{},"classes/Settings.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["bootstrap",{"_index":585,"title":{},"body":{"modules/AppModule.html":{}}}],["browse",{"_index":1442,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":589,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":587,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":847,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["buttons",{"_index":524,"title":{},"body":{"injectables/AlertService.html":{},"components/SettingsPopoverComponent.html":{}}}],["buttonscontainer",{"_index":1147,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["calc",{"_index":1281,"title":{},"body":{"injectables/TimerService.html":{}}}],["calcdiff",{"_index":1274,"title":{},"body":{"injectables/TimerService.html":{}}}],["calcel",{"_index":1048,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["calcoli",{"_index":720,"title":{},"body":{"components/HomePage.html":{}}}],["call",{"_index":120,"title":{},"body":{"classes/Alarm.html":{}}}],["cancel",{"_index":526,"title":{},"body":{"injectables/AlertService.html":{},"components/SettingsPopoverComponent.html":{}}}],["canceltext",{"_index":497,"title":{},"body":{"injectables/AlertService.html":{}}}],["capacitor",{"_index":28,"title":{},"body":{"injectables/AdvertisementService.html":{},"dependencies.html":{}}}],["capacitor/android",{"_index":1400,"title":{},"body":{"dependencies.html":{}}}],["capacitor/app",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":941,"title":{},"body":{"injectables/NotificationService.html":{},"dependencies.html":{}}}],["capacitor/haptics",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["capacitor/keyboard",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["capacitor/local",{"_index":943,"title":{},"body":{"injectables/NotificationService.html":{},"dependencies.html":{}}}],["capacitor/status",{"_index":1407,"title":{},"body":{"dependencies.html":{}}}],["capacitor/storage",{"_index":1187,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["capire",{"_index":357,"title":{},"body":{"injectables/AlarmService.html":{}}}],["caso",{"_index":739,"title":{},"body":{"components/HomePage.html":{}}}],["center",{"_index":771,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["change",{"_index":46,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["check",{"_index":227,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"classes/Settings.html":{}}}],["checkalarm",{"_index":371,"title":{},"body":{"classes/Alarms.html":{}}}],["checkalarm(alarm",{"_index":382,"title":{},"body":{"classes/Alarms.html":{}}}],["checkbox",{"_index":1159,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["checkforalarm",{"_index":212,"title":{},"body":{"injectables/AlarmService.html":{}}}],["checkforalarm(counter",{"_index":225,"title":{},"body":{"injectables/AlarmService.html":{}}}],["ci",{"_index":745,"title":{},"body":{"components/HomePage.html":{}}}],["class",{"_index":33,"title":{"classes/Alarm.html":{},"classes/Alarms.html":{},"classes/Options.html":{},"classes/Settings.html":{},"classes/TimeList.html":{},"classes/Timer.html":{}},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolve.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["classe",{"_index":264,"title":{},"body":{"injectables/AlarmService.html":{}}}],["classes",{"_index":63,"title":{},"body":{"classes/Alarm.html":{},"classes/Alarms.html":{},"classes/Options.html":{},"classes/Settings.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"overview.html":{}}}],["classes/alarm",{"_index":1006,"title":{},"body":{"classes/Settings.html":{}}}],["classes/timer",{"_index":892,"title":{},"body":{"interfaces/IStatus.html":{}}}],["clear",{"_index":372,"title":{},"body":{"classes/Alarms.html":{}}}],["clearinterval(this._timer.started",{"_index":1324,"title":{},"body":{"injectables/TimerService.html":{}}}],["click",{"_index":656,"title":{},"body":{"components/HomePage.html":{},"index.html":{}}}],["clickcounter",{"_index":735,"title":{},"body":{"components/HomePage.html":{},"interfaces/IStatus.html":{}}}],["clockrunning",{"_index":1275,"title":{},"body":{"injectables/TimerService.html":{}}}],["cluster_appmodule",{"_index":576,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":578,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":579,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":577,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_homepagemodule",{"_index":849,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_declarations",{"_index":850,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_imports",{"_index":851,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepageroutingmodule",{"_index":858,"title":{},"body":{"modules/HomePageRoutingModule.html":{},"overview.html":{}}}],["cluster_homepageroutingmodule_providers",{"_index":859,"title":{},"body":{"modules/HomePageRoutingModule.html":{},"overview.html":{}}}],["cmq",{"_index":743,"title":{},"body":{"components/HomePage.html":{}}}],["codes",{"_index":506,"title":{},"body":{"injectables/AlertService.html":{}}}],["color",{"_index":787,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["column",{"_index":797,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["columns",{"_index":1116,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["common/labels",{"_index":1005,"title":{},"body":{"classes/Settings.html":{}}}],["common/utility",{"_index":976,"title":{},"body":{"classes/Options.html":{}}}],["commonmodule",{"_index":854,"title":{},"body":{"modules/HomePageModule.html":{}}}],["community/admob",{"_index":29,"title":{},"body":{"injectables/AdvertisementService.html":{},"dependencies.html":{}}}],["component",{"_index":540,"title":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":561,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["components",{"_index":542,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"overview.html":{}}}],["console.log(\"adding",{"_index":426,"title":{},"body":{"classes/Alarms.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{}}}],["console.log(\"alarm",{"_index":413,"title":{},"body":{"classes/Alarms.html":{}}}],["console.log(\"alarms",{"_index":273,"title":{},"body":{"injectables/AlarmService.html":{}}}],["console.log(\"cancel",{"_index":1084,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(\"click",{"_index":725,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(\"converting",{"_index":1226,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(\"current",{"_index":303,"title":{},"body":{"injectables/AlarmService.html":{}}}],["console.log(\"initializing",{"_index":1080,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(\"jhkj",{"_index":977,"title":{},"body":{"classes/Options.html":{}}}],["console.log(\"pushing",{"_index":309,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{}}}],["console.log(\"resetting",{"_index":726,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(\"retrieved",{"_index":1211,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(\"retrieving",{"_index":1206,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(\"saving",{"_index":731,"title":{},"body":{"components/HomePage.html":{},"injectables/StorageService.html":{}}}],["console.log(\"scheduled",{"_index":302,"title":{},"body":{"injectables/AlarmService.html":{}}}],["console.log(\"selected",{"_index":1100,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(\"start",{"_index":1311,"title":{},"body":{"injectables/TimerService.html":{}}}],["console.log(\"subscribing",{"_index":728,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(\"temporary",{"_index":1107,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(\"timer",{"_index":1307,"title":{},"body":{"injectables/TimerService.html":{}}}],["console.log(\"updating",{"_index":435,"title":{},"body":{"classes/Alarms.html":{}}}],["console.log('canceled",{"_index":714,"title":{},"body":{"components/HomePage.html":{}}}],["console.log('confirmed",{"_index":711,"title":{},"body":{"components/HomePage.html":{}}}],["console.log('default",{"_index":337,"title":{},"body":{"injectables/AlarmService.html":{}}}],["console.log('loading",{"_index":324,"title":{},"body":{"injectables/AlarmService.html":{}}}],["console.log('ondiddismiss",{"_index":764,"title":{},"body":{"components/HomePage.html":{}}}],["console.log('platform",{"_index":880,"title":{},"body":{"guards/HomeResolve.html":{}}}],["console.log('saved",{"_index":1221,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log('status",{"_index":696,"title":{},"body":{"components/HomePage.html":{}}}],["console.log('timelist",{"_index":701,"title":{},"body":{"components/HomePage.html":{}}}],["console.log('updating",{"_index":197,"title":{},"body":{"classes/Alarm.html":{}}}],["console.log(msg",{"_index":1024,"title":{},"body":{"classes/Settings.html":{}}}],["console.log(p",{"_index":759,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(pause",{"_index":1022,"title":{},"body":{"classes/Settings.html":{}}}],["console.log(res",{"_index":430,"title":{},"body":{"classes/Alarms.html":{}}}],["console.log(res.msg",{"_index":1092,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(response",{"_index":1114,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(response.msg",{"_index":1137,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(this._alarms",{"_index":1083,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["console.log(this.alarms",{"_index":1086,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["const",{"_index":47,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"modules/AppRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"injectables/StorageService.html":{}}}],["constructor",{"_index":12,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolve.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["constructor(alarms",{"_index":377,"title":{},"body":{"classes/Alarms.html":{}}}],["constructor(alertcontroller",{"_index":493,"title":{},"body":{"injectables/AlertService.html":{}}}],["constructor(platform",{"_index":867,"title":{},"body":{"guards/HomeResolve.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["constructor(popovercontroller",{"_index":1043,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["constructor(private",{"_index":557,"title":{},"body":{"components/AppComponent.html":{},"injectables/StorageService.html":{}}}],["constructor(public",{"_index":518,"title":{},"body":{"injectables/AlertService.html":{},"injectables/NotificationService.html":{}}}],["constructor(route",{"_index":642,"title":{},"body":{"components/HomePage.html":{}}}],["constructor(storageservice",{"_index":217,"title":{},"body":{"injectables/AlarmService.html":{},"components/AppComponent.html":{}}}],["constructor(toastcontroller",{"_index":916,"title":{},"body":{"injectables/NotificationService.html":{}}}],["constructor(value",{"_index":102,"title":{},"body":{"classes/Alarm.html":{}}}],["container",{"_index":769,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["contains",{"_index":998,"title":{},"body":{"classes/Settings.html":{}}}],["content",{"_index":799,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["context",{"_index":1392,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":532,"title":{},"body":{"injectables/AlertService.html":{}}}],["controllare",{"_index":737,"title":{},"body":{"components/HomePage.html":{}}}],["convert",{"_index":117,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/functions.html":{}}}],["converto",{"_index":1197,"title":{},"body":{"injectables/StorageService.html":{}}}],["convertstr2date",{"_index":1166,"title":{},"body":{"injectables/StorageService.html":{}}}],["convertstr2date(datestr",{"_index":1173,"title":{},"body":{"injectables/StorageService.html":{}}}],["convrteddate",{"_index":1229,"title":{},"body":{"injectables/StorageService.html":{}}}],["cordova",{"_index":1410,"title":{},"body":{"dependencies.html":{}}}],["counter",{"_index":232,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{}}}],["coverage",{"_index":1337,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":350,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{}}}],["createalarm",{"_index":351,"title":{},"body":{"injectables/AlarmService.html":{}}}],["cssclass",{"_index":528,"title":{},"body":{"injectables/AlertService.html":{},"components/SettingsPopoverComponent.html":{}}}],["current",{"_index":163,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{}}}],["current.gethours",{"_index":281,"title":{},"body":{"injectables/AlarmService.html":{}}}],["current.getminutes",{"_index":283,"title":{},"body":{"injectables/AlarmService.html":{}}}],["current_hh",{"_index":181,"title":{},"body":{"classes/Alarm.html":{}}}],["current_mm",{"_index":179,"title":{},"body":{"classes/Alarm.html":{}}}],["currentalarmidx",{"_index":465,"title":{},"body":{"classes/Alarms.html":{}}}],["currenttime",{"_index":294,"title":{},"body":{"injectables/AlarmService.html":{}}}],["currenttimeindex",{"_index":216,"title":{},"body":{"injectables/AlarmService.html":{}}}],["custom",{"_index":1130,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["custompickeroptions",{"_index":1077,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["da",{"_index":260,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{}}}],["data",{"_index":1178,"title":{},"body":{"injectables/StorageService.html":{}}}],["date",{"_index":280,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["date(timer.timebegan",{"_index":1335,"title":{},"body":{"injectables/TimerService.html":{}}}],["date(timer.timestopped",{"_index":1334,"title":{},"body":{"injectables/TimerService.html":{}}}],["date(today.getfullyear",{"_index":950,"title":{},"body":{"injectables/NotificationService.html":{}}}],["date2id",{"_index":911,"title":{},"body":{"injectables/NotificationService.html":{}}}],["dateformat",{"_index":1423,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dateidx",{"_index":287,"title":{},"body":{"injectables/AlarmService.html":{}}}],["datestr",{"_index":284,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/StorageService.html":{}}}],["datestr.length",{"_index":1228,"title":{},"body":{"injectables/StorageService.html":{}}}],["day",{"_index":231,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["days",{"_index":986,"title":{},"body":{"classes/Options.html":{}}}],["declarations",{"_index":583,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["decoration",{"_index":789,"title":{},"body":{"components/HomePage.html":{}}}],["default",{"_index":109,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["default_val",{"_index":407,"title":{},"body":{"classes/Alarms.html":{}}}],["default_val.start",{"_index":331,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{}}}],["default_val.stop",{"_index":335,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{}}}],["defaultalarms",{"_index":323,"title":{},"body":{"injectables/AlarmService.html":{}}}],["defer",{"_index":1188,"title":{},"body":{"injectables/StorageService.html":{}}}],["defined",{"_index":13,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolve.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["degli",{"_index":364,"title":{},"body":{"injectables/AlarmService.html":{}}}],["del",{"_index":718,"title":{},"body":{"components/HomePage.html":{}}}],["delay",{"_index":928,"title":{},"body":{"injectables/NotificationService.html":{}}}],["delayed",{"_index":929,"title":{},"body":{"injectables/NotificationService.html":{}}}],["delete",{"_index":373,"title":{},"body":{"classes/Alarms.html":{},"components/SettingsPopoverComponent.html":{}}}],["delete(alarm",{"_index":388,"title":{},"body":{"classes/Alarms.html":{}}}],["deleted",{"_index":449,"title":{},"body":{"classes/Alarms.html":{}}}],["deletelocalnotification",{"_index":912,"title":{},"body":{"injectables/NotificationService.html":{}}}],["deletepause",{"_index":1038,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["deletepause(alarm",{"_index":1051,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["dentro",{"_index":360,"title":{},"body":{"injectables/AlarmService.html":{}}}],["dependencies",{"_index":575,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":65,"title":{},"body":{"classes/Alarm.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["deve",{"_index":258,"title":{},"body":{"injectables/AlarmService.html":{},"components/SettingsPopoverComponent.html":{}}}],["device",{"_index":1179,"title":{},"body":{"injectables/StorageService.html":{}}}],["di",{"_index":1126,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["diff",{"_index":189,"title":{},"body":{"classes/Alarm.html":{},"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"classes/TimeList.html":{},"classes/Timer.html":{}}}],["difference",{"_index":1282,"title":{},"body":{"injectables/TimerService.html":{}}}],["different",{"_index":77,"title":{},"body":{"classes/Alarm.html":{}}}],["differente",{"_index":355,"title":{},"body":{"injectables/AlarmService.html":{}}}],["diffms",{"_index":895,"title":{},"body":{"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"classes/TimeList.html":{},"classes/Timer.html":{}}}],["digit",{"_index":139,"title":{},"body":{"classes/Alarm.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["digits",{"_index":1435,"title":{},"body":{"miscellaneous/functions.html":{}}}],["direction",{"_index":796,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["directive",{"_index":560,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["directives",{"_index":570,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["disabled",{"_index":888,"title":{},"body":{"interfaces/IPickerColumnOption.html":{}}}],["dismiss",{"_index":1054,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["dismissclick",{"_index":1039,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["display",{"_index":510,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["diventare",{"_index":347,"title":{},"body":{"injectables/AlarmService.html":{}}}],["documentation",{"_index":1338,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":545,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["duration",{"_index":93,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"interfaces/IAlarm.html":{},"interfaces/IPickerColumnOption.html":{},"components/SettingsPopoverComponent.html":{}}}],["duration[0",{"_index":186,"title":{},"body":{"classes/Alarm.html":{}}}],["duration[1",{"_index":184,"title":{},"body":{"classes/Alarm.html":{}}}],["dynamic",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":265,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"classes/Settings.html":{}}}],["early",{"_index":229,"title":{},"body":{"injectables/AlarmService.html":{}}}],["echotimer",{"_index":766,"title":{},"body":{"components/HomePage.html":{}}}],["element",{"_index":455,"title":{},"body":{"classes/Alarms.html":{},"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{}}}],["enabled",{"_index":1020,"title":{},"body":{"classes/Settings.html":{}}}],["end",{"_index":298,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/TimerService.html":{}}}],["endregion",{"_index":289,"title":{},"body":{"injectables/AlarmService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["enter",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enter_exceed_out",{"_index":1352,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enter_exceed_pause",{"_index":1353,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["entrycomponents",{"_index":596,"title":{},"body":{"modules/AppModule.html":{}}}],["enumerations",{"_index":1422,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1389,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":507,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"injectables/StorageService.html":{}}}],["error",{"_index":508,"title":{},"body":{"injectables/AlertService.html":{},"miscellaneous/variables.html":{}}}],["essere",{"_index":1123,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["event",{"_index":42,"title":{},"body":{"injectables/AdvertisementService.html":{},"components/HomePage.html":{}}}],["ex",{"_index":81,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"miscellaneous/functions.html":{}}}],["example",{"_index":127,"title":{},"body":{"classes/Alarm.html":{}}}],["exceeds",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existing",{"_index":385,"title":{},"body":{"classes/Alarms.html":{},"components/SettingsPopoverComponent.html":{}}}],["existingalarm",{"_index":478,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["existingalarm.length",{"_index":482,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["exists",{"_index":1028,"title":{},"body":{"classes/Settings.html":{},"miscellaneous/variables.html":{}}}],["exit",{"_index":752,"title":{},"body":{"components/HomePage.html":{}}}],["export",{"_index":32,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolve.html":{},"interfaces/IAlarm.html":{},"interfaces/IPickerColumnOption.html":{},"interfaces/IReturnMsg.html":{},"interfaces/IStatus.html":{},"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["exports",{"_index":617,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["fabcontainer",{"_index":841,"title":{},"body":{"components/HomePage.html":{}}}],["false",{"_index":301,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["fare",{"_index":259,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{}}}],["fetch",{"_index":1207,"title":{},"body":{"injectables/StorageService.html":{}}}],["fff",{"_index":1144,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolve.html":{},"interfaces/IAlarm.html":{},"interfaces/IPickerColumnOption.html":{},"interfaces/IReturnMsg.html":{},"interfaces/IStatus.html":{},"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["finctions_____________________________",{"_index":1310,"title":{},"body":{"injectables/TimerService.html":{}}}],["fine",{"_index":1015,"title":{},"body":{"classes/Settings.html":{}}}],["flex",{"_index":795,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["follow",{"_index":485,"title":{},"body":{"classes/Alarms.html":{}}}],["follows",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["font",{"_index":780,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["for(let",{"_index":207,"title":{},"body":{"classes/Alarm.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["format",{"_index":122,"title":{},"body":{"classes/Alarm.html":{}}}],["formsmodule",{"_index":856,"title":{},"body":{"modules/HomePageModule.html":{}}}],["found",{"_index":308,"title":{},"body":{"injectables/AlarmService.html":{},"miscellaneous/variables.html":{}}}],["fri",{"_index":991,"title":{},"body":{"classes/Options.html":{}}}],["full",{"_index":614,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":650,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["functions",{"_index":1432,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fuori",{"_index":361,"title":{},"body":{"injectables/AlarmService.html":{}}}],["generated",{"_index":74,"title":{},"body":{"classes/Alarm.html":{}}}],["gestire",{"_index":717,"title":{},"body":{"components/HomePage.html":{}}}],["gestre",{"_index":367,"title":{},"body":{"injectables/AlarmService.html":{}}}],["getalarms",{"_index":238,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/SettingsPopoverComponent.html":{}}}],["getalarmsidx",{"_index":242,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{}}}],["getcurrenttimeindex",{"_index":246,"title":{},"body":{"injectables/AlarmService.html":{}}}],["getdelayedtime",{"_index":913,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getdelayedtime(seconds",{"_index":926,"title":{},"body":{"injectables/NotificationService.html":{}}}],["gethour",{"_index":154,"title":{},"body":{"classes/Alarm.html":{}}}],["gethouridx",{"_index":958,"title":{},"body":{"classes/Options.html":{}}}],["gethouridx(hour",{"_index":966,"title":{},"body":{"classes/Options.html":{}}}],["gethours",{"_index":972,"title":{},"body":{"classes/Options.html":{}}}],["gethousoptions",{"_index":959,"title":{},"body":{"classes/Options.html":{}}}],["getindex",{"_index":152,"title":{},"body":{"classes/Alarm.html":{}}}],["getlastalarm",{"_index":244,"title":{},"body":{"injectables/AlarmService.html":{}}}],["getminuteidx",{"_index":960,"title":{},"body":{"classes/Options.html":{}}}],["getminuteidx(minute",{"_index":969,"title":{},"body":{"classes/Options.html":{}}}],["getminutes",{"_index":157,"title":{},"body":{"classes/Alarm.html":{},"classes/Options.html":{}}}],["getminutesoptions",{"_index":961,"title":{},"body":{"classes/Options.html":{}}}],["getnextindex",{"_index":160,"title":{},"body":{"classes/Alarm.html":{}}}],["getpending",{"_index":914,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getrunning",{"_index":1293,"title":{},"body":{"injectables/TimerService.html":{}}}],["getstartedtimes",{"_index":1276,"title":{},"body":{"injectables/TimerService.html":{}}}],["getstoppedtimes",{"_index":1277,"title":{},"body":{"injectables/TimerService.html":{}}}],["getstoredalarm",{"_index":1167,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstoredalarms",{"_index":320,"title":{},"body":{"injectables/AlarmService.html":{}}}],["getstoreddata",{"_index":1168,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstoreddata(key",{"_index":1176,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstoredstatus",{"_index":1169,"title":{},"body":{"injectables/StorageService.html":{}}}],["gettime",{"_index":1295,"title":{},"body":{"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["gettime(maxval",{"_index":1434,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gettimelist",{"_index":1297,"title":{},"body":{"injectables/TimerService.html":{}}}],["getting",{"_index":1438,"title":{"index.html":{}},"body":{}}],["getvalue",{"_index":146,"title":{},"body":{"classes/Alarm.html":{}}}],["graph",{"_index":1443,"title":{},"body":{"modules.html":{}}}],["greenyellow",{"_index":1157,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["grow",{"_index":831,"title":{},"body":{"components/HomePage.html":{}}}],["guard",{"_index":864,"title":{"guards/HomeResolve.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":865,"title":{},"body":{"guards/HomeResolve.html":{}}}],["handler",{"_index":530,"title":{},"body":{"injectables/AlertService.html":{}}}],["handler:(value",{"_index":1099,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["header",{"_index":500,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{}}}],["height",{"_index":783,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["here",{"_index":1439,"title":{},"body":{"index.html":{}}}],["hh",{"_index":945,"title":{},"body":{"injectables/NotificationService.html":{}}}],["hh:mm",{"_index":72,"title":{},"body":{"classes/Alarm.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"miscellaneous/enumerations.html":{}}}],["hh:mm:ss",{"_index":1431,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hidden",{"_index":833,"title":{},"body":{"components/HomePage.html":{}}}],["history",{"_index":620,"title":{},"body":{"components/HistoryComponent.html":{},"components/HomePage.html":{}}}],["history'},{'name",{"_index":564,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["history.component.html",{"_index":622,"title":{},"body":{"components/HistoryComponent.html":{}}}],["history.component.scss",{"_index":621,"title":{},"body":{"components/HistoryComponent.html":{}}}],["historycomponent",{"_index":563,"title":{"components/HistoryComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["home",{"_index":607,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["home'},{'name",{"_index":566,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["home.page",{"_index":857,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home.page.html",{"_index":629,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":628,"title":{},"body":{"components/HomePage.html":{}}}],["home.resolve",{"_index":862,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["homepage",{"_index":565,"title":{"components/HomePage.html":{}},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homepagemodule",{"_index":848,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules.html":{},"overview.html":{}}}],["homepageroutingmodule",{"_index":852,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["homeresolve",{"_index":861,"title":{"guards/HomeResolve.html":{}},"body":{"modules/HomePageRoutingModule.html":{},"guards/HomeResolve.html":{},"coverage.html":{}}}],["honeydew",{"_index":1158,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["hour",{"_index":99,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"components/HomePage.html":{},"classes/Options.html":{}}}],["hourminute",{"_index":1429,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hourminuteseconds",{"_index":1430,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hours",{"_index":306,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Options.html":{}}}],["hours_options",{"_index":956,"title":{},"body":{"classes/Options.html":{}}}],["html",{"_index":559,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["ialarm",{"_index":87,"title":{"interfaces/IAlarm.html":{}},"body":{"classes/Alarm.html":{},"interfaces/IAlarm.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["icon",{"_index":792,"title":{},"body":{"components/HomePage.html":{}}}],["identified",{"_index":66,"title":{},"body":{"classes/Alarm.html":{}}}],["identifier",{"_index":1339,"title":{},"body":{"coverage.html":{}}}],["idex",{"_index":67,"title":{},"body":{"classes/Alarm.html":{}}}],["idx",{"_index":342,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["idx2",{"_index":452,"title":{},"body":{"classes/Alarms.html":{}}}],["if(currentidx",{"_index":486,"title":{},"body":{"classes/Alarms.html":{}}}],["if(this._timer.running",{"_index":1312,"title":{},"body":{"injectables/TimerService.html":{}}}],["il",{"_index":362,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{}}}],["implements",{"_index":86,"title":{},"body":{"classes/Alarm.html":{},"components/HistoryComponent.html":{},"guards/HomeResolve.html":{},"components/SettingsPopoverComponent.html":{},"classes/TimeList.html":{},"classes/Timer.html":{}}}],["import",{"_index":20,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolve.html":{},"interfaces/IStatus.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["import('./pages/home/home.module').then",{"_index":609,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":584,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["increment",{"_index":666,"title":{},"body":{"components/HomePage.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolve.html":{},"interfaces/IAlarm.html":{},"interfaces/IPickerColumnOption.html":{},"interfaces/IReturnMsg.html":{},"interfaces/IStatus.html":{},"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index2time",{"_index":1363,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["index2time(time",{"_index":1437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["index_out_of_range",{"_index":1354,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolve.html":{},"interfaces/IAlarm.html":{},"interfaces/IPickerColumnOption.html":{},"interfaces/IReturnMsg.html":{},"interfaces/IStatus.html":{},"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["initialize",{"_index":11,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["initializefortesting",{"_index":39,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"guards/HomeResolve.html":{},"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"overview.html":{}}}],["inner",{"_index":1150,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["input",{"_index":1070,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["insert",{"_index":1106,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["insert/add",{"_index":349,"title":{},"body":{"injectables/AlarmService.html":{}}}],["install",{"_index":1412,"title":{},"body":{"dependencies.html":{}}}],["instantiated",{"_index":222,"title":{},"body":{"injectables/AlarmService.html":{}}}],["interface",{"_index":883,"title":{"interfaces/IAlarm.html":{},"interfaces/IPickerColumnOption.html":{},"interfaces/IReturnMsg.html":{},"interfaces/IStatus.html":{},"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{}},"body":{"interfaces/IAlarm.html":{},"interfaces/IPickerColumnOption.html":{},"interfaces/IReturnMsg.html":{},"interfaces/IStatus.html":{},"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"coverage.html":{}}}],["interfaces",{"_index":884,"title":{},"body":{"interfaces/IAlarm.html":{},"interfaces/IPickerColumnOption.html":{},"interfaces/IReturnMsg.html":{},"interfaces/IStatus.html":{},"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"overview.html":{}}}],["interfaces/ialarm",{"_index":165,"title":{},"body":{"classes/Alarm.html":{}}}],["interfaces/ipickeroption",{"_index":975,"title":{},"body":{"classes/Options.html":{}}}],["interfaces/ireturnmsg",{"_index":412,"title":{},"body":{"classes/Alarms.html":{}}}],["interfaces/itimelist",{"_index":1238,"title":{},"body":{"classes/TimeList.html":{}}}],["interfaces/itimer",{"_index":1261,"title":{},"body":{"classes/Timer.html":{}}}],["ion",{"_index":791,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["ionic/angular",{"_index":517,"title":{},"body":{"injectables/AlertService.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"guards/HomeResolve.html":{},"injectables/NotificationService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"dependencies.html":{}}}],["ionic/core",{"_index":1072,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["ionicmodule",{"_index":592,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["ionicmodule.forroot",{"_index":597,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":593,"title":{},"body":{"modules/AppModule.html":{}}}],["ipickercolumnoption",{"_index":886,"title":{"interfaces/IPickerColumnOption.html":{}},"body":{"interfaces/IPickerColumnOption.html":{},"classes/Options.html":{},"coverage.html":{}}}],["ireturnmsg",{"_index":233,"title":{"interfaces/IReturnMsg.html":{}},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"interfaces/IReturnMsg.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["ispause",{"_index":94,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"interfaces/IAlarm.html":{}}}],["isrunning",{"_index":734,"title":{},"body":{"components/HomePage.html":{},"interfaces/IStatus.html":{}}}],["istatus",{"_index":671,"title":{"interfaces/IStatus.html":{}},"body":{"components/HomePage.html":{},"guards/HomeResolve.html":{},"interfaces/IStatus.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["istesting",{"_index":56,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["istimeractive",{"_index":1278,"title":{},"body":{"injectables/TimerService.html":{}}}],["item",{"_index":1143,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["items",{"_index":804,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["itermediario",{"_index":261,"title":{},"body":{"injectables/AlarmService.html":{}}}],["itimelist",{"_index":893,"title":{"interfaces/ITimeList.html":{}},"body":{"interfaces/ITimeList.html":{},"classes/TimeList.html":{},"coverage.html":{}}}],["itimer",{"_index":898,"title":{"interfaces/ITimer.html":{}},"body":{"interfaces/ITimer.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["itself",{"_index":391,"title":{},"body":{"classes/Alarms.html":{}}}],["json.parse(res.value",{"_index":1210,"title":{},"body":{"injectables/StorageService.html":{}}}],["json.stringify(data",{"_index":1220,"title":{},"body":{"injectables/StorageService.html":{}}}],["jsondata",{"_index":1219,"title":{},"body":{"injectables/StorageService.html":{}}}],["justify",{"_index":798,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["key",{"_index":69,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"interfaces/IAlarm.html":{},"classes/Settings.html":{},"injectables/StorageService.html":{}}}],["keys",{"_index":1074,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["keys.alarms",{"_index":1216,"title":{},"body":{"injectables/StorageService.html":{}}}],["keys.status",{"_index":1214,"title":{},"body":{"injectables/StorageService.html":{}}}],["l'alrm",{"_index":257,"title":{},"body":{"injectables/AlarmService.html":{}}}],["l'array",{"_index":1017,"title":{},"body":{"classes/Settings.html":{}}}],["l'elemento",{"_index":1013,"title":{},"body":{"classes/Settings.html":{}}}],["l'indice",{"_index":1124,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["la",{"_index":263,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{}}}],["label",{"_index":1155,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["labels",{"_index":409,"title":{},"body":{"classes/Alarms.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{}}}],["labels.pause",{"_index":456,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{}}}],["labels.start",{"_index":669,"title":{},"body":{"components/HomePage.html":{}}}],["labels.stop",{"_index":708,"title":{},"body":{"components/HomePage.html":{}}}],["lastalarm",{"_index":215,"title":{},"body":{"injectables/AlarmService.html":{}}}],["late",{"_index":228,"title":{},"body":{"injectables/AlarmService.html":{}}}],["le",{"_index":1199,"title":{},"body":{"injectables/StorageService.html":{}}}],["left",{"_index":773,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["legend",{"_index":558,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["line",{"_index":782,"title":{},"body":{"components/HomePage.html":{}}}],["list",{"_index":394,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{}}}],["listener",{"_index":43,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["literal",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ln",{"_index":1227,"title":{},"body":{"injectables/StorageService.html":{}}}],["lo",{"_index":266,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{}}}],["load",{"_index":1093,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["loadchildren",{"_index":608,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadsettings",{"_index":1094,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["local",{"_index":653,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["localnotification",{"_index":939,"title":{},"body":{"injectables/NotificationService.html":{}}}],["localnotifications",{"_index":942,"title":{},"body":{"injectables/NotificationService.html":{}}}],["localnotificationschema",{"_index":936,"title":{},"body":{"injectables/NotificationService.html":{}}}],["lost",{"_index":423,"title":{},"body":{"classes/Alarms.html":{}}}],["m",{"_index":610,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":611,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["manage",{"_index":269,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/AlertService.html":{}}}],["mange",{"_index":751,"title":{},"body":{"components/HomePage.html":{}}}],["margin",{"_index":54,"title":{},"body":{"injectables/AdvertisementService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["matching",{"_index":60,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolve.html":{},"interfaces/IAlarm.html":{},"interfaces/IPickerColumnOption.html":{},"interfaces/IReturnMsg.html":{},"interfaces/IStatus.html":{},"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["maxval",{"_index":1436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["media(min",{"_index":808,"title":{},"body":{"components/HomePage.html":{}}}],["mese",{"_index":721,"title":{},"body":{"components/HomePage.html":{}}}],["message",{"_index":496,"title":{},"body":{"injectables/AlertService.html":{}}}],["messaggi",{"_index":368,"title":{},"body":{"injectables/AlarmService.html":{}}}],["metadata",{"_index":548,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["method",{"_index":319,"title":{},"body":{"injectables/AlarmService.html":{}}}],["methods",{"_index":8,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolve.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["methods____________________________",{"_index":1329,"title":{},"body":{"injectables/TimerService.html":{}}}],["miglirabole",{"_index":340,"title":{},"body":{"injectables/AlarmService.html":{}}}],["min",{"_index":282,"title":{},"body":{"injectables/AlarmService.html":{},"components/SettingsPopoverComponent.html":{}}}],["minute",{"_index":159,"title":{},"body":{"classes/Alarm.html":{},"classes/Options.html":{}}}],["minutes",{"_index":100,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Options.html":{}}}],["minutes_opts",{"_index":957,"title":{},"body":{"classes/Options.html":{}}}],["minuti",{"_index":1127,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["miscellaneous",{"_index":1421,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":946,"title":{},"body":{"injectables/NotificationService.html":{},"miscellaneous/enumerations.html":{}}}],["module",{"_index":572,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}},"body":{}}],["modules",{"_index":574,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mon",{"_index":987,"title":{},"body":{"classes/Options.html":{}}}],["more",{"_index":811,"title":{},"body":{"components/HomePage.html":{}}}],["msg",{"_index":296,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"interfaces/IReturnMsg.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"injectables/StorageService.html":{}}}],["msg.alarm_invalid",{"_index":434,"title":{},"body":{"classes/Alarms.html":{}}}],["msg.alarm_update",{"_index":433,"title":{},"body":{"classes/Alarms.html":{}}}],["msg.pause_exist",{"_index":483,"title":{},"body":{"classes/Alarms.html":{}}}],["msg.pause_out_of_range",{"_index":469,"title":{},"body":{"classes/Alarms.html":{}}}],["msg:'a",{"_index":1026,"title":{},"body":{"classes/Settings.html":{}}}],["msg:'alarm",{"_index":448,"title":{},"body":{"classes/Alarms.html":{}}}],["n",{"_index":447,"title":{},"body":{"classes/Alarms.html":{}}}],["name",{"_index":106,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolve.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["name:'hours",{"_index":1117,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["name:'minutes",{"_index":1122,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["nel",{"_index":741,"title":{},"body":{"components/HomePage.html":{}}}],["nell'array",{"_index":1125,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["new",{"_index":133,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["newstoppedduration",{"_index":1317,"title":{},"body":{"injectables/TimerService.html":{}}}],["newstoppedduration:any",{"_index":1315,"title":{},"body":{"injectables/TimerService.html":{}}}],["nex",{"_index":1003,"title":{},"body":{"classes/Settings.html":{}}}],["next",{"_index":162,"title":{},"body":{"classes/Alarm.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{}}}],["next_hh",{"_index":185,"title":{},"body":{"classes/Alarm.html":{}}}],["next_mm",{"_index":183,"title":{},"body":{"classes/Alarm.html":{}}}],["nextalarmidx",{"_index":463,"title":{},"body":{"classes/Alarms.html":{}}}],["nextindex",{"_index":101,"title":{},"body":{"classes/Alarm.html":{}}}],["nextindexstr",{"_index":190,"title":{},"body":{"classes/Alarm.html":{}}}],["ngmodelgroup",{"_index":405,"title":{},"body":{"classes/Alarms.html":{}}}],["ngmodule",{"_index":586,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["ngoninit",{"_index":623,"title":{},"body":{"components/HistoryComponent.html":{},"components/SettingsPopoverComponent.html":{}}}],["non",{"_index":742,"title":{},"body":{"components/HomePage.html":{}}}],["none",{"_index":790,"title":{},"body":{"components/HomePage.html":{}}}],["not_found",{"_index":1355,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["notification",{"_index":310,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{}}}],["notification/notification.service",{"_index":255,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/TimerService.html":{}}}],["notifications",{"_index":944,"title":{},"body":{"injectables/NotificationService.html":{},"dependencies.html":{}}}],["notificationservice",{"_index":219,"title":{"injectables/NotificationService.html":{}},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["npa",{"_index":57,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["npm",{"_index":1414,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":110,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["num",{"_index":145,"title":{},"body":{"classes/Alarm.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":80,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"interfaces/IAlarm.html":{},"interfaces/IPickerColumnOption.html":{},"interfaces/IStatus.html":{},"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":136,"title":{},"body":{"classes/Alarm.html":{},"classes/Alarms.html":{},"classes/Settings.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":875,"title":{},"body":{"guards/HomeResolve.html":{},"injectables/StorageService.html":{}}}],["observable|promise|any",{"_index":877,"title":{},"body":{"guards/HomeResolve.html":{}}}],["occurred",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offset",{"_index":211,"title":{},"body":{"injectables/AlarmService.html":{}}}],["oggetti",{"_index":1200,"title":{},"body":{"injectables/StorageService.html":{}}}],["ok",{"_index":533,"title":{},"body":{"injectables/AlertService.html":{},"components/SettingsPopoverComponent.html":{}}}],["oktext",{"_index":498,"title":{},"body":{"injectables/AlertService.html":{}}}],["one",{"_index":386,"title":{},"body":{"classes/Alarms.html":{},"components/SettingsPopoverComponent.html":{},"miscellaneous/variables.html":{}}}],["onfabtimerclick",{"_index":636,"title":{},"body":{"components/HomePage.html":{}}}],["oninit",{"_index":619,"title":{},"body":{"components/HistoryComponent.html":{},"components/SettingsPopoverComponent.html":{}}}],["onpause",{"_index":637,"title":{},"body":{"components/HomePage.html":{}}}],["open",{"_index":659,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["optional",{"_index":108,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"guards/HomeResolve.html":{},"interfaces/IAlarm.html":{},"interfaces/IPickerColumnOption.html":{},"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":48,"title":{"classes/Options.html":{}},"body":{"injectables/AdvertisementService.html":{},"classes/Options.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["options.push({text:x",{"_index":994,"title":{},"body":{"classes/Options.html":{}}}],["optionswidth",{"_index":1118,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["order",{"_index":76,"title":{},"body":{"classes/Alarm.html":{}}}],["out",{"_index":305,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"classes/Settings.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["out_exceed_enter",{"_index":1356,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["out_exceed_pause",{"_index":1357,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["over",{"_index":1055,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["overflow",{"_index":832,"title":{},"body":{"components/HomePage.html":{}}}],["overlap",{"_index":467,"title":{},"body":{"classes/Alarms.html":{}}}],["overlapping",{"_index":384,"title":{},"body":{"classes/Alarms.html":{}}}],["overview",{"_index":1445,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":757,"title":{},"body":{"components/HomePage.html":{}}}],["package",{"_index":1396,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":1146,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["param",{"_index":195,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["parameters",{"_index":105,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"guards/HomeResolve.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":768,"title":{},"body":{"components/HomePage.html":{}}}],["pass",{"_index":135,"title":{},"body":{"classes/Alarm.html":{}}}],["passed",{"_index":131,"title":{},"body":{"classes/Alarm.html":{}}}],["passing",{"_index":121,"title":{},"body":{"classes/Alarm.html":{}}}],["path",{"_index":606,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["pathmatch",{"_index":613,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pause",{"_index":454,"title":{},"body":{"classes/Alarms.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pause.index",{"_index":1023,"title":{},"body":{"classes/Settings.html":{}}}],["pause_begin",{"_index":1343,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pause_end",{"_index":1345,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pause_exist",{"_index":1358,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pause_in_range",{"_index":1359,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pause_out_of_range",{"_index":1360,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pause_update",{"_index":1361,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["per",{"_index":356,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{}}}],["picker",{"_index":1109,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["picker.present",{"_index":1132,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["picker_options",{"_index":1036,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["pickerclassname",{"_index":1156,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["pickercontroller",{"_index":1044,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["pickeroptions",{"_index":1071,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["platform",{"_index":633,"title":{},"body":{"components/HomePage.html":{},"guards/HomeResolve.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["platform.pause",{"_index":654,"title":{},"body":{"components/HomePage.html":{}}}],["plugins",{"_index":940,"title":{},"body":{"injectables/NotificationService.html":{}}}],["plus",{"_index":164,"title":{},"body":{"classes/Alarm.html":{}}}],["poi",{"_index":366,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{}}}],["pop",{"_index":661,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["popover",{"_index":569,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["popover.component",{"_index":684,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["popover.component.html",{"_index":1033,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.scss",{"_index":1032,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts",{"_index":1031,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["popover.component.ts:101",{"_index":1052,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:130",{"_index":1053,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:139",{"_index":1061,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:201",{"_index":1059,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:24",{"_index":1064,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:25",{"_index":1065,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:26",{"_index":1066,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:27",{"_index":1045,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:37",{"_index":1068,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:38",{"_index":1067,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:44",{"_index":1056,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:50",{"_index":1069,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:62",{"_index":1047,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:70",{"_index":1057,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:83",{"_index":1063,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.component.ts:92",{"_index":1046,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["popover.ondiddismiss",{"_index":763,"title":{},"body":{"components/HomePage.html":{}}}],["popover.present",{"_index":762,"title":{},"body":{"components/HomePage.html":{}}}],["popover/settings",{"_index":683,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["popovercontroller",{"_index":645,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["position",{"_index":52,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{}}}],["positional",{"_index":341,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{}}}],["precede",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preloadallmodules",{"_index":603,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":616,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["presentconfirm",{"_index":490,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentconfirm(header",{"_index":495,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentconfirmalert",{"_index":491,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentconfirmalert(msg",{"_index":501,"title":{},"body":{"injectables/AlertService.html":{}}}],["presenttoast",{"_index":915,"title":{},"body":{"injectables/NotificationService.html":{}}}],["presenttoast(msg",{"_index":933,"title":{},"body":{"injectables/NotificationService.html":{}}}],["presentwarningalert",{"_index":492,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentwarningalert(msg",{"_index":513,"title":{},"body":{"injectables/AlertService.html":{}}}],["private",{"_index":89,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"guards/HomeResolve.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["production",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":18,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"guards/HomeResolve.html":{},"injectables/StorageService.html":{}}}],["promise((resolve",{"_index":1217,"title":{},"body":{"injectables/StorageService.html":{}}}],["promise(async",{"_index":519,"title":{},"body":{"injectables/AlertService.html":{}}}],["properties",{"_index":88,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"interfaces/IAlarm.html":{},"interfaces/IPickerColumnOption.html":{},"interfaces/IReturnMsg.html":{},"interfaces/IStatus.html":{},"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["provide",{"_index":599,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":30,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["providers",{"_index":598,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["public",{"_index":91,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"guards/HomeResolve.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["push",{"_index":374,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["push(alarm",{"_index":392,"title":{},"body":{"classes/Alarms.html":{}}}],["pushed",{"_index":462,"title":{},"body":{"classes/Alarms.html":{}}}],["pushnotification",{"_index":213,"title":{},"body":{"injectables/AlarmService.html":{}}}],["pushnotification(counter",{"_index":234,"title":{},"body":{"injectables/AlarmService.html":{}}}],["px",{"_index":813,"title":{},"body":{"components/HomePage.html":{}}}],["quot;hh:mm&quot",{"_index":128,"title":{},"body":{"classes/Alarm.html":{}}}],["range",{"_index":363,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{},"miscellaneous/variables.html":{}}}],["ready",{"_index":881,"title":{},"body":{"guards/HomeResolve.html":{}}}],["redirectto",{"_index":612,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["region",{"_index":275,"title":{},"body":{"injectables/AlarmService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["reject",{"_index":1218,"title":{},"body":{"injectables/StorageService.html":{}}}],["reject(msg",{"_index":1224,"title":{},"body":{"injectables/StorageService.html":{}}}],["reload",{"_index":1050,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["reorder",{"_index":375,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["repeat",{"_index":1139,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["requesttrackingauthorization",{"_index":35,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["require",{"_index":1393,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":299,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"guards/HomeResolve.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"dependencies.html":{}}}],["res.succeded",{"_index":431,"title":{},"body":{"classes/Alarms.html":{},"components/HomePage.html":{}}}],["res?.value",{"_index":1209,"title":{},"body":{"injectables/StorageService.html":{}}}],["reset",{"_index":315,"title":{},"body":{"injectables/AlarmService.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/TimerService.html":{},"overview.html":{}}}],["resetbuttoncontainer",{"_index":845,"title":{},"body":{"components/HomePage.html":{}}}],["resetdefault",{"_index":317,"title":{},"body":{"injectables/AlarmService.html":{}}}],["resolve",{"_index":520,"title":{},"body":{"injectables/AlertService.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolve.html":{}}}],["resolve('cancel",{"_index":538,"title":{},"body":{"injectables/AlertService.html":{}}}],["resolve('ok",{"_index":539,"title":{},"body":{"injectables/AlertService.html":{}}}],["resolve(false",{"_index":531,"title":{},"body":{"injectables/AlertService.html":{}}}],["resolve(msg",{"_index":1223,"title":{},"body":{"injectables/StorageService.html":{}}}],["resolve(route",{"_index":870,"title":{},"body":{"guards/HomeResolve.html":{}}}],["resolve(true",{"_index":534,"title":{},"body":{"injectables/AlertService.html":{}}}],["resolved",{"_index":765,"title":{},"body":{"components/HomePage.html":{}}}],["response",{"_index":1111,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["response!.succeded",{"_index":1113,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["response.succeded",{"_index":1138,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["result",{"_index":59,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolve.html":{},"interfaces/IAlarm.html":{},"interfaces/IPickerColumnOption.html":{},"interfaces/IReturnMsg.html":{},"interfaces/IStatus.html":{},"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":61,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolve.html":{},"interfaces/IAlarm.html":{},"interfaces/IPickerColumnOption.html":{},"interfaces/IReturnMsg.html":{},"interfaces/IStatus.html":{},"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieved",{"_index":422,"title":{},"body":{"classes/Alarms.html":{}}}],["retrieving",{"_index":697,"title":{},"body":{"components/HomePage.html":{}}}],["retrived",{"_index":223,"title":{},"body":{"injectables/AlarmService.html":{}}}],["return",{"_index":156,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"guards/HomeResolve.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["returns",{"_index":16,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"guards/HomeResolve.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["rgb(20",{"_index":1141,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["rgba(48",{"_index":834,"title":{},"body":{"components/HomePage.html":{}}}],["rgba(51",{"_index":839,"title":{},"body":{"components/HomePage.html":{}}}],["rgba(66",{"_index":827,"title":{},"body":{"components/HomePage.html":{}}}],["right",{"_index":774,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["riordino",{"_index":1016,"title":{},"body":{"classes/Settings.html":{}}}],["role",{"_index":527,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["root",{"_index":31,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/NotificationService.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["root'},{'name",{"_index":562,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["route",{"_index":647,"title":{},"body":{"components/HomePage.html":{},"guards/HomeResolve.html":{}}}],["router",{"_index":868,"title":{},"body":{"guards/HomeResolve.html":{}}}],["routereusestrategy",{"_index":590,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":604,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":863,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":615,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":873,"title":{},"body":{"guards/HomeResolve.html":{}}}],["routes",{"_index":605,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":595,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["routing.module.ts",{"_index":602,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["row",{"_index":825,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["running",{"_index":740,"title":{},"body":{"components/HomePage.html":{},"interfaces/ITimer.html":{},"injectables/NotificationService.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["rxjs",{"_index":876,"title":{},"body":{"guards/HomeResolve.html":{},"injectables/StorageService.html":{},"dependencies.html":{}}}],["same",{"_index":477,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{},"miscellaneous/variables.html":{}}}],["sart",{"_index":664,"title":{},"body":{"components/HomePage.html":{}}}],["sat",{"_index":992,"title":{},"body":{"classes/Options.html":{}}}],["save",{"_index":79,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["savealarms",{"_index":1170,"title":{},"body":{"injectables/StorageService.html":{}}}],["savealarms(alarms",{"_index":1181,"title":{},"body":{"injectables/StorageService.html":{}}}],["saved",{"_index":70,"title":{},"body":{"classes/Alarm.html":{},"injectables/StorageService.html":{}}}],["savedata",{"_index":1171,"title":{},"body":{"injectables/StorageService.html":{}}}],["savedata(data",{"_index":1183,"title":{},"body":{"injectables/StorageService.html":{}}}],["savestatus",{"_index":638,"title":{},"body":{"components/HomePage.html":{},"injectables/StorageService.html":{}}}],["savestatus(status",{"_index":1185,"title":{},"body":{"injectables/StorageService.html":{}}}],["saving",{"_index":338,"title":{},"body":{"injectables/AlarmService.html":{}}}],["schduled",{"_index":754,"title":{},"body":{"components/HomePage.html":{}}}],["schedulati",{"_index":748,"title":{},"body":{"components/HomePage.html":{}}}],["se",{"_index":358,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{}}}],["secondary",{"_index":529,"title":{},"body":{"injectables/AlertService.html":{}}}],["seconds",{"_index":923,"title":{},"body":{"injectables/NotificationService.html":{}}}],["selected",{"_index":889,"title":{},"body":{"interfaces/IPickerColumnOption.html":{}}}],["selectedindex",{"_index":1119,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["selector",{"_index":549,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["selenium",{"_index":1190,"title":{},"body":{"injectables/StorageService.html":{}}}],["service",{"_index":221,"title":{},"body":{"injectables/AlarmService.html":{}}}],["service/storage/storage.service",{"_index":556,"title":{},"body":{"components/AppComponent.html":{}}}],["set",{"_index":150,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["setalarms(alarms",{"_index":240,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{}}}],["setdefaultalarms",{"_index":376,"title":{},"body":{"classes/Alarms.html":{}}}],["setings",{"_index":660,"title":{},"body":{"components/HomePage.html":{}}}],["setinterval(this.clockrunning.bind(this",{"_index":1320,"title":{},"body":{"injectables/TimerService.html":{}}}],["settimelist(timer",{"_index":1299,"title":{},"body":{"injectables/TimerService.html":{}}}],["setting",{"_index":1081,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"miscellaneous/variables.html":{}}}],["settings",{"_index":568,"title":{"classes/Settings.html":{}},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settingscontainer",{"_index":1140,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["settingspopovercomponent",{"_index":567,"title":{"components/SettingsPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{},"overview.html":{}}}],["setvalue(value",{"_index":148,"title":{},"body":{"classes/Alarm.html":{}}}],["showalarmdurationpicker",{"_index":1040,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["showalarmdurationpicker(alarm",{"_index":1058,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["showalarmpicker",{"_index":1041,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["showalarmpicker(alarm",{"_index":1060,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["showsettings",{"_index":639,"title":{},"body":{"components/HomePage.html":{}}}],["sia",{"_index":738,"title":{},"body":{"components/HomePage.html":{}}}],["siamo",{"_index":359,"title":{},"body":{"injectables/AlarmService.html":{}}}],["size",{"_index":45,"title":{},"body":{"injectables/AdvertisementService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["size:2rem",{"_index":807,"title":{},"body":{"components/HomePage.html":{}}}],["size:3rem",{"_index":814,"title":{},"body":{"components/HomePage.html":{}}}],["size:4rem",{"_index":817,"title":{},"body":{"components/HomePage.html":{}}}],["size:5rem",{"_index":820,"title":{},"body":{"components/HomePage.html":{}}}],["size:7rem",{"_index":823,"title":{},"body":{"components/HomePage.html":{}}}],["soluzione",{"_index":354,"title":{},"body":{"injectables/AlarmService.html":{}}}],["sono",{"_index":746,"title":{},"body":{"components/HomePage.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AdvertisementService.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolve.html":{},"interfaces/IAlarm.html":{},"interfaces/IPickerColumnOption.html":{},"interfaces/IReturnMsg.html":{},"interfaces/IStatus.html":{},"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["space",{"_index":800,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["spec\\.ts",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specified",{"_index":930,"title":{},"body":{"injectables/NotificationService.html":{}}}],["specifying",{"_index":390,"title":{},"body":{"classes/Alarms.html":{}}}],["src/.../default_val.ts",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interfaces.ts",{"_index":1424,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../keys.ts",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../labels.ts",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../msg.ts",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utility.ts",{"_index":1433,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":601,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":547,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":555,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":582,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/common/default_val",{"_index":408,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/common/default_val.ts",{"_index":1341,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/keys",{"_index":1075,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["src/app/common/keys.ts",{"_index":1346,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/labels",{"_index":410,"title":{},"body":{"classes/Alarms.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["src/app/common/labels.ts",{"_index":1347,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/msg",{"_index":411,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/common/msg.ts",{"_index":1348,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/utility",{"_index":251,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/TimerService.html":{}}}],["src/app/common/utility.ts",{"_index":1362,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/history/history/history.component.ts",{"_index":618,"title":{},"body":{"components/HistoryComponent.html":{},"coverage.html":{}}}],["src/app/components/history/history/history.component.ts:12",{"_index":625,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/components/history/history/history.component.ts:8",{"_index":624,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/components/settingspopover/settings",{"_index":682,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/SettingsPopoverComponent.html":{},"coverage.html":{}}}],["src/app/models/classes/alarm",{"_index":252,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["src/app/models/classes/alarm.ts",{"_index":64,"title":{},"body":{"classes/Alarm.html":{},"coverage.html":{}}}],["src/app/models/classes/alarm.ts:104",{"_index":130,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/classes/alarm.ts:133",{"_index":116,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/classes/alarm.ts:14",{"_index":114,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/classes/alarm.ts:145",{"_index":140,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/classes/alarm.ts:15",{"_index":112,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/classes/alarm.ts:16",{"_index":111,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/classes/alarm.ts:18",{"_index":113,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/classes/alarm.ts:19",{"_index":104,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/classes/alarm.ts:36",{"_index":149,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/classes/alarm.ts:41",{"_index":147,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/classes/alarm.ts:45",{"_index":153,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/classes/alarm.ts:53",{"_index":155,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/classes/alarm.ts:62",{"_index":158,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/classes/alarm.ts:72",{"_index":161,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/models/classes/alarms",{"_index":253,"title":{},"body":{"injectables/AlarmService.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["src/app/models/classes/alarms.ts",{"_index":369,"title":{},"body":{"classes/Alarms.html":{},"coverage.html":{}}}],["src/app/models/classes/alarms.ts:105",{"_index":387,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/classes/alarms.ts:116",{"_index":389,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/classes/alarms.ts:12",{"_index":379,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/classes/alarms.ts:13",{"_index":378,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/classes/alarms.ts:148",{"_index":393,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/classes/alarms.ts:173",{"_index":383,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/classes/alarms.ts:196",{"_index":395,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/classes/alarms.ts:217",{"_index":397,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/classes/alarms.ts:27",{"_index":402,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/classes/alarms.ts:31",{"_index":404,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/classes/alarms.ts:35",{"_index":403,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/classes/alarms.ts:47",{"_index":381,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/classes/alarms.ts:66",{"_index":400,"title":{},"body":{"classes/Alarms.html":{}}}],["src/app/models/classes/options",{"_index":1076,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["src/app/models/classes/options.ts",{"_index":953,"title":{},"body":{"classes/Options.html":{},"coverage.html":{}}}],["src/app/models/classes/options.ts:10",{"_index":962,"title":{},"body":{"classes/Options.html":{}}}],["src/app/models/classes/options.ts:28",{"_index":967,"title":{},"body":{"classes/Options.html":{}}}],["src/app/models/classes/options.ts:38",{"_index":970,"title":{},"body":{"classes/Options.html":{}}}],["src/app/models/classes/options.ts:48",{"_index":973,"title":{},"body":{"classes/Options.html":{}}}],["src/app/models/classes/options.ts:56",{"_index":974,"title":{},"body":{"classes/Options.html":{}}}],["src/app/models/classes/options.ts:66",{"_index":968,"title":{},"body":{"classes/Options.html":{}}}],["src/app/models/classes/options.ts:7",{"_index":963,"title":{},"body":{"classes/Options.html":{}}}],["src/app/models/classes/options.ts:74",{"_index":971,"title":{},"body":{"classes/Options.html":{}}}],["src/app/models/classes/options.ts:8",{"_index":965,"title":{},"body":{"classes/Options.html":{}}}],["src/app/models/classes/options.ts:9",{"_index":964,"title":{},"body":{"classes/Options.html":{}}}],["src/app/models/classes/timelist",{"_index":690,"title":{},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{}}}],["src/app/models/classes/timelist.ts",{"_index":1230,"title":{},"body":{"classes/TimeList.html":{},"coverage.html":{}}}],["src/app/models/classes/timelist.ts:12",{"_index":1234,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/classes/timelist.ts:13",{"_index":1235,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/classes/timelist.ts:14",{"_index":1232,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/classes/timelist.ts:15",{"_index":1233,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/classes/timelist.ts:16",{"_index":1236,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/classes/timelist.ts:17",{"_index":1237,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/classes/timelist.ts:3",{"_index":1231,"title":{},"body":{"classes/TimeList.html":{}}}],["src/app/models/classes/timer",{"_index":1301,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/models/classes/timer.ts",{"_index":1245,"title":{},"body":{"classes/Timer.html":{},"coverage.html":{}}}],["src/app/models/classes/timer.ts:23",{"_index":1250,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/models/classes/timer.ts:24",{"_index":1257,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/models/classes/timer.ts:25",{"_index":1258,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/models/classes/timer.ts:26",{"_index":1259,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/models/classes/timer.ts:27",{"_index":1255,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/models/classes/timer.ts:28",{"_index":1252,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/models/classes/timer.ts:29",{"_index":1247,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/models/classes/timer.ts:3",{"_index":1246,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/models/classes/timer.ts:30",{"_index":1256,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/models/classes/timer.ts:31",{"_index":1253,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/models/classes/timer.ts:33",{"_index":1251,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/models/classes/timer.ts:34",{"_index":1254,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/models/classes/timer.ts:35",{"_index":1248,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/models/classes/timer.ts:36",{"_index":1249,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/models/classes/timer.ts:37",{"_index":1260,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/models/interfaces.ts",{"_index":1425,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/interfaces/ialarm",{"_index":1189,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/models/interfaces/ialarm.ts",{"_index":885,"title":{},"body":{"interfaces/IAlarm.html":{},"coverage.html":{}}}],["src/app/models/interfaces/ipickeroption.ts",{"_index":887,"title":{},"body":{"interfaces/IPickerColumnOption.html":{},"coverage.html":{}}}],["src/app/models/interfaces/ireturnmsg",{"_index":254,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["src/app/models/interfaces/ireturnmsg.ts",{"_index":890,"title":{},"body":{"interfaces/IReturnMsg.html":{},"coverage.html":{}}}],["src/app/models/interfaces/istatus",{"_index":685,"title":{},"body":{"components/HomePage.html":{},"guards/HomeResolve.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["src/app/models/interfaces/istatus.ts",{"_index":891,"title":{},"body":{"interfaces/IStatus.html":{},"coverage.html":{}}}],["src/app/models/interfaces/itimelist.ts",{"_index":894,"title":{},"body":{"interfaces/ITimeList.html":{},"coverage.html":{}}}],["src/app/models/interfaces/itimer",{"_index":1302,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/models/interfaces/itimer.ts",{"_index":899,"title":{},"body":{"interfaces/ITimer.html":{},"coverage.html":{}}}],["src/app/models/settings",{"_index":1073,"title":{},"body":{"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["src/app/models/settings.ts",{"_index":997,"title":{},"body":{"classes/Settings.html":{},"coverage.html":{}}}],["src/app/models/settings.ts:10",{"_index":1000,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/models/settings.ts:37",{"_index":1002,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/pages/home/home",{"_index":860,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":853,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":627,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:119",{"_index":663,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:138",{"_index":655,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:149",{"_index":651,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:160",{"_index":657,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:202",{"_index":658,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:26",{"_index":672,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:27",{"_index":668,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:29",{"_index":670,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:30",{"_index":679,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:31",{"_index":677,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:32",{"_index":646,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:39",{"_index":676,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:41",{"_index":678,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:43",{"_index":674,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:44",{"_index":675,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:45",{"_index":673,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:69",{"_index":667,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:79",{"_index":648,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.resolve.ts",{"_index":866,"title":{},"body":{"guards/HomeResolve.html":{},"coverage.html":{}}}],["src/app/pages/home/home.resolve.ts:17",{"_index":874,"title":{},"body":{"guards/HomeResolve.html":{}}}],["src/app/pages/home/home.resolve.ts:9",{"_index":869,"title":{},"body":{"guards/HomeResolve.html":{}}}],["src/app/service/advertisement/advertisement.service",{"_index":686,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/service/advertisement/advertisement.service.ts",{"_index":6,"title":{},"body":{"injectables/AdvertisementService.html":{},"coverage.html":{}}}],["src/app/service/advertisement/advertisement.service.ts:11",{"_index":19,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["src/app/service/advertisement/advertisement.service.ts:19",{"_index":15,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["src/app/service/advertisement/advertisement.service.ts:7",{"_index":14,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["src/app/service/alarm/alarm.service",{"_index":691,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["src/app/service/alarm/alarm.service.ts",{"_index":209,"title":{},"body":{"injectables/AlarmService.html":{},"coverage.html":{}}}],["src/app/service/alarm/alarm.service.ts:111",{"_index":235,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:17",{"_index":236,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:21",{"_index":220,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:41",{"_index":239,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:45",{"_index":243,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:49",{"_index":245,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:54",{"_index":247,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:65",{"_index":241,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alarm/alarm.service.ts:76",{"_index":226,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/service/alert/alert.service",{"_index":687,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["src/app/service/alert/alert.service.ts",{"_index":488,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["src/app/service/alert/alert.service.ts:27",{"_index":502,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/service/alert/alert.service.ts:53",{"_index":515,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/service/alert/alert.service.ts:7",{"_index":494,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/service/alert/alert.service.ts:71",{"_index":499,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/service/alert/alert.service.ts:9",{"_index":516,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/service/notification/notification.service",{"_index":693,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/service/notification/notification.service.ts",{"_index":906,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/service/notification/notification.service.ts:102",{"_index":931,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:109",{"_index":922,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:119",{"_index":927,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:15",{"_index":937,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:16",{"_index":917,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:18",{"_index":938,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:22",{"_index":921,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:51",{"_index":934,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:68",{"_index":919,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notification/notification.service.ts:97",{"_index":925,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/storage/storage.service",{"_index":692,"title":{},"body":{"components/HomePage.html":{},"guards/HomeResolve.html":{},"components/SettingsPopoverComponent.html":{}}}],["src/app/service/storage/storage.service.ts",{"_index":1165,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/service/storage/storage.service.ts:120",{"_index":1174,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:18",{"_index":1172,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:33",{"_index":1175,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:41",{"_index":1180,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:57",{"_index":1177,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:78",{"_index":1186,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:87",{"_index":1182,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/storage/storage.service.ts:95",{"_index":1184,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/timer/timer.service",{"_index":688,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{}}}],["src/app/service/timer/timer.service.ts",{"_index":1272,"title":{},"body":{"injectables/TimerService.html":{},"coverage.html":{}}}],["src/app/service/timer/timer.service.ts:101",{"_index":1296,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:105",{"_index":1298,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:109",{"_index":1284,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:113",{"_index":1285,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:123",{"_index":1300,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:146",{"_index":1290,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:155",{"_index":1283,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:17",{"_index":1279,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:171",{"_index":1280,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:195",{"_index":1286,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:32",{"_index":1292,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:33",{"_index":1291,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:44",{"_index":1288,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:65",{"_index":1289,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:76",{"_index":1287,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/service/timer/timer.service.ts:97",{"_index":1294,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1388,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1390,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1391,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":329,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["start/stop",{"_index":649,"title":{},"body":{"components/HomePage.html":{}}}],["started",{"_index":634,"title":{"index.html":{}},"body":{"components/HomePage.html":{},"interfaces/ITimer.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["startedlist",{"_index":901,"title":{},"body":{"interfaces/ITimer.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["starting",{"_index":328,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{}}}],["startstoptimer",{"_index":640,"title":{},"body":{"components/HomePage.html":{}}}],["state",{"_index":872,"title":{},"body":{"guards/HomeResolve.html":{}}}],["statements",{"_index":1340,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":652,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"guards/HomeResolve.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["status.timelist.start",{"_index":1202,"title":{},"body":{"injectables/StorageService.html":{}}}],["status.timelist.stop",{"_index":1204,"title":{},"body":{"injectables/StorageService.html":{}}}],["still",{"_index":749,"title":{},"body":{"components/HomePage.html":{},"injectables/NotificationService.html":{}}}],["sting",{"_index":196,"title":{},"body":{"classes/Alarm.html":{}}}],["stop",{"_index":665,"title":{},"body":{"components/HomePage.html":{},"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stopped",{"_index":635,"title":{},"body":{"components/HomePage.html":{}}}],["stoppedduration",{"_index":902,"title":{},"body":{"interfaces/ITimer.html":{},"classes/Timer.html":{}}}],["stoppedduration:any",{"_index":1304,"title":{},"body":{"injectables/TimerService.html":{}}}],["stoppedlist",{"_index":903,"title":{},"body":{"interfaces/ITimer.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["stopping",{"_index":333,"title":{},"body":{"injectables/AlarmService.html":{}}}],["storage",{"_index":224,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["storage.get({key",{"_index":1208,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.set",{"_index":1222,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage/storage.service",{"_index":256,"title":{},"body":{"injectables/AlarmService.html":{}}}],["storageservice",{"_index":218,"title":{"injectables/StorageService.html":{}},"body":{"injectables/AlarmService.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"guards/HomeResolve.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["stored",{"_index":398,"title":{},"body":{"classes/Alarms.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["string",{"_index":71,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"interfaces/IAlarm.html":{},"interfaces/IPickerColumnOption.html":{},"interfaces/IReturnMsg.html":{},"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["strong",{"_index":779,"title":{},"body":{"components/HomePage.html":{}}}],["styles",{"_index":544,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["styleurls",{"_index":551,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["subheader",{"_index":514,"title":{},"body":{"injectables/AlertService.html":{}}}],["subscribe",{"_index":41,"title":{},"body":{"injectables/AdvertisementService.html":{},"components/HomePage.html":{}}}],["succeded",{"_index":300,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"interfaces/IReturnMsg.html":{},"classes/Settings.html":{},"injectables/StorageService.html":{}}}],["successfull",{"_index":307,"title":{},"body":{"injectables/AlarmService.html":{}}}],["sun",{"_index":993,"title":{},"body":{"classes/Options.html":{}}}],["support",{"_index":1440,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":509,"title":{},"body":{"injectables/AlertService.html":{}}}],["svg",{"_index":1441,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1395,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1394,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":543,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["templateurl",{"_index":553,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["temporary",{"_index":1049,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["test",{"_index":312,"title":{},"body":{"injectables/AlarmService.html":{}}}],["testingdevices",{"_index":37,"title":{},"body":{"injectables/AdvertisementService.html":{}}}],["text",{"_index":525,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"interfaces/IPickerColumnOption.html":{},"components/SettingsPopoverComponent.html":{}}}],["text:'ok",{"_index":1098,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["then(alarms",{"_index":271,"title":{},"body":{"injectables/AlarmService.html":{}}}],["then(async",{"_index":879,"title":{},"body":{"guards/HomeResolve.html":{}}}],["then(res",{"_index":505,"title":{},"body":{"injectables/AlertService.html":{},"components/HomePage.html":{},"injectables/StorageService.html":{}}}],["this._alarms",{"_index":274,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/SettingsPopoverComponent.html":{}}}],["this._alarms.add(this._alarmtmp",{"_index":1136,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this._alarms.alarms",{"_index":277,"title":{},"body":{"injectables/AlarmService.html":{},"components/SettingsPopoverComponent.html":{}}}],["this._alarms.alarmsidx",{"_index":278,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this._alarms.clear",{"_index":327,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this._alarms.delete(alarm",{"_index":1091,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this._alarms.filter(x",{"_index":479,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms.foreach",{"_index":484,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms.length",{"_index":445,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms.push(alarmtmp",{"_index":457,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms.sort((a",{"_index":471,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms.splice(idx,1",{"_index":451,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms.update(this._alarmtmp",{"_index":1112,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this._alarms.update(value",{"_index":346,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this._alarms[idx].index",{"_index":450,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms[position",{"_index":443,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms[position].duration",{"_index":439,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms[position].ispause",{"_index":438,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms[position].key",{"_index":437,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarms[this._alarms.length",{"_index":475,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarmsidx",{"_index":421,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarmsidx.foreach",{"_index":464,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarmsidx.length",{"_index":468,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarmsidx.push(alarmtmp.index",{"_index":458,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarmsidx.push(alarmtmp.nextindex",{"_index":460,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarmsidx.splice(idx",{"_index":446,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarmsidx.splice(idx2",{"_index":453,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarmsidx[position",{"_index":444,"title":{},"body":{"classes/Alarms.html":{}}}],["this._alarmtmp",{"_index":1104,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this._alarmtmp.duration",{"_index":1133,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this._alarmtmp.ispause",{"_index":1108,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this._clickcounter",{"_index":724,"title":{},"body":{"components/HomePage.html":{}}}],["this._hours",{"_index":978,"title":{},"body":{"classes/Options.html":{}}}],["this._index",{"_index":172,"title":{},"body":{"classes/Alarm.html":{}}}],["this._minutes",{"_index":982,"title":{},"body":{"classes/Options.html":{}}}],["this._selectedalarmidx",{"_index":1088,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this._startstoptxt",{"_index":706,"title":{},"body":{"components/HomePage.html":{}}}],["this._status",{"_index":694,"title":{},"body":{"components/HomePage.html":{}}}],["this._status.timelist",{"_index":700,"title":{},"body":{"components/HomePage.html":{}}}],["this._status?.timelist",{"_index":698,"title":{},"body":{"components/HomePage.html":{}}}],["this._timer",{"_index":1308,"title":{},"body":{"injectables/TimerService.html":{}}}],["this._timer.blanktime",{"_index":1326,"title":{},"body":{"injectables/TimerService.html":{}}}],["this._timer.running",{"_index":1321,"title":{},"body":{"injectables/TimerService.html":{}}}],["this._timer.started",{"_index":1319,"title":{},"body":{"injectables/TimerService.html":{}}}],["this._timer.stoppedduration",{"_index":1316,"title":{},"body":{"injectables/TimerService.html":{}}}],["this._timer.time",{"_index":1325,"title":{},"body":{"injectables/TimerService.html":{}}}],["this._timer.timebegan",{"_index":1313,"title":{},"body":{"injectables/TimerService.html":{}}}],["this._timer.timestopped",{"_index":1314,"title":{},"body":{"injectables/TimerService.html":{}}}],["this._value",{"_index":171,"title":{},"body":{"classes/Alarm.html":{}}}],["this._value.split",{"_index":175,"title":{},"body":{"classes/Alarm.html":{}}}],["this.advertisementservice.banner",{"_index":704,"title":{},"body":{"components/HomePage.html":{}}}],["this.advertisementservice.initialize",{"_index":703,"title":{},"body":{"components/HomePage.html":{}}}],["this.alarms",{"_index":272,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.alarms.filter(x",{"_index":1025,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.length",{"_index":1018,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.push(end",{"_index":1008,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.push(pause",{"_index":1029,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.push(start",{"_index":1007,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms.sort((a",{"_index":1030,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms[idx].index",{"_index":1010,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms[idx].update(val",{"_index":344,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.alarms[idx].value",{"_index":1009,"title":{},"body":{"classes/Settings.html":{}}}],["this.alarms[this.alarms.length",{"_index":279,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{}}}],["this.alarmservice",{"_index":755,"title":{},"body":{"components/HomePage.html":{}}}],["this.alarmservice.alarms",{"_index":1087,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.alarmservice.checkforalarm(this._clickcounter",{"_index":709,"title":{},"body":{"components/HomePage.html":{}}}],["this.alarmservice.pushnotification(this._clickcounter",{"_index":713,"title":{},"body":{"components/HomePage.html":{}}}],["this.alarmsidx.length",{"_index":297,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.alarmsidx[1",{"_index":442,"title":{},"body":{"classes/Alarms.html":{}}}],["this.alarmsidx[counter",{"_index":293,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.alert.presentwarningalert(response.msg",{"_index":1115,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.alertcontroller.create",{"_index":523,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.alertservice.presentconfirmalert(res.msg",{"_index":710,"title":{},"body":{"components/HomePage.html":{}}}],["this.blanktime",{"_index":1269,"title":{},"body":{"classes/Timer.html":{}}}],["this.calcdiff",{"_index":1323,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.checkalarm(alarm",{"_index":429,"title":{},"body":{"classes/Alarms.html":{}}}],["this.clear",{"_index":424,"title":{},"body":{"classes/Alarms.html":{}}}],["this.clickcounter",{"_index":1327,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.convertstr2date(status.timelist.start",{"_index":1203,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.convertstr2date(status.timelist.stop",{"_index":1205,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.currenttimeindex",{"_index":295,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.diff",{"_index":1241,"title":{},"body":{"classes/TimeList.html":{},"classes/Timer.html":{}}}],["this.diffms",{"_index":1242,"title":{},"body":{"classes/TimeList.html":{},"classes/Timer.html":{}}}],["this.dismissclick",{"_index":1085,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.duration",{"_index":169,"title":{},"body":{"classes/Alarm.html":{}}}],["this.duration.split",{"_index":178,"title":{},"body":{"classes/Alarm.html":{}}}],["this.gethousoptions",{"_index":981,"title":{},"body":{"classes/Options.html":{}}}],["this.getminutesoptions",{"_index":985,"title":{},"body":{"classes/Options.html":{}}}],["this.getstoredalarms",{"_index":316,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.getstoreddata(keys.alarms",{"_index":1195,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.getstoreddata(keys.status",{"_index":1196,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.hour",{"_index":182,"title":{},"body":{"classes/Alarm.html":{}}}],["this.hours_options",{"_index":980,"title":{},"body":{"classes/Options.html":{}}}],["this.initializesettings",{"_index":1192,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.initializestatus",{"_index":1193,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.ispause",{"_index":168,"title":{},"body":{"classes/Alarm.html":{}}}],["this.key",{"_index":166,"title":{},"body":{"classes/Alarm.html":{}}}],["this.lastalarm.index",{"_index":304,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.minutes",{"_index":180,"title":{},"body":{"classes/Alarm.html":{}}}],["this.minutes.foreach(x",{"_index":996,"title":{},"body":{"classes/Options.html":{}}}],["this.minutes_opts",{"_index":984,"title":{},"body":{"classes/Options.html":{}}}],["this.myservice.presentconfirmalert('message",{"_index":504,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.notificationservice.addlocalnotification(msg",{"_index":756,"title":{},"body":{"components/HomePage.html":{}}}],["this.notificationservice.addnotification(test",{"_index":314,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.notificationservice.getpending",{"_index":758,"title":{},"body":{"components/HomePage.html":{}}}],["this.onpause",{"_index":702,"title":{},"body":{"components/HomePage.html":{}}}],["this.picker_options.gethouridx(alarm.hour",{"_index":1120,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.picker_options.getminuteidx(alarm.minutes",{"_index":1128,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.picker_options.hours_options",{"_index":1121,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.picker_options.minutes_opts",{"_index":1129,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.pickercontroller.create(options",{"_index":1131,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.platform.pause.subscribe(async",{"_index":729,"title":{},"body":{"components/HomePage.html":{}}}],["this.platform.ready",{"_index":878,"title":{},"body":{"guards/HomeResolve.html":{}}}],["this.popovercontroller.create",{"_index":760,"title":{},"body":{"components/HomePage.html":{}}}],["this.popovercontroller.dismiss",{"_index":1097,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.push(alarm",{"_index":432,"title":{},"body":{"classes/Alarms.html":{}}}],["this.push(alarmtmp",{"_index":420,"title":{},"body":{"classes/Alarms.html":{}}}],["this.reorder",{"_index":461,"title":{},"body":{"classes/Alarms.html":{}}}],["this.reset",{"_index":716,"title":{},"body":{"components/HomePage.html":{},"injectables/TimerService.html":{}}}],["this.route.snapshot.data.status",{"_index":695,"title":{},"body":{"components/HomePage.html":{}}}],["this.running",{"_index":1262,"title":{},"body":{"classes/Timer.html":{}}}],["this.save",{"_index":339,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.savedata(alarms",{"_index":1215,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.savedata(status",{"_index":1213,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.savestatus",{"_index":730,"title":{},"body":{"components/HomePage.html":{}}}],["this.setdefaultalarms",{"_index":318,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{}}}],["this.settings",{"_index":1095,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.showalarmdurationpicker(this._alarmtmp",{"_index":1110,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.showalarmpicker",{"_index":1090,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.showalarmpicker(alarm",{"_index":1089,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.start",{"_index":1239,"title":{},"body":{"classes/TimeList.html":{},"classes/Timer.html":{}}}],["this.started",{"_index":1268,"title":{},"body":{"classes/Timer.html":{}}}],["this.startedlist",{"_index":1271,"title":{},"body":{"classes/Timer.html":{}}}],["this.startstoptimer",{"_index":712,"title":{},"body":{"components/HomePage.html":{}}}],["this.stop",{"_index":1240,"title":{},"body":{"classes/TimeList.html":{},"classes/Timer.html":{}}}],["this.stoppedduration",{"_index":1267,"title":{},"body":{"classes/Timer.html":{}}}],["this.stoppedlist",{"_index":1270,"title":{},"body":{"classes/Timer.html":{}}}],["this.storageservice.getsettings",{"_index":1096,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["this.storageservice.getstoredalarm",{"_index":270,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.storageservice.getstoreddata(keys.alarms",{"_index":321,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.storageservice.getstoredstatus",{"_index":882,"title":{},"body":{"guards/HomeResolve.html":{}}}],["this.storageservice.savealarms(this.alarms",{"_index":322,"title":{},"body":{"injectables/AlarmService.html":{},"components/SettingsPopoverComponent.html":{}}}],["this.storageservice.savestatus(status",{"_index":736,"title":{},"body":{"components/HomePage.html":{}}}],["this.time",{"_index":1263,"title":{},"body":{"classes/Timer.html":{}}}],["this.timebegan",{"_index":1265,"title":{},"body":{"classes/Timer.html":{}}}],["this.timelist.start",{"_index":1330,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timelist.start.push(new",{"_index":1318,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timelist.stop",{"_index":1331,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timelist.stop.push(this._timer.timestopped",{"_index":1322,"title":{},"body":{"injectables/TimerService.html":{}}}],["this.timerservice.reset",{"_index":727,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.running",{"_index":707,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.start",{"_index":723,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.stop",{"_index":722,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.time",{"_index":733,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.timelist",{"_index":699,"title":{},"body":{"components/HomePage.html":{}}}],["this.timerservice.timelist.total",{"_index":732,"title":{},"body":{"components/HomePage.html":{}}}],["this.timestopped",{"_index":1266,"title":{},"body":{"classes/Timer.html":{}}}],["this.timetoindex(nextindexstr",{"_index":194,"title":{},"body":{"classes/Alarm.html":{}}}],["this.timetoindex(value",{"_index":173,"title":{},"body":{"classes/Alarm.html":{}}}],["this.total",{"_index":1243,"title":{},"body":{"classes/TimeList.html":{}}}],["this.totalms",{"_index":1244,"title":{},"body":{"classes/TimeList.html":{},"classes/Timer.html":{}}}],["this.updategui",{"_index":705,"title":{},"body":{"components/HomePage.html":{}}}],["this.value",{"_index":167,"title":{},"body":{"classes/Alarm.html":{}}}],["this.zeroprefix(next_hh.tostring",{"_index":191,"title":{},"body":{"classes/Alarm.html":{}}}],["this.zeroprefix(next_mm.tostring",{"_index":193,"title":{},"body":{"classes/Alarm.html":{}}}],["this_expr",{"_index":680,"title":{},"body":{"components/HomePage.html":{}}}],["thu",{"_index":990,"title":{},"body":{"classes/Options.html":{}}}],["time",{"_index":118,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"components/HomePage.html":{},"interfaces/ITimer.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["time.split",{"_index":947,"title":{},"body":{"injectables/NotificationService.html":{}}}],["timebegan",{"_index":904,"title":{},"body":{"interfaces/ITimer.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["timecontainer",{"_index":803,"title":{},"body":{"components/HomePage.html":{}}}],["timelist",{"_index":689,"title":{"classes/TimeList.html":{}},"body":{"components/HomePage.html":{},"interfaces/IStatus.html":{},"classes/TimeList.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["timelist(timer",{"_index":1333,"title":{},"body":{"injectables/TimerService.html":{}}}],["timelistcontainer",{"_index":824,"title":{},"body":{"components/HomePage.html":{}}}],["timenumber",{"_index":205,"title":{},"body":{"classes/Alarm.html":{}}}],["timer",{"_index":126,"title":{"classes/Timer.html":{}},"body":{"classes/Alarm.html":{},"components/HomePage.html":{},"interfaces/IStatus.html":{},"injectables/NotificationService.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["timer.running",{"_index":1336,"title":{},"body":{"injectables/TimerService.html":{}}}],["timerfab",{"_index":842,"title":{},"body":{"components/HomePage.html":{}}}],["timerfabtxt",{"_index":844,"title":{},"body":{"components/HomePage.html":{}}}],["timerservice",{"_index":644,"title":{"injectables/TimerService.html":{}},"body":{"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"injectables/TimerService.html":{},"coverage.html":{},"overview.html":{}}}],["timerservice.time",{"_index":767,"title":{},"body":{"components/HomePage.html":{}}}],["timeslist",{"_index":830,"title":{},"body":{"components/HomePage.html":{}}}],["timestext",{"_index":836,"title":{},"body":{"components/HomePage.html":{}}}],["timestopped",{"_index":905,"title":{},"body":{"interfaces/ITimer.html":{},"classes/Timer.html":{}}}],["timestopped:any",{"_index":1303,"title":{},"body":{"injectables/TimerService.html":{}}}],["timestr",{"_index":125,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/functions.html":{}}}],["timestr.replace",{"_index":203,"title":{},"body":{"classes/Alarm.html":{}}}],["timetoindex",{"_index":95,"title":{},"body":{"classes/Alarm.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["timetoindex(04:00",{"_index":124,"title":{},"body":{"classes/Alarm.html":{}}}],["timetoindex(12:00",{"_index":123,"title":{},"body":{"classes/Alarm.html":{}}}],["timetoindex(timestr",{"_index":115,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/functions.html":{}}}],["timetostring(alarmvalue",{"_index":1019,"title":{},"body":{"classes/Settings.html":{}}}],["timetostring(val",{"_index":1011,"title":{},"body":{"classes/Settings.html":{}}}],["tipo",{"_index":1201,"title":{},"body":{"injectables/StorageService.html":{}}}],["title",{"_index":1145,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["tmp",{"_index":174,"title":{},"body":{"classes/Alarm.html":{}}}],["tmp[0",{"_index":176,"title":{},"body":{"classes/Alarm.html":{}}}],["tmp[1",{"_index":177,"title":{},"body":{"classes/Alarm.html":{}}}],["toastcontroller",{"_index":908,"title":{},"body":{"injectables/NotificationService.html":{}}}],["today",{"_index":948,"title":{},"body":{"injectables/NotificationService.html":{}}}],["today.getdate",{"_index":952,"title":{},"body":{"injectables/NotificationService.html":{}}}],["today.getmonth",{"_index":951,"title":{},"body":{"injectables/NotificationService.html":{}}}],["todo",{"_index":267,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["top",{"_index":775,"title":{},"body":{"components/HomePage.html":{}}}],["total",{"_index":896,"title":{},"body":{"interfaces/ITimeList.html":{},"classes/TimeList.html":{}}}],["totalms",{"_index":897,"title":{},"body":{"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"classes/TimeList.html":{},"classes/Timer.html":{}}}],["tra",{"_index":262,"title":{},"body":{"injectables/AlarmService.html":{}}}],["tracked",{"_index":750,"title":{},"body":{"components/HomePage.html":{}}}],["transform",{"_index":777,"title":{},"body":{"components/HomePage.html":{},"interfaces/IPickerColumnOption.html":{}}}],["translatey",{"_index":778,"title":{},"body":{"components/HomePage.html":{}}}],["translucent",{"_index":761,"title":{},"body":{"components/HomePage.html":{}}}],["tree",{"_index":546,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["trovare",{"_index":353,"title":{},"body":{"injectables/AlarmService.html":{}}}],["true",{"_index":36,"title":{},"body":{"injectables/AdvertisementService.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HomePage.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1417,"title":{},"body":{"dependencies.html":{}}}],["tue",{"_index":988,"title":{},"body":{"classes/Options.html":{}}}],["tutte",{"_index":1198,"title":{},"body":{"injectables/StorageService.html":{}}}],["tutti",{"_index":719,"title":{},"body":{"components/HomePage.html":{}}}],["type",{"_index":107,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"guards/HomeResolve.html":{},"interfaces/IAlarm.html":{},"interfaces/IPickerColumnOption.html":{},"interfaces/IReturnMsg.html":{},"interfaces/IStatus.html":{},"interfaces/ITimeList.html":{},"interfaces/ITimer.html":{},"injectables/NotificationService.html":{},"classes/Options.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"classes/TimeList.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof(alarm",{"_index":427,"title":{},"body":{"classes/Alarms.html":{}}}],["typeof(val",{"_index":198,"title":{},"body":{"classes/Alarm.html":{}}}],["una",{"_index":348,"title":{},"body":{"injectables/AlarmService.html":{}}}],["unknown",{"_index":932,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/StorageService.html":{}}}],["up",{"_index":662,"title":{},"body":{"components/HomePage.html":{}}}],["update",{"_index":96,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{}}}],["update(alarm",{"_index":399,"title":{},"body":{"classes/Alarms.html":{}}}],["update(val",{"_index":129,"title":{},"body":{"classes/Alarm.html":{}}}],["updatealaram(val",{"_index":343,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Settings.html":{}}}],["updatealarm",{"_index":1042,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["updatealarm(alarm",{"_index":1062,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["updatealarm(value",{"_index":345,"title":{},"body":{"injectables/AlarmService.html":{}}}],["updated",{"_index":151,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/variables.html":{}}}],["updategui",{"_index":641,"title":{},"body":{"components/HomePage.html":{}}}],["updating",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urra",{"_index":715,"title":{},"body":{"components/HomePage.html":{}}}],["use",{"_index":503,"title":{},"body":{"injectables/AlertService.html":{}}}],["useclass",{"_index":600,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":119,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/functions.html":{}}}],["user",{"_index":268,"title":{},"body":{"injectables/AlarmService.html":{},"components/SettingsPopoverComponent.html":{}}}],["utility",{"_index":250,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{},"classes/Options.html":{},"injectables/TimerService.html":{}}}],["utility.gettime(24",{"_index":979,"title":{},"body":{"classes/Options.html":{}}}],["utility.gettime(60",{"_index":983,"title":{},"body":{"classes/Options.html":{}}}],["utility.index2time(alarmidx",{"_index":313,"title":{},"body":{"injectables/AlarmService.html":{}}}],["utility.timetoindex(datestr",{"_index":288,"title":{},"body":{"injectables/AlarmService.html":{}}}],["utility.zeroprefix(hour",{"_index":285,"title":{},"body":{"injectables/AlarmService.html":{}}}],["utility.zeroprefix(min",{"_index":286,"title":{},"body":{"injectables/AlarmService.html":{}}}],["val",{"_index":134,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"components/HomePage.html":{},"classes/Settings.html":{}}}],["val.duration",{"_index":200,"title":{},"body":{"classes/Alarm.html":{}}}],["val.ispause",{"_index":202,"title":{},"body":{"classes/Alarm.html":{}}}],["val.key",{"_index":201,"title":{},"body":{"classes/Alarm.html":{}}}],["val.value",{"_index":199,"title":{},"body":{"classes/Alarm.html":{}}}],["vale",{"_index":75,"title":{},"body":{"classes/Alarm.html":{}}}],["value",{"_index":68,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"injectables/AlertService.html":{},"components/HomePage.html":{},"interfaces/IAlarm.html":{},"interfaces/IPickerColumnOption.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value(value",{"_index":170,"title":{},"body":{"classes/Alarm.html":{}}}],["value.hours.value",{"_index":1102,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["value.minutes.value",{"_index":1103,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["value:x",{"_index":995,"title":{},"body":{"classes/Options.html":{}}}],["value?.hours?.value",{"_index":1134,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["value?.minutes?.value",{"_index":1135,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["values",{"_index":325,"title":{},"body":{"injectables/AlarmService.html":{},"classes/Alarms.html":{}}}],["valuestr",{"_index":1101,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["var",{"_index":204,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/AppComponent.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"injectables/NotificationService.html":{},"classes/Settings.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{}}}],["variable",{"_index":1342,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1448,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":137,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Alarms.html":{},"components/HistoryComponent.html":{},"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{},"injectables/StorageService.html":{},"injectables/TimerService.html":{}}}],["wait",{"_index":512,"title":{},"body":{"injectables/AlertService.html":{}}}],["webdriver",{"_index":1191,"title":{},"body":{"injectables/StorageService.html":{}}}],["wed",{"_index":989,"title":{},"body":{"classes/Options.html":{}}}],["white",{"_index":806,"title":{},"body":{"components/HomePage.html":{}}}],["width",{"_index":809,"title":{},"body":{"components/HomePage.html":{},"components/SettingsPopoverComponent.html":{}}}],["wooops",{"_index":511,"title":{},"body":{"injectables/AlertService.html":{}}}],["working",{"_index":230,"title":{},"body":{"injectables/AlarmService.html":{},"components/HomePage.html":{}}}],["works",{"_index":626,"title":{},"body":{"components/HistoryComponent.html":{}}}],["wrap",{"_index":1161,"title":{},"body":{"components/SettingsPopoverComponent.html":{}}}],["x.index",{"_index":480,"title":{},"body":{"classes/Alarms.html":{},"classes/Settings.html":{}}}],["year",{"_index":1426,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["yearmonth",{"_index":1428,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["yyyy",{"_index":1427,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["zero",{"_index":206,"title":{},"body":{"classes/Alarm.html":{},"injectables/TimerService.html":{}}}],["zeroprefix",{"_index":97,"title":{},"body":{"classes/Alarm.html":{},"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["zeroprefix(num",{"_index":138,"title":{},"body":{"classes/Alarm.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["zeros",{"_index":143,"title":{},"body":{"classes/Alarm.html":{},"injectables/TimerService.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":1419,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":581,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AdvertisementService.html":{"url":"injectables/AdvertisementService.html","title":"injectable - AdvertisementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdvertisementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Advertisement/advertisement.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                banner\n                            \n                            \n                                    Async\n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Advertisement/advertisement.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        banner\n                        \n                    \n                \n            \n            \n                \n                    \n                    banner()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Advertisement/advertisement.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Advertisement/advertisement.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AdMob, AdMobBannerSize, BannerAdOptions, BannerAdPluginEvents, BannerAdPosition, BannerAdSize } from '@capacitor-community/admob';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdvertisementService {\n\n  constructor() { }\n  \n  async initialize(): Promise {\n     AdMob.initialize({\n       requestTrackingAuthorization: true,\n      testingDevices: ['2077ef9a63d2b398840261c8221a0c9b'],\n      initializeForTesting: true,\n    });\n  }\n  \n  async banner(): Promise {\n    AdMob.addListener(BannerAdPluginEvents.Loaded, () => {\n      // Subscribe Banner Event Listener\n    });\n    \n    AdMob.addListener(BannerAdPluginEvents.SizeChanged, (size: AdMobBannerSize) => {\n      // Subscribe Change Banner Size\n    });\n    \n    const options: BannerAdOptions = {\n      adId: 'YOUR ADID',\n      adSize: BannerAdSize.BANNER,\n      position: BannerAdPosition.BOTTOM_CENTER,\n      margin: 0,\n      // isTesting: true\n      // npa: true\n    };\n    AdMob.showBanner(options);\n  }\n  \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Alarm.html":{"url":"classes/Alarm.html","title":"class - Alarm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Alarm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/CLASSES/Alarm.ts\n        \n\n\n            \n                Description\n            \n            \n                Alarm is identified by an idex, a value and a key.\nAlarm value is saved as string HH:mm\nThe index is automaticcaly generated from the alarm vale\nTo order the different alarms we save the HH:mm string as an index number\nex.\n    12:00 => 1200\n    04:00 => 400\n\n            \n\n\n            \n                Implements\n            \n            \n                            IAlarm\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _index\n                            \n                            \n                                    Public\n                                _value\n                            \n                            \n                                    Public\n                                duration\n                            \n                            \n                                    Public\n                                isPause\n                            \n                            \n                                key\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                timeToIndex\n                            \n                            \n                                    Public\n                                update\n                            \n                            \n                                    Private\n                                zeroPrefix\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                                \n                                    index\n                                \n                                \n                                    hour\n                                \n                                \n                                    minutes\n                                \n                                \n                                    nextIndex\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value: string, key: string, isPause: boolean, duration: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/MODELS/CLASSES/Alarm.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isPause\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        duration\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Alarm.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Alarm.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Alarm.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isPause\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Alarm.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Alarm.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        timeToIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    timeToIndex(timeStr: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/CLASSES/Alarm.ts:133\n                \n            \n\n\n            \n                \n                    Convert the time value from string to number, used as index\nCall by passing a time string in the format \"HH:mm\"\n    timeToIndex(12:00) = 1200\n    timeToIndex(04:00) = 400\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    timeStr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Alarm timer string (\"HH:mm\")\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            Call by passing a time string in the format &quot;HH:mm&quot;\n    timeToIndex(12:00) = 1200 \n    timeToIndex(04:00) = 400\n                        \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        Alarm index\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(val: string | Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/CLASSES/Alarm.ts:104\n                \n            \n\n\n            \n                \n                    Update alarm.\nIf value is passed, the index is automatically update,\nIf an alarm is passed, all the properties are update, and the new index is automatically update\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                string | Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        you can pass either a value string or an Alarm object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        zeroPrefix\n                        \n                    \n                \n            \n            \n                \n                    \n                    zeroPrefix(num: string, digit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/CLASSES/Alarm.ts:145\n                \n            \n\n\n            \n                \n                    Add digit-1 zeros at the begin of the number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    num\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    digit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        number of zeros\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/MODELS/CLASSES/Alarm.ts:41\n                                \n                            \n\n                \n                    \n                        setvalue(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/MODELS/CLASSES/Alarm.ts:36\n                                \n                            \n                    \n                        \n                                When value is set, also index is automatically updated\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n\n                \n                    \n                        getindex()\n                    \n                \n                            \n                                \n                                    Defined in src/app/MODELS/CLASSES/Alarm.ts:45\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hour\n                    \n                \n\n                \n                    \n                        gethour()\n                    \n                \n                            \n                                \n                                    Defined in src/app/MODELS/CLASSES/Alarm.ts:53\n                                \n                            \n                    \n                        \n                                Return the hour of the alarm as string\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        minutes\n                    \n                \n\n                \n                    \n                        getminutes()\n                    \n                \n                            \n                                \n                                    Defined in src/app/MODELS/CLASSES/Alarm.ts:62\n                                \n                            \n                    \n                        \n                                Return the minute of the alarm as string\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nextIndex\n                    \n                \n\n                \n                    \n                        getnextIndex()\n                    \n                \n                            \n                                \n                                    Defined in src/app/MODELS/CLASSES/Alarm.ts:72\n                                \n                            \n                    \n                        \n                                if duration > 0, return the next alarm index\nthat is the current value plus duration\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { IAlarm } from \"../INTERFACES/IAlarm\";\n\n/**\n * Alarm is identified by an idex, a value and a key.\n * Alarm value is saved as string HH:mm\n * The index is automaticcaly generated from the alarm vale\n * To order the different alarms we save the HH:mm string as an index number\n * ex. \n *     12:00 => 1200 \n *     04:00 => 400\n */\nexport class Alarm implements IAlarm {\n        \n    key: string = null;\n    public _value: string = null;\n    private _index: number = null;\n\n    public isPause: boolean = null;\n    public duration: string = null;\n    \n    constructor(\n        value: string, \n        key: string = null, \n        isPause: boolean = null, \n        duration: string = null\n    ) {\n        this.key      = key,\n        this.value    = value,\n        this.isPause  = isPause,\n        this.duration = duration\n    }\n\n    /**\n     * When value is set, also index is automatically updated\n     */\n    set value(value: string) {\n        this._value = value;\n        this._index = this.timeToIndex(value);\n    }\n\n    get value() {\n        return this._value;\n    }\n\n    get index() {\n        return this._index;\n    }\n    \n    /**\n     * Return the hour of the alarm as string\n     * @returns {string} Alarm hour\n     */\n    get hour(): string {\n        let tmp = this._value.split(\":\");\n        return tmp[0];\n    };\n\n    /**\n     * Return the minute of the alarm as string\n     * @returns {string} Alarm minutes\n     */\n    get minutes(): string {\n        let tmp = this._value.split(\":\");\n        return tmp[1];\n    }\n\n\n    /**\n     * if duration > 0, return the next alarm index\n     * that is the current value plus duration\n     */\n    get nextIndex(): number {\n        if (this.duration != null ) {\n            let duration = this.duration.split(\":\");\n            let current_mm: number = +this.minutes;\n            let current_hh: number = +this.hour;\n            let next_mm: number = current_mm + +duration[1];\n            let next_hh: number = current_hh + +duration[0];\n            if (next_mm > 59) {\n                if (next_mm == 60) {\n                    next_mm = 0;\n                } else {\n                    let diff = next_mm - 60;\n                    next_mm = diff;\n                }\n                next_hh += 1;\n            }\n            let nextIndexStr = this.zeroPrefix(next_hh.toString(), 2) + \":\" + this.zeroPrefix(next_mm.toString(), 2);\n            let nextIndex = this.timeToIndex(nextIndexStr);\n            return nextIndex;\n        }\n        return null;\n    }\n\n    \n\n    /**\n     * Update alarm.\n     * If value is passed, the index is automatically update,\n     * If an alarm is passed, all the properties are update, and the new index is automatically update\n     * \n     * @param {sting | Alarm} val you can pass either a value string or an Alarm object\n     */\n    public update(val: string | Alarm) {\n        console.log('Updating alarm...');\n        if (typeof(val) == 'string') {\n            this.value = val;\n        } else {\n            this.value = val.value;\n            if (val.duration) {\n                this.duration = val.duration;\n            }\n            if (val.key) {\n                this.key = val.key;\n            }\n            if (val.isPause) {\n                this.isPause = val.isPause;\n            }\n        }\n    }\n\n\n    /**\n    * Convert the time value from string to number, used as index\n    * \n    * @example\n    * Call by passing a time string in the format \"HH:mm\"\n    *     timeToIndex(12:00) = 1200 \n    *     timeToIndex(04:00) = 400\n    * @param {string} timeStr Alarm timer string (\"HH:mm\")\n    * @returns {number} Alarm index\n    */\n    private timeToIndex(timeStr: string): number {\n        timeStr = timeStr.replace(\":\", \"\");\n        var timeNumber: number = + timeStr;\n        return timeNumber;\n    }\n\n    /**\n    * Add digit-1 zeros at the begin of the number\n    * @param num \n    * @param digit number of zeros\n    * @returns \n    */\n    private zeroPrefix(num: string, digit: number): string {\n        let zero = '';\n        for(let i = 0; i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlarmService.html":{"url":"injectables/AlarmService.html","title":"injectable - AlarmService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlarmService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Alarm/alarm.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _alarms\n                            \n                            \n                                    Private\n                                offset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkForAlarm\n                            \n                            \n                                    Public\n                                pushNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Alarms\n                                \n                                \n                                    alarmsIdx\n                                \n                                \n                                    lastAlarm\n                                \n                                \n                                    currentTimeIndex\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Alarm/alarm.service.ts:21\n                            \n                        \n\n                \n                    \n                            When the service is instantiated => Alarms are retrived from the storage\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkForAlarm\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkForAlarm(counter: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:76\n                \n            \n\n\n            \n                \n                    Check if is too late or too early for the working day\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    counter\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IReturnMsg\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        pushNotification\n                        \n                    \n                \n            \n            \n                \n                    \n                    pushNotification(counter: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    counter\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _alarms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Alarms\n\n                    \n                \n                \n                    \n                        Default value : new Alarms()\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Alarm/alarm.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Alarm/alarm.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Alarms\n                    \n                \n\n                \n                    \n                        getAlarms()\n                    \n                \n                            \n                                \n                                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:41\n                                \n                            \n\n                \n                    \n                        setAlarms(alarms: Alarm[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:65\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            alarms\n                                                    \n                                                            \n                                                                            Alarm[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        alarmsIdx\n                    \n                \n\n                \n                    \n                        getalarmsIdx()\n                    \n                \n                            \n                                \n                                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:45\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastAlarm\n                    \n                \n\n                \n                    \n                        getlastAlarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:49\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentTimeIndex\n                    \n                \n\n                \n                    \n                        getcurrentTimeIndex()\n                    \n                \n                            \n                                \n                                    Defined in src/app/SERVICE/Alarm/alarm.service.ts:54\n                                \n                            \n                    \n                        \n                                Get the current hour and minutes as number index (ex. 13:15 => 1315)\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Utility } from 'src/app/COMMON/Utility';\nimport { Alarm } from 'src/app/MODELS/CLASSES/Alarm';\nimport { Alarms } from 'src/app/MODELS/CLASSES/Alarms';\nimport { IReturnMsg } from 'src/app/MODELS/INTERFACES/IReturnMsg';\nimport { NotificationService } from '../Notification/notification.service';\nimport { StorageService } from '../Storage/storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * L'alrm service deve fare da itermediario tra la classe Alarm e lo storage service\n */\nexport class AlarmService {\n  \n  private _alarms?: Alarms = new Alarms();\n\n  // ToDo\n  // let User manage the offset\n  private offset: number = 5;\n\n  /**\n   * When the service is instantiated => Alarms are retrived from the storage\n   * @param storageService \n   */\n  constructor(\n    private storageService: StorageService,\n    private notificationService: NotificationService\n    ) { \n    this.storageService.getStoredAlarm()\n    .then(alarms => {\n      if (alarms != null) {\n        this.Alarms = alarms;\n      }\n      console.log(\"Alarms: \", this._alarms);\n    });\n  }\n\n  //#region _________GET______________________________________\n  public get Alarms(): Alarm[] {\n    return this._alarms.alarms;\n  }\n\n  public get alarmsIdx(): number[] {\n    return this._alarms.alarmsIdx;\n  }\n\n  get lastAlarm(): Alarm {\n    return this.Alarms[this.Alarms.length - 1];\n  }\n\n  /** Get the current hour and minutes as number index (ex. 13:15 => 1315) */\n  get currentTimeIndex() {\n    let current = new Date();\n    let hour = current.getHours()\n    let min = current.getMinutes()\n    let dateStr = Utility.zeroPrefix(hour, 2) + \":\" + Utility.zeroPrefix(min, 2);\n    let dateIdx = Utility.timeToIndex(dateStr);\n    return dateIdx;\n  }\n  //#endregion\n\n  //#region _________SET______________________________________\n  public set Alarms(alarms: Alarm[]) {\n    this._alarms.alarms = alarms;\n  }\n  //#endregion\n  \n\n  /**\n   * Check if is too late or too early for the working day\n   * @param index alarm position index in the alarms array\n   * @returns \n   */\n  public checkForAlarm(counter: number): IReturnMsg {\n    let alarm = this.alarmsIdx[counter];\n    let currentTime: number = this.currentTimeIndex;\n    let msg = null;\n    if (counter == this.alarmsIdx.length - 1) {\n      msg = \"This is the end!\";\n      let res = {succeded: false, msg: msg};\n        return res;\n    }\n    if (alarm) {\n      console.log(\"Scheduled alarm: \", alarm);\n      console.log(\"Current index: \", currentTime);\n      if (currentTime  (this.lastAlarm.index)) {\n        msg = \"You are out of your working hours!\";\n        let res = {succeded: true, msg: msg};\n        return res;\n      }\n      msg = \"Successfull\";\n      let res = {succeded: true, msg: msg};\n      return res;\n\n    } else {\n      msg = \"No alarms found!\";\n      let res = {succeded: true, msg: msg};\n      return res;\n    }\n  }\n\n\n  public pushNotification(counter: number) {\n    console.log(\"pushing notification...\");\n    let alarmIdx = this.alarmsIdx[counter];\n    let test = Utility.index2time(alarmIdx);\n    this.notificationService.addNotification(test)\n  }\n\n\n\n\n\n\n\n\n\n\n\n  // public Reset() {\n  //   this.GetStoredAlarms();\n  // }\n\n  // public ResetDefault() {\n  //   this.SetDefaultAlarms();\n  // }\n\n\n  //#region PRIVATE METHOD\n  \n  // private GetStoredAlarms(): Promise {\n  //   // return this.storageService.getStoredData(KEYS.ALARMS);\n  // }\n\n  // private Save() {\n  //   this.storageService.SaveAlarms(this.Alarms);\n  // }\n\n  // private get DefaultAlarms(): Alarm[] {\n  //   console.log('Loading default alarm values...');\n  //   let alarmsTmp: Alarm[] = [];\n  //   // this._alarms.clear();\n  //   // Default starting time\n  //   const start: Alarm = new Alarm(LABELS.START, DEFAULT_VAL.START, false);\n  //   alarmsTmp.push(start);\n  //   // Default stopping time\n  //   const end: Alarm = new Alarm(LABELS.STOP, DEFAULT_VAL.STOP, false);\n  //   alarmsTmp.push(end);\n  //   console.log('Default alarms: ', this._alarms);\n  //   // Saving on storage\n  //   // this.Save();\n  //   return alarmsTmp;\n  // }\n\n  //#endregion\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // ToDo\n  // miglirabole\n  // /**\n  // * Update Alarm by positional index\n  // * @param val string\n  // * @param idx number\n  // */\n  //  public updateAlaram(val: string, idx: number) {\n  //   this.alarms[idx].update(val);\n  // };\n\n\n\n\n\n  // public updateAlarm(value: string, idx: number = null) {\n  //   // this._alarms.update(value);\n  // }\n\n  // ToDo\n  // deve diventare una insert/add alarm\n\n  // /**\n  // * \n  // * @param key Create a new Alarm\n  // * @param value \n  // * @param isPause \n  // * @param duration \n  // * @returns \n  // */\n  // public createAlarm (key: string = null, value: string = null, isPause: boolean = null, duration: number = null): Alarm {\n  //   var alarm: Alarm = new Alarm(key, value, true); \n  //   return alarm;\n  // }\n  \n  \n  \n  // ToDo\n  // trovare una soluzione differente per capire se siamo dentro a fuori il range degli allarmi\n  // per poi gestre i messaggi\n\n\n  \n  \n  \n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Alarms.html":{"url":"classes/Alarms.html","title":"class - Alarms","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Alarms\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/CLASSES/Alarms.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _alarms\n                            \n                            \n                                    Private\n                                    Optional\n                                _alarmsIdx\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Private\n                                checkAlarm\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Private\n                                push\n                            \n                            \n                                    Private\n                                reorder\n                            \n                            \n                                    Private\n                                SetDefaultAlarms\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    alarms\n                                \n                                \n                                    alarmsIdx\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(alarms: Alarm[])\n                    \n                \n                        \n                            \n                                Defined in src/app/MODELS/CLASSES/Alarms.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alarms\n                                                  \n                                                        \n                                                                        Alarm[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _alarms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Alarm[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Alarms.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _alarmsIdx\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Alarms.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(alarm: string | Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/CLASSES/Alarms.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                                string | Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IReturnMsg\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkAlarm\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkAlarm(alarm: Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/CLASSES/Alarms.ts:173\n                \n            \n\n\n            \n                \n                    Check if the new alarm is overlapping an existing one or out of range\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                                Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IReturnMsg\n\n                    \n                    \n                        IReturnMsg {succeded: boolean, msg: string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/CLASSES/Alarms.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(alarm: Alarm | number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/CLASSES/Alarms.ts:116\n                \n            \n\n\n            \n                \n                    Delete alarm by specifying:\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                                Alarm | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        or the alarm object itself, or the position in the alarm array\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IReturnMsg\n\n                    \n                    \n                        IReturnMsg {succeded: boolean, msg: string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        push\n                        \n                    \n                \n            \n            \n                \n                    \n                    push(alarm: string | Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/CLASSES/Alarms.ts:148\n                \n            \n\n\n            \n                \n                    Push the new alarm in the alarms list, and update the alarms index array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                                string | Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IReturnMsg\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        reorder\n                        \n                    \n                \n            \n            \n                \n                    \n                    reorder()\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/CLASSES/Alarms.ts:196\n                \n            \n\n\n            \n                \n                    reorder the alarma array and the alarms index array\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        SetDefaultAlarms\n                        \n                    \n                \n            \n            \n                \n                    \n                    SetDefaultAlarms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/CLASSES/Alarms.ts:217\n                \n            \n\n\n            \n                \n                    If no alarms are stored, the default alarm values are set\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(alarm: string | Alarm, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/CLASSES/Alarms.ts:66\n                \n            \n\n\n            \n                \n                    Update alarm by position if it is in axcepted range\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                                string | Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IReturnMsg\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarms\n                    \n                \n\n                \n                    \n                        getalarms()\n                    \n                \n                            \n                                \n                                    Defined in src/app/MODELS/CLASSES/Alarms.ts:27\n                                \n                            \n\n                \n                    \n                        setalarms(alarms: Alarm[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/MODELS/CLASSES/Alarms.ts:35\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            alarms\n                                                    \n                                                            \n                                                                            Alarm[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        alarmsIdx\n                    \n                \n\n                \n                    \n                        getalarmsIdx()\n                    \n                \n                            \n                                \n                                    Defined in src/app/MODELS/CLASSES/Alarms.ts:31\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { NgModelGroup } from '@angular/forms';\nimport { DEFAULT_VAL } from 'src/app/COMMON/DEFAULT_VAL';\nimport { LABELS } from 'src/app/COMMON/LABELS';\nimport { MSG } from 'src/app/COMMON/MSG';\nimport { Utility } from 'src/app/COMMON/Utility';\nimport { Alarm } from 'src/app/MODELS/CLASSES/Alarm';\nimport { IReturnMsg } from '../INTERFACES/IReturnMsg';\n\n\nexport class Alarms {\n  \n  private _alarms?: Alarm[] = [];\n  private _alarmsIdx?: number[] = [];\n  \n  constructor(alarms: Alarm[] = null) { \n    console.log(\"Alarm constructor\");\n    if (alarms != null) {\n      alarms.forEach(alarm => {\n        let alarmTmp = new Alarm(alarm.value, alarm.key, alarm.isPause, alarm.duration);\n        this.push(alarmTmp);\n      });\n    } else {\n      this.SetDefaultAlarms();\n    }\n  }\n  \n  public get alarms(): Alarm[] {\n    return this._alarms;\n  }\n\n  public get alarmsIdx(): number[] {\n    return this._alarmsIdx;\n  }\n  \n  public set alarms(alarms: Alarm[]) {\n    this._alarms = alarms;\n    // create a new object because when retrieved from the storage all the Alarm methods are lost\n    this.clear();\n    alarms.forEach(alarm => {\n      let alarmTmp = new Alarm(alarm._value, alarm.key, alarm.isPause, alarm.duration);\n      this.push(alarmTmp);\n    });\n  }\n\n\n\n  public add(alarm: string | Alarm): IReturnMsg {\n    console.log(\"Adding alarms...\");\n    if (typeof(alarm) == \"string\") {\n      alarm = new Alarm(alarm);\n    } \n    let res = this.checkAlarm(alarm);\n    console.log(res);\n    if (res.succeded) {\n      this.push(alarm);\n      return {succeded: true, msg: MSG.ALARM_UPDATE};\n    }\n    return {succeded: false, msg: MSG.ALARM_INVALID};\n  }\n\n  /**\n  * Update alarm by position if it is in axcepted range\n  * @param value \n  * @param {number} idx alarm position in the Alarms array\n  */\n   public update(alarm: string | Alarm, position: number): IReturnMsg {\n    console.log(\"Updating alarms...\");\n    if (typeof(alarm) == \"string\") {\n      let value: string = alarm;\n      alarm = new Alarm(this._alarms[position].value, this._alarms[position].key, this._alarms[position].isPause, this._alarms[position].duration);\n      alarm.value = value;\n    } \n    if (position == 0) {\n      if (alarm.index > this.alarmsIdx[1]) {\n        return {succeded: false, msg: MSG.ALARM_INVALID};\n      } else {\n        this._alarms[position] = alarm;\n        this._alarmsIdx[position] = alarm.index;\n        return {succeded: true, msg: MSG.ALARM_UPDATE};\n      }\n    }\n    if (position == this._alarms.length - 1) {\n      if (alarm.index  0 ? alarm * 2 - 1 : 0;\n      this._alarmsIdx.splice(idx, n);\n      return {succeded: true, msg:'Alarm deleted'};\n    } else {\n      for (var idx = this._alarms.length - 1; idx >= 0; --idx) {\n        if (this._alarms[idx].index == alarm.index) {\n          let n = idx == 0 ? 1 : idx == this._alarms.length - 1 ? 1 : 2;\n          this._alarms.splice(idx,1);\n          let idx2 = (idx * 2 - 1) > 0 ? idx * 2 - 1 : 0;\n          this._alarmsIdx.splice(idx2, n);\n          return {succeded: true, msg:'Alarm deleted'};\n        }\n      }\n    }\n    return {succeded: false, msg:'Alarm not deleted'};\n  }\n  \n  \n  \n\n\n\n\n  /**\n   * Push the new alarm in the alarms list, and update the alarms index array\n   * @param alarm \n   */\n  private push(alarm: string | Alarm): IReturnMsg {\n    console.log(\"pushing alarm...\")\n    // create pause element\n    let alarmTmp: Alarm;\n    if (typeof(alarm) == \"string\") {\n      alarmTmp = new Alarm(alarm, LABELS.PAUSE, true);\n    } else {\n      alarmTmp = alarm;\n    }  \n    this._alarms.push(alarmTmp);\n    this._alarmsIdx.push(alarmTmp.index);\n    // check if alarm has a duration\n    if (alarmTmp.duration != null) {\n        this._alarmsIdx.push(alarmTmp.nextIndex);\n        this.reorder();\n        return {succeded: true, msg: \"Alarm pushed\"};\n    }\n  }\n\n\n  /**\n   * Check if the new alarm is overlapping an existing one or out of range\n   * @param alarm \n   * @returns IReturnMsg {succeded: boolean, msg: string}\n   */\n  private checkAlarm(alarm: Alarm): IReturnMsg {\n    let alarmIdx = -1;\n    let nextAlarmIdx = -1;\n    this._alarmsIdx.forEach( (currentAlarmIdx, idx) => {\n      if (alarm.index > currentAlarmIdx) {\n        alarmIdx = idx;\n      }\n      if (alarm?.nextIndex > currentAlarmIdx) {\n        nextAlarmIdx = idx;\n      }\n    });\n    if (alarmIdx != nextAlarmIdx) {\n      return {succeded: false, msg: \"Pause overlap!\"}\n    } else {\n      if ((alarmIdx == -1 && nextAlarmIdx == -1) || (alarmIdx == this._alarmsIdx.length -1 && nextAlarmIdx == this._alarmsIdx.length  -1)) {\n        return {succeded: false, msg: MSG.PAUSE_OUT_OF_RANGE}\n      }\n      return {succeded: true, msg: \"Pause accepted!\"}\n    }\n  }\n\n\n  /** reorder the alarma array and the alarms index array */\n  private reorder() {\n    this._alarms.sort((a, b) => {\n      if (a.index && b.index) {\n        if (a.index > b.index) return 1;\n        if (a.index  {\n      if (a && b) {\n        if (a > b) return 1;\n        if (a  this._alarms[this._alarms.length - 1].index) {\n  //       return {succeded: false, msg: MSG.PAUSE_OUT_OF_RANGE};\n  //     }\n  //     // check if there is an alarm with the same index\n  //     var existingAlarm = this._alarms.filter(x => x.index == alarmTmp.index);\n  //     if (existingAlarm.length > 0) {\n  //       return {succeded: false, msg: MSG.PAUSE_EXIST};\n  //     }\n  \n  //     this._alarms.forEach( (alarm, idx) => {\n  //       if (alarm.index == alarmTmp.index) {\n  //         return {succeded: false, msg: MSG.PAUSE_EXIST};\n  //       }\n  //       // if it is a pause, check that it does not follow in the pause range\n  //       if (alarm.isPause) {\n  //         if (alarmTmp.index  {\n  //     if (a.index && b.index) {\n  //       if (a.index > b.index) return 1;\n  //       if (a.index  {\n  //     if(currentIdx == alarm.index) {\n  //       return position;\n  //     }\n  //   });\n  //   return -1;\n  // }\n  \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Alert/alert.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertController\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                presentConfirm\n                            \n                            \n                                    Async\n                                presentConfirmAlert\n                            \n                            \n                                    Async\n                                presentWarningAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Alert/alert.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        presentConfirm\n                        \n                    \n                \n            \n            \n                \n                    \n                    presentConfirm(header: any, message: any, cancelText: any, okText: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alert/alert.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    header\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cancelText\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    okText\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        presentConfirmAlert\n                        \n                    \n                \n            \n            \n                \n                    \n                    presentConfirmAlert(msg: string, header: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alert/alert.service.ts:27\n                \n            \n\n\n            \n                \n                    Use as:\nthis.myservice.presentConfirmAlert('message')\n.then(res => {\n  if (res) {\n    // codes\n  }\n}, err => {\n    // manage the error\n});\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Are you sure?'\n                                    \n\n                                    \n                                        message to display\n\n                                    \n                                \n                                \n                                    header\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'WOOOPS'\n                                    \n\n                                    \n                                        (optional) header to display (Default 'WAIT')\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Use as:\nthis.myservice.presentConfirmAlert('message')\n.then(res => {\n  if (res) {\n    // codes\n  }\n}, err => {\n    // manage the error\n});\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        presentWarningAlert\n                        \n                    \n                \n            \n            \n                \n                    \n                    presentWarningAlert(msg: string, subheader: string | null, header: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Alert/alert.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Are you sure?'\n                                    \n\n                                \n                                \n                                    subheader\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    header\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'WOOOPS'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        alertController\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AlertController\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Alert/alert.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(public alertController: AlertController) { }\n\n  /**\n   * \n   * @param msg message to display\n   * @param subheader (optional) subheader to display (Default null)\n   * @param header (optional) header to display (Default 'WAIT')\n   * @returns \n   * Use as:\n   * this.myservice.presentConfirmAlert('message')\n   * .then(res => {\n   *   if (res) {\n   *     // codes\n   *   }\n   * }, err => {\n   *     // manage the error\n   * });\n   */\n  async presentConfirmAlert(msg: string = 'Are you sure?', header: string = 'WOOOPS'): Promise {\n    return new Promise(async (resolve) => {\n      const alert = await this.alertController.create({\n        header: header,\n        message: msg,\n        buttons: [\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: (cancel) => {\n              resolve(false);\n            }\n          }, {\n            text: 'Continue',\n            handler: (ok) => {\n              resolve(true);\n            }\n          }\n        ]\n      });\n      alert.present();\n    });\n  }\n\n\n  async presentWarningAlert(msg: string = 'Are you sure?', subheader: string | null = null, header: string = 'WOOOPS'): Promise {\n    return new Promise(async (resolve) => {\n      const alert = await this.alertController.create({\n        header: header,\n        subHeader: subheader,\n        message: msg,\n        buttons: [\n          {\n            text: 'OK',\n            role: 'cancel',\n            cssClass: 'secondary',\n          }\n        ]\n      });\n      alert.present();\n    });\n  }\n\n  async presentConfirm(header: any, message: any,cancelText: any,okText: any): Promise {\n    return new Promise(async (resolve) => {\n      const alert = await this.alertController.create({\n        header: header,\n        message: message,\n        buttons: [\n          {\n            text: cancelText,\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: (cancel) => {\n              resolve('cancel');\n            }\n          }, {\n            text: okText,\n            handler: (ok) => {\n              resolve('ok');\n            }\n          }\n        ]\n      });\n      alert.present();\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { StorageService } from './SERVICE/Storage/storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n  constructor(private storageService: StorageService) { }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HistoryComponent', 'selector': 'app-history'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'SettingsPopoverComponent', 'selector': 'app-settings-popover'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [\n    BrowserModule, \n    IonicModule.forRoot(), \n    AppRoutingModule\n  ],\n  providers: [{ provide: RouteReuseStrategy, useClass: IonicRouteStrategy }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    loadChildren: () => \"import('./PAGES/home/home.module').then( m => m.HomePageModule)\"\n  },\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoryComponent.html":{"url":"components/HistoryComponent.html","title":"component - HistoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HistoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/COMPONENTS/history/history/history.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-history\n            \n\n            \n                styleUrls\n                ./history.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./history.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/COMPONENTS/history/history/history.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/history/history/history.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.scss'],\n})\nexport class HistoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n\n    \n\n    \n        \n  history works!\n\n\n    \n\n    \n                \n                    ./history.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  history works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HistoryComponent', 'selector': 'app-history'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'SettingsPopoverComponent', 'selector': 'app-settings-popover'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HistoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/PAGES/home/home.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _clickCounter\n                            \n                            \n                                    Private\n                                _startStopTxt\n                            \n                            \n                                    Private\n                                _status\n                            \n                            \n                                    Public\n                                advertisementService\n                            \n                            \n                                    Public\n                                alertController\n                            \n                            \n                                    Public\n                                alertService\n                            \n                            \n                                    Public\n                                platform\n                            \n                            \n                                    Private\n                                started\n                            \n                            \n                                    Private\n                                stopped\n                            \n                            \n                                    Public\n                                storageService\n                            \n                            \n                                    Private\n                                time\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                OnFabTimerClick\n                            \n                            \n                                onPause\n                            \n                            \n                                Reset\n                            \n                            \n                                SaveStatus\n                            \n                            \n                                    Async\n                                showSettings\n                            \n                            \n                                StartStopTimer\n                            \n                            \n                                UpdateGUI\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, platform: Platform, timerService: TimerService, storageService: StorageService, popoverController: PopoverController, alertController: AlertController, alertService: AlertService, advertisementService: AdvertisementService, alarmService: AlarmService, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/PAGES/home/home.page.ts:32\n                            \n                        \n\n                \n                    \n                            CONSTRUCTOR\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timerService\n                                                  \n                                                        \n                                                                        TimerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverController\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        advertisementService\n                                                  \n                                                        \n                                                                        AdvertisementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                        AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        OnFabTimerClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    OnFabTimerClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:79\n                \n            \n\n\n            \n                \n                    Start/Stop timer function\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPause\n                        \n                    \n                \n            \n            \n                \nonPause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:149\n                \n            \n\n\n            \n                \n                    Save the current status to local storage on platform.pause event\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Reset\n                        \n                    \n                \n            \n            \n                \nReset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:138\n                \n            \n\n\n            \n                \n                    Reset timer and click counter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SaveStatus\n                        \n                    \n                \n            \n            \n                \nSaveStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:160\n                \n            \n\n\n            \n                \n                    Save current timer status on storage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        showSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    showSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:202\n                \n            \n\n\n            \n                \n                    Open Setings pop-up\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StartStopTimer\n                        \n                    \n                \n            \n            \n                \nStartStopTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:119\n                \n            \n\n\n            \n                \n                    Sart or Stop timer,\nand increment click counter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateGUI\n                        \n                    \n                \n            \n            \n                \nUpdateGUI()\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.page.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _clickCounter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _startStopTxt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : LABELS.START\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IStatus\n\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        advertisementService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AdvertisementService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        alertController\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AlertController\n\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        alertService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AlertService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Platform\n\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        started\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stopped\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        storageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StorageService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/PAGES/home/home.page.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertController, Platform, PopoverController } from '@ionic/angular';\nimport { LABELS } from 'src/app/COMMON/LABELS';\nimport { SettingsPopoverComponent } from 'src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component';\nimport { IStatus } from 'src/app/MODELS/INTERFACES/IStatus';\nimport { AdvertisementService } from 'src/app/SERVICE/Advertisement/advertisement.service';\nimport { AlertService } from 'src/app/SERVICE/Alert/alert.service';\nimport { TimerService } from 'src/app/SERVICE/Timer/timer.service';\nimport { TimeList } from 'src/app/MODELS/CLASSES/TimeList';\nimport { AlarmService } from 'src/app/SERVICE/Alarm/alarm.service';\nimport { StorageService } from 'src/app/SERVICE/Storage/storage.service';\nimport { Alarm } from 'src/app/MODELS/CLASSES/Alarm';\nimport { IReturnMsg } from 'src/app/MODELS/INTERFACES/IReturnMsg';\nimport { NotificationService } from 'src/app/SERVICE/Notification/notification.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n\n\n  private _status: IStatus;\n  private _clickCounter: number = 0;\n\n  private _startStopTxt: string = LABELS.START;\n  private time: string;\n  private stopped: Date[] = [];\n  private started: Date[] = [];\n\n  /**\n   * CONSTRUCTOR\n   */\n  constructor(\n    private route: ActivatedRoute,\n    public platform: Platform,\n    private timerService: TimerService,\n    public storageService: StorageService,\n    private popoverController: PopoverController,\n    public alertController: AlertController,\n    public alertService: AlertService,\n    public advertisementService: AdvertisementService,\n    private alarmService: AlarmService,\n    private notificationService: NotificationService\n  ) { \n\n    this._status = this.route.snapshot.data.status;\n    console.log('Status: ', this._status);\n  \n    // Retrieving timeList from storage status\n    if (this._status?.timeList) {\n      this.timerService.timeList = this._status.timeList;\n    }\n    console.log('timeList: ', this.timerService.timeList);\n\n    // subscribe to on pause event\n    this.onPause();\n\n    // this.advertisementService.initialize();\n    // this.advertisementService.banner();\n\n    this.UpdateGUI();\n  }\n\n\n  UpdateGUI() {\n    this._startStopTxt = this.timerService.Running ? LABELS.STOP : LABELS.START;\n  }\n\n\n\n\n  /**\n   * Start/Stop timer function\n   */\n  async OnFabTimerClick() {\n        \n    // check for alarm\n    let res = this.alarmService.checkForAlarm(this._clickCounter);\n    if (res.succeded) {\n      this.alertService.presentConfirmAlert(res.msg)\n      .then( res => {\n        if (res) {\n          console.log('Confirmed');\n          this.StartStopTimer();\n          // add a notification\n          this.alarmService.pushNotification(this._clickCounter);\n\n        } else {\n          console.log('Canceled')\n        }  \n      })\n    } else {\n      // reset\n      this.alertService.presentConfirmAlert(res.msg, \"URRA!\")\n      .then( res => {\n        if (res) {\n          console.log('Confirmed');\n          this.Reset();\n          // ToDo\n          // gestire lo storage del working day per la history e fare tutti i calcoli del mese\n        } else {\n          console.log('Canceled')\n        }  \n      })\n    }\n  }\n\n\n\n\n  /**\n   * Sart or Stop timer,\n   * and increment click counter\n   */\n  StartStopTimer() {\n    if (this.timerService.Running) \n    {\n      this.timerService.stop();\n    } \n    else \n    {\n      this.timerService.start();\n    }\n    this._clickCounter++;\n    console.log(\"Click counter: \", this._clickCounter);\n    this.UpdateGUI();\n  }\n\n\n\n  /**\n   * Reset timer and click counter\n   */\n  Reset() {\n    console.log(\"Resetting...\");\n    this.timerService.reset();\n    this._clickCounter = 0;\n  }\n\n\n\n  /**\n   * Save the current status to local storage on platform.pause event\n   */\n  onPause() {\n    console.log(\"Subscribing on pause event...\");\n    this.platform.pause.subscribe(async () => {\n      this.SaveStatus();\n    })\n  }\n\n\n  /**\n   * Save current timer status on storage\n   */\n  SaveStatus() {\n    console.log(\"Saving status...\");\n    // this.timerService.timeList.total = this.timerService.time;\n    var status: IStatus = {\n      isRunning : this.timerService.Running, \n      timeList: this.timerService.timeList,\n      clickCounter: this._clickCounter\n    };   \n    this.storageService.SaveStatus(status)\n    .then(res => {\n      // add notification\n      if (res.succeded) {\n        // ToDo\n        // da controllare sia il caso is running\n        // sia nel caso non sia in running se cmq è avviato e ci sono altri alarm schedulati\n        if (this.timerService.Running) {\n          console.log(\"Adding local notification...\");\n          let msg: string = \"Your working hour is still tracked\";\n          // ToDo\n          // mange the next alarm notification\n          // When exit from the application, if running, the next alarm notification is schduled\n          // this.alarmService.\n          this.notificationService.addLocalNotification(msg);\n        } else {\n          if (this._clickCounter > 0) {\n            \n          }\n          let p = this.notificationService.getPending();\n          console.log(p);\n        }\n      }\n    }, err => {\n      \n    })\n  }\n\n\n\n\n  /**\n   * Open Setings pop-up\n   */\n  async showSettings() {\n    const popover = await this.popoverController.create({\n      component: SettingsPopoverComponent,\n      translucent: true,\n    });\n    await popover.present();\n    const { role } = await popover.onDidDismiss();\n    console.log('onDidDismiss resolved with role', role);\n  }\n\n\n  \n\n}\n\n    \n\n    \n        \n  \n    \n    \n      EchoTimer\n    \n    \n    \n      \n              \n      \n    \n  \n\n\n\n\n  \n\n    \n\n      \n      {{timerService.time}}\n\n      \n\n        \n          \n            Start\n          \n          \n            {{time | date : 'HH:mm'}}\n          \n        \n        \n        \n          \n            Stop\n          \n          \n              {{time | date : 'HH:mm'}}\n          \n        \n\n        \n          \n            Partial\n          \n          \n              {{time}}\n          \n        \n\n\n      \n\n    \n\n    \n    \n      \n        \n          {{_startStopTxt}}\n        \n      \n    \n      \n    \n    \n      Reset\n    \n\n    Save Status\n\n  \n    \n\n  \n    \n\n    \n                \n                    home.page.scss\n                \n                #container {\n  text-align: center;\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n#container strong {\n  font-size: 20px;\n  line-height: 26px;\n}\n\n#container p {\n  font-size: 16px;\n  line-height: 22px;\n\n  color: #8c8c8c;\n\n  margin: 0;\n}\n\n#container a {\n  text-decoration: none;\n}\n\nion-header{\n  ion-icon{\n    font-size: 2rem;\n  }\n}\n\n.appContainer{\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  height: 100%;\n  .timeContainer{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 40%;\n    .time{\n      color: white;\n      font-size:2rem; // default val\n    }\n    @media(min-width: 350px) //if more than 350 px\n    {\n      .time{\n        font-size:3rem;\n      }\n    }\n    @media(min-width: 500px) //if more than 500 px\n    {\n      .time{\n        font-size:4rem;\n      }\n    }\n    @media(min-width: 600px) //if more than 600 px\n    {\n      .time{\n        font-size:5rem;\n      }\n    }\n    @media(min-width: 850px) //if more than 850 px\n    {\n      .time{\n        font-size:7rem;\n      }\n    }\n    .timeListContainer{\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n      height: 50%;\n      width: 100%;\n      // background-color: rgba(66, 65, 65, 0.795);\n      .timesList{\n        display: flex;\n        flex-direction: column;\n        // flex-grow: 1;\n        width: 50%;\n        overflow: hidden;\n        // background-color: rgba(48, 45, 45, 0.795);\n        .timesText{\n          margin: 0.5rem 1rem;\n        }\n      }\n      .left{\n        // background-color: rgba(51, 36, 36, 0.795);\n        align-items: flex-end;\n      }\n    }\n  }\n  \n  .fabContainer{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    height: 50%;\n    .timerFab{\n      width: 50vw;\n      height: 50vw;\n      .timerFabTxt{\n        font-size:2rem; // default val\n      }\n      @media(min-width: 350px) //if more than 350 px\n      {\n        .timerFabTxt{\n          font-size:3rem;\n        }\n      }\n      @media(min-width: 500px) //if more than 500 px\n      {\n        .timerFabTxt{\n          font-size:4rem;\n        }\n      }\n      @media(min-width: 600px) //if more than 600 px\n      {\n        .timerFabTxt{\n          font-size:5rem;\n        }\n      }\n      @media(min-width: 850px) //if more than 850 px\n      {\n        .timerFabTxt{\n          font-size:7rem;\n        }\n      }\n    }\n  }\n\n  .resetButtonContainer{\n    height: 10%;\n    ion-button {\n      height: 100%;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                EchoTimer                                                              {{timerService.time}}                                    Start                                {{time | date : \\'HH:mm\\'}}                                                        Stop                                  {{time | date : \\'HH:mm\\'}}                                                Partial                                  {{time}}                                                            {{_startStopTxt}}                                      Reset        Save Status        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HistoryComponent', 'selector': 'app-history'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'SettingsPopoverComponent', 'selector': 'app-settings-popover'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nSettingsPopoverComponent\n\nSettingsPopoverComponent\n\nHomePageModule -->\n\nSettingsPopoverComponent->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/PAGES/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                        \n                            SettingsPopoverComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { SettingsPopoverComponent } from 'src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule\n  ],\n  declarations: [\n    HomePage,\n    SettingsPopoverComponent]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomePageRoutingModule\n\n\n\ncluster_HomePageRoutingModule_providers\n\n\n\n\nTimerService\n\nTimerService\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageRoutingModule -->\n\nTimerService->HomePageRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/PAGES/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TimerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TimerService } from 'src/app/SERVICE/Timer/timer.service';\nimport { HomePage } from './home.page';\nimport { HomeResolve } from './home.resolve';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n    resolve: {\n      status: HomeResolve\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    TimerService,\n    HomeResolve]\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/HomeResolve.html":{"url":"guards/HomeResolve.html","title":"guard - HomeResolve","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    HomeResolve\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/PAGES/home/home.resolve.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, router: Router, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/PAGES/home/home.resolve.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resolve\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/PAGES/home/home.resolve.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from \"@angular/router\";\nimport { Platform } from \"@ionic/angular\";\nimport { Observable } from \"rxjs\";\nimport { IStatus } from \"src/app/MODELS/INTERFACES/IStatus\";\nimport { StorageService } from \"src/app/SERVICE/Storage/storage.service\";\n\n@Injectable()\nexport class HomeResolve implements Resolve {\n\n    constructor(\n        private platform: Platform,\n        private router: Router,\n        private storageService: StorageService\n    ) { }\n\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable|Promise|any{        \n        return this.platform.ready()\n        .then(async res => {\n            if (res) {\n                console.log('Platform ready')\n                let status = this.storageService.getStoredStatus();\n                return status;\n            }\n        })\n    }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAlarm.html":{"url":"interfaces/IAlarm.html","title":"interface - IAlarm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAlarm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/INTERFACES/IAlarm.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            isPause\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPause\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPause:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAlarm {\n    key: string;\n    value: string;\n    isPause: boolean;\n    index: number;\n    duration?: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPickerColumnOption.html":{"url":"interfaces/IPickerColumnOption.html","title":"interface - IPickerColumnOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPickerColumnOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/INTERFACES/IPickerOption.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            duration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            transform\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transform:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPickerColumnOption {\n    text?: string;\n    value?: any;\n    disabled?: boolean;\n    duration?: number;\n    transform?: string;\n    selected?: boolean;\n  }\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IReturnMsg.html":{"url":"interfaces/IReturnMsg.html","title":"interface - IReturnMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IReturnMsg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/INTERFACES/IReturnMsg.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            msg\n                                        \n                                \n                                \n                                        \n                                            succeded\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        succeded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        succeded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IReturnMsg {\n    succeded: boolean;\n    msg: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStatus.html":{"url":"interfaces/IStatus.html","title":"interface - IStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/INTERFACES/IStatus.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            clickCounter\n                                        \n                                \n                                \n                                        \n                                            isRunning\n                                        \n                                \n                                \n                                        \n                                            timeList\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clickCounter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clickCounter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRunning\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isRunning:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeList:         Timer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Timer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timer } from \"../CLASSES/Timer\";\n\nexport interface IStatus {\n    isRunning: boolean,\n    timeList: Timer,\n    clickCounter: number\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITimeList.html":{"url":"interfaces/ITimeList.html","title":"interface - ITimeList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITimeList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/INTERFACES/ITimeList.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            diff\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            diffms\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            start\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            total\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            totalms\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        diff\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diff:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        diffms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diffms:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:     Date[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stop:     Date[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalms:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ITimeList {\n    start?: Date[];\n    stop?: Date[];\n    diff?: string[];\n    diffms?: number[];\n    total?: string;\n    totalms?: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITimer.html":{"url":"interfaces/ITimer.html","title":"interface - ITimer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITimer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/INTERFACES/ITimer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            blankTime\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            diff\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            diffms\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            running\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            start\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            started\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startedList\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stoppedDuration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stoppedList\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            time\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timeBegan\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timeStopped\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            totalms\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blankTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blankTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        diff\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diff:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        diffms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diffms:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        running\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        running:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:     Date[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        started\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        started:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startedList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startedList:     Date[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stop:     Date[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stoppedDuration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stoppedDuration:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stoppedList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stoppedList:     Date[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeBegan\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeBegan:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeStopped\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeStopped:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalms:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ITimer {\n    start?: Date[];\n    stop?: Date[];\n    diff?: string[];\n    diffms?: number[];\n    totalms?: number;\n\n    running?: boolean;\n    time?: string;\n    timeBegan?: any;\n    timeStopped?: any;\n    stoppedDuration?: any;\n    started?: any;\n    blankTime?: string;\n    stoppedList?: Date[];\n    startedList?: Date[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Notification/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _ID\n                            \n                            \n                                    Private\n                                notification\n                            \n                            \n                                    Public\n                                toastController\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addLocalNotification\n                            \n                            \n                                    Async\n                                addNotification\n                            \n                            \n                                Date2Id\n                            \n                            \n                                    Async\n                                deleteLocalNotification\n                            \n                            \n                                getDelayedTime\n                            \n                            \n                                    Async\n                                getPending\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Notification/notification.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addLocalNotification\n                        \n                    \n                \n            \n            \n                \n                    \n                    addLocalNotification(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Notification/notification.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Timer is still running'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addNotification\n                        \n                    \n                \n            \n            \n                \n                    \n                    addNotification(time: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Notification/notification.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Date2Id\n                        \n                    \n                \n            \n            \n                \nDate2Id()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Notification/notification.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        number of seconds from 1970\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteLocalNotification\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteLocalNotification()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Notification/notification.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDelayedTime\n                        \n                    \n                \n            \n            \n                \ngetDelayedTime(seconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Notification/notification.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        seconds to delay\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        delayed current time of specified seconds\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPending\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPending()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Notification/notification.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        presentToast\n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast(msg: string, time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Notification/notification.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 439209432321129530\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Notification/notification.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Type :     LocalNotificationSchema\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Notification/notification.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toastController\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ToastController\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Notification/notification.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n// import { LocalNotification, Plugins } from '@capacitor/core';\n// const { LocalNotifications } = Plugins;\n\nimport { LocalNotifications, LocalNotificationSchema } from '@capacitor/local-notifications';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  private notification: LocalNotificationSchema;\n  private _ID: number = 439209432321129530;\n\n  constructor(public toastController: ToastController) { }\n\n\n\n  async addNotification(time: string) {\n    console.log(\"Adding notification...\");\n    \n    let [hh, mm] = time.split(\":\");\n    let msg = \"next alarm at \" + time;\n    var today = new Date();\n    var alarmDate = new Date(today.getFullYear(), today.getMonth(), today.getDate(), +hh, +mm, 0);\n    if (alarmDate \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Options.html":{"url":"classes/Options.html","title":"class - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/CLASSES/Options.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _hours\n                            \n                            \n                                    Private\n                                _minutes\n                            \n                            \n                                    Public\n                                HOURS_OPTIONS\n                            \n                            \n                                    Public\n                                MINUTES_OPTS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                GetHourIdx\n                            \n                            \n                                    Private\n                                getHousOptions\n                            \n                            \n                                    Public\n                                GetMinuteIdx\n                            \n                            \n                                    Private\n                                getMinutesOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    HOURS\n                                \n                                \n                                    MINUTES\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/MODELS/CLASSES/Options.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _hours\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Options.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _minutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Options.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        HOURS_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IPickerColumnOption[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Options.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        MINUTES_OPTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IPickerColumnOption[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Options.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        GetHourIdx\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetHourIdx(hour: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/CLASSES/Options.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hour\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getHousOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHousOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/CLASSES/Options.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        GetMinuteIdx\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetMinuteIdx(minute: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/CLASSES/Options.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    minute\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getMinutesOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMinutesOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/CLASSES/Options.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        HOURS\n                    \n                \n\n                \n                    \n                        getHOURS()\n                    \n                \n                            \n                                \n                                    Defined in src/app/MODELS/CLASSES/Options.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        MINUTES\n                    \n                \n\n                \n                    \n                        getMINUTES()\n                    \n                \n                            \n                                \n                                    Defined in src/app/MODELS/CLASSES/Options.ts:56\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { IPickerColumnOption } from \"../INTERFACES/IPickerOption\";\nimport { Utility } from \"../../COMMON/Utility\";\n\n\nexport class Options {\n\n    private _hours: string[];\n    public HOURS_OPTIONS: IPickerColumnOption[];\n    private _minutes: string[];\n    public MINUTES_OPTS: IPickerColumnOption[];\n\n    constructor() {\n\n        console.log(\"jhkj\");\n\n        this._hours = Utility.GetTime(24, 2);\n        this.HOURS_OPTIONS = this.getHousOptions();\n        \n        this._minutes = Utility.GetTime(60, 2);\n        this.MINUTES_OPTS = this.getMinutesOptions();\n        \n        const DAYS: string[] = [\n            \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"\n        ]\n    \n    }\n\n    public  GetHourIdx(hour: string): number {\n        for (let index = 0; index  {\n            options.push({text:x, value:x});\n        });\n        return options;\n    }\n\n    private getMinutesOptions(){\n        let options: IPickerColumnOption[] = [];\n        this.MINUTES.forEach(x => {\n            options.push({text:x, value:x});\n        });\n        return options;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Settings.html":{"url":"classes/Settings.html","title":"class - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/Settings.ts\n        \n\n\n            \n                Description\n            \n            \n                Settings contains:\n\nList of alarms\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alarms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAlarmn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/MODELS/Settings.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        alarms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Alarm[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/Settings.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addAlarmn\n                        \n                    \n                \n            \n            \n                \naddAlarmn(alarmValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/MODELS/Settings.ts:37\n                \n            \n\n\n            \n                \n                    Add a nex alarm to the alarm array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alarmValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nstring \"hh:mm\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { succeded: boolean; msg: string; }\n\n                    \n                    \n                        Object {succeded: boolean, msg: string}\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LABELS } from \"../COMMON/LABELS\";\nimport { Alarm } from \"./CLASSES/Alarm\";\n\n/**\n * Settings contains:\n * 1. List of alarms\n */\nexport class Settings {\n    \n    alarms?: Alarm[] = [];\n    \n    constructor() {\n        \n        // const start = new Alarm(LABELS.START, DEFAULT_VAL.START, false);\n        // const end = new Alarm(LABELS.STOP, DEFAULT_VAL.STOP, false);\n\n        // this.alarms.push(start);\n        // this.alarms.push(end);\n    };\n\n\n    // /**\n    //  * Update Alarm by positional index\n    //  * @param val string\n    //  * @param idx number\n    //  */\n    // updateAlaram(val: string, idx: number) {\n    //     this.alarms[idx].value = val;\n    //     this.alarms[idx].index = timeToString(val);\n    // };\n\n    /**\n     * Add a nex alarm to the alarm array\n     * @param alarmValue - string \"hh:mm\"\n     * @returns Object {succeded: boolean, msg: string}\n     */\n    addAlarmn(alarmValue: string) {\n        // aggiungo l'elemento alla fine e poi riordino l'array\n        // const idx = this.alarms.length;\n        // create pause element\n\n        // const pause: Alarm = {\n        //     key: LABELS.PAUSE,\n        //     value: alarmValue,\n        //     index: timeToString(alarmValue),\n        //     enabled: false\n        // }\n        const pause: Alarm = new Alarm(LABELS.PAUSE, alarmValue, true);\n\n\n        console.log(pause);\n        // ChecK if out of range\n        if (pause.index  this.alarms[this.alarms.length - 1].index) {\n            let msg = 'PAUSE OUT OF RANGE!';\n            console.log(msg);\n            return {succeded: false, msg: msg};\n        }\n        // check if there is an alarm with the same index\n        //     => same starting time\n        var existingAlarm = this.alarms.filter(x => x.index == pause.index);\n        if (existingAlarm.length > 0) {\n            return {succeded: false, msg:'A PAUSE at the same time ALREADY EXISTS!'};;\n        }\n        // push the new alarm\n        this.alarms.push(pause);\n        // reorder the alarm array\n        this.alarms.sort((a, b) => {\n            if (a.index && b.index) {\n                if (a.index > b.index) return 1;\n                if (a.index \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsPopoverComponent.html":{"url":"components/SettingsPopoverComponent.html","title":"component - SettingsPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsPopoverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-popover\n            \n\n            \n                styleUrls\n                ./settings-popover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-popover.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _alarms\n                            \n                            \n                                    Private\n                                _alarmTmp\n                            \n                            \n                                    Private\n                                _selectedAlarmIdx\n                            \n                            \n                                    Public\n                                alert\n                            \n                            \n                                    Public\n                                alertController\n                            \n                            \n                                    Private\n                                PICKER_OPTIONS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddPause\n                            \n                            \n                                    Public\n                                Cancel\n                            \n                            \n                                DeletePause\n                            \n                            \n                                    Async\n                                DismissClick\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                Save\n                            \n                            \n                                    Async\n                                showAlarmDurationPicker\n                            \n                            \n                                    Async\n                                showAlarmPicker\n                            \n                            \n                                UpdateAlarm\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Alarms\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popoverController: PopoverController, storageService: StorageService, alarmService: AlarmService, pickerController: PickerController, alertController: AlertController, alert: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popoverController\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                        AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pickerController\n                                                  \n                                                        \n                                                                    PickerController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alert\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        AddPause\n                        \n                    \n                \n            \n            \n                \nAddPause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:92\n                \n            \n\n\n            \n                \n                    Add a pause to the time array\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Cancel\n                        \n                    \n                \n            \n            \n                \n                    \n                    Cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:62\n                \n            \n\n\n            \n                \n                    Calcel the current temporary user settings and reload stored settings\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeletePause\n                        \n                    \n                \n            \n            \n                \nDeletePause(alarm: Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:101\n                \n            \n\n\n            \n                \n                    Delete pause\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                                Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        DismissClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    DismissClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:130\n                \n            \n\n\n            \n                \n                    Dismiss settings pop-over\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Save\n                        \n                    \n                \n            \n            \n                \n                    \n                    Save()\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:70\n                \n            \n\n\n            \n                \n                    Save new settings on the local storage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        showAlarmDurationPicker\n                        \n                    \n                \n            \n            \n                \n                    \n                    showAlarmDurationPicker(alarm: Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                                Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        showAlarmPicker\n                        \n                    \n                \n            \n            \n                \n                    \n                    showAlarmPicker(alarm: Alarm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                                Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateAlarm\n                        \n                    \n                \n            \n            \n                \nUpdateAlarm(alarm: Alarm, idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:83\n                \n            \n\n\n            \n                \n                    Update an existing alarm\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alarm\n                                    \n                                                Alarm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _alarms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Alarms\n\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _alarmTmp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Alarm\n\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _selectedAlarmIdx\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        alert\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AlertService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        alertController\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AlertController\n\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        PICKER_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Options()\n                    \n                \n                    \n                        \n                                Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Alarms\n                    \n                \n\n                \n                    \n                        getAlarms()\n                    \n                \n                            \n                                \n                                    Defined in src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts:50\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { AlertController, PickerController, PopoverController } from '@ionic/angular';\nimport { Alarm } from 'src/app/MODELS/CLASSES/Alarm';\nimport { StorageService } from 'src/app/SERVICE/Storage/storage.service';\nimport { PickerOptions } from \"@ionic/core\";\nimport { Settings } from 'src/app/MODELS/Settings';\nimport { AlertService } from 'src/app/SERVICE/Alert/alert.service';\nimport { AlarmService } from 'src/app/SERVICE/Alarm/alarm.service';\nimport { KEYS } from 'src/app/COMMON/KEYS';\nimport { Alarms } from 'src/app/MODELS/CLASSES/Alarms';\nimport { LABELS } from 'src/app/COMMON/LABELS';\nimport { IReturnMsg } from 'src/app/MODELS/INTERFACES/IReturnMsg';\nimport { Options } from 'src/app/MODELS/CLASSES/Options';\n\n@Component({\n  selector: 'app-settings-popover',\n  templateUrl: './settings-popover.component.html',\n  styleUrls: ['./settings-popover.component.scss'],\n})\nexport class SettingsPopoverComponent implements OnInit {\n\n  // private customPickerOptions; \n  // private settings: Settings;\n  private _alarms: Alarms;\n  private _alarmTmp: Alarm;\n  private _selectedAlarmIdx: number;\n  private PICKER_OPTIONS = new Options();\n  // private alarmTmpValue: string;\n  // private alarmTmpIndex: number;\n\n\n  constructor(\n    private popoverController: PopoverController,\n    private storageService: StorageService,\n    private alarmService: AlarmService,\n    private pickerController: PickerController,\n    public alertController: AlertController,\n    public alert: AlertService\n  ) {}\n\n    \n\n\n  ngOnInit(): void {\n    console.log(\"Initializing setting...\");\n    this._alarms = new Alarms(this.alarmService.Alarms);\n    console.log(this._alarms);\n  }\n\n  public get Alarms(): Alarm[] {\n    return this._alarms.alarms;\n  }\n\n\n\n\n  //#region BUTTONS\n\n  /**\n   * Calcel the current temporary user settings and reload stored settings\n   */\n  public Cancel() {\n    console.log(\"Cancel\")\n    this.DismissClick();\n  }\n\n  /**\n   * Save new settings on the local storage\n   */\n  public Save() {\n    console.log(this.Alarms);\n    this.alarmService.Alarms = this._alarms.alarms;\n\n    this.storageService.SaveAlarms(this.Alarms);\n    this.DismissClick();\n  }\n\n  /**\n   * Update an existing alarm\n   * @param alarm \n   * @param idx \n   */\n  UpdateAlarm(alarm: Alarm, idx: number) {\n    this._selectedAlarmIdx = idx;\n    this.showAlarmPicker(alarm);\n  }\n\n\n  /**\n   * Add a pause to the time array\n   */\n  AddPause() {\n    this._selectedAlarmIdx = null;\n    this.showAlarmPicker();\n  }\n\n  /**\n   * Delete pause\n   * @param alarm \n   */\n  DeletePause(alarm: Alarm) {\n    let res = this._alarms.delete(alarm);\n    console.log(res.msg);\n  }\n\n  //#endregion\n\n\n\n\n\n\n\n\n  /**\n   * Load User Settings\n   */\n  // async loadSettings() {\n  //   // this.settings = this.storageService.getSettings();\n  // }\n\n\n\n\n\n\n  /**\n   * Dismiss settings pop-over\n   */\n  async DismissClick() {\n    await this.popoverController.dismiss();\n  }\n\n\n\n\n\n\n  async showAlarmPicker(alarm: Alarm = null) {\n    let options: PickerOptions = {\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: 'cancel'\n        },\n        {\n          text:'Ok',\n          handler:(value: any) => {\n            console.log(\"Selected value: \", value);\n            let valueStr: string = value.hours.value + ':' + value.minutes.value;\n\n            if (alarm) {\n              // update\n              this._alarmTmp = new Alarm(valueStr, alarm.key, alarm.isPause, alarm.duration);\n            } else {\n              // insert\n              this._alarmTmp = new Alarm(valueStr, LABELS.PAUSE, true);\n            }\n\n            console.log(\"temporary alarm: \", this._alarmTmp);\n            \n            if (this._alarmTmp.isPause) {\n              // open duration picker\n              this.showAlarmDurationPicker(this._alarmTmp);\n            } else {\n              let response: IReturnMsg = this._alarms.update(this._alarmTmp, this._selectedAlarmIdx);\n              if (response!.succeded == false) {\n                console.log(response);\n                this.alert.presentWarningAlert(response.msg);\n              }\n            }\n          }\n        }\n      ],\n      columns:[\n      {\n        name:'hours',\n        optionsWidth: '2rem',\n        align: 'right',\n        selectedIndex: alarm ? this.PICKER_OPTIONS.GetHourIdx(alarm.hour) : null,\n        options: this.PICKER_OPTIONS.HOURS_OPTIONS\n      }\n      , {\n        name:'minutes',\n        optionsWidth: '2rem',\n        align: 'left',\n        // ToDo\n        // deve essere l'indice nell'array di minuti\n        selectedIndex: alarm ? this.PICKER_OPTIONS.GetMinuteIdx(alarm.minutes) : null,\n        options: this.PICKER_OPTIONS.MINUTES_OPTS\n      }\n    ],\n    // cssClass: 'my-custom-picker',\n    };\n    let picker = await this.pickerController.create(options);\n    picker.present()\n  }\n\n\n\n  async showAlarmDurationPicker(alarm: Alarm) {\n    let options: PickerOptions = {\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: 'cancel'\n        },\n        {\n          text:'Ok',\n          handler:(value: any) => {\n            // add duration\n            this._alarmTmp.duration = value?.hours?.value + \":\" + value?.minutes?.value;\n            console.log(\"temporary alarm: \", this._alarmTmp);\n            let response: IReturnMsg;\n            if (this._selectedAlarmIdx == null) {\n              // add new pause\n              response = this._alarms.add(this._alarmTmp);\n            } else {\n              // update existing one\n              response = this._alarms.update(this._alarmTmp, this._selectedAlarmIdx);\n            }\n            // console.log(response.msg);\n            if (response.succeded == false) {\n              this.alert.presentWarningAlert(response.msg);\n            }\n          }\n        }\n      ],\n      columns:[\n        {\n          name:'hours',\n          optionsWidth: '2rem',\n          align: 'right',\n          selectedIndex: alarm ? this.PICKER_OPTIONS.GetHourIdx(alarm.hour) : null,\n          options: this.PICKER_OPTIONS.HOURS_OPTIONS\n        }\n        , {\n          name:'minutes',\n          optionsWidth: '2rem',\n          align: 'left',\n          // ToDo\n          // deve essere l'indice nell'array di minuti\n          selectedIndex: alarm ? this.PICKER_OPTIONS.GetMinuteIdx(alarm.minutes) : null,\n          options: this.PICKER_OPTIONS.MINUTES_OPTS\n        }\n    ],\n    // cssClass: 'my-custom-picker',\n    };\n    let picker = await this.pickerController.create(options);\n    picker.present()\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n    Settings\n  \n  \n  \n    \n    \n    \n        {{alarm.key}}\n        \n      \n     \n    -->\n    \n    \n    \n      \n        \n          \n            \n              \n                {{alarm.key}}\n              \n              \n                {{alarm.value}}\n              \n                        \n          \n        \n       \n    \n    \n    \n    \n      \n        \n          \n            \n              \n                {{alarm.key}}\n              \n              \n                ({{alarm.duration}})\n              \n              \n                {{alarm.value}}\n              \n                        \n          \n        \n      \n      \n      \n        Delete\n      \n    \n    \n  \n  \n  \n  \n  \n  \n    \n      Add pause\n    \n  \n  \n  \n  \n    \n      Repeat every\n    \n    \n      \n        \n          \n            {{day}}\n          \n          \n        \n      \n    \n  \n  \n  \n  \n    \n      Cancel\n      OK\n    \n  \n  \n\n    \n\n    \n                \n                    ./settings-popover.component.scss\n                \n                \n.settingsContainer{\n    \n    // background-color: rgb(20, 20, 20);\n    background-color: var(--ion-item-background, var(--ion-background-color, #fff));\n    \n    .title{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: 1rem;\n    }\n    \n    .buttonsContainer{\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        ion-buttons{\n            width: 100%;\n            ion-button{\n                width: 50%;\n                min-height: 3rem;\n            }\n        }\n    }\n    \n    \n    .addAlarmContainer {\n        min-height: 2rem;\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        ion-item {\n            width: 100%;\n            --inner-padding-end: 0px;\n            --padding-start: 0px;\n        }\n        ion-buttons{\n            width: 100%;\n            ion-button{\n                width: 100%;\n                min-height: 3rem;\n            }\n        }\n    }\n    \n    .alarm {\n        display: flex;\n        width: 100%;\n        justify-content: space-between;\n        padding: 1px 6px;\n        .label {\n            display: flex;\n        }\n    }\n    \n    .pickerClassName {\n        color: greenyellow;\n        background-color: honeydew;\n    }\n    \n    .checkbox-container {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        .checkbox-title {\n            margin: 5px;\n        }\n        .checkbox-list {\n            display: flex;\n            flex-direction: row;\n            flex-wrap: wrap;\n            align-content: center;\n            justify-content: flex-start;\n            width: 90%;\n            .checkbox {\n                display: flex;\n                flex-direction: row;\n                margin: 3px;\n                width: 3rem;\n                justify-content: flex-end;\n                .day-name {\n                    font-size: 0.9rem;\n                    margin-right: 1px;\n                }\n            }\n        }\n        \n    }\n \n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Settings                          {{alarm.key}}                       -->                                                                              {{alarm.key}}                                            {{alarm.value}}                                                                                                                                                 {{alarm.key}}                                            ({{alarm.duration}})                                            {{alarm.value}}                                                                                  Delete                                    Add pause                      Repeat every                                            {{day}}                                                        Cancel      OK        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HistoryComponent', 'selector': 'app-history'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'SettingsPopoverComponent', 'selector': 'app-settings-popover'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Storage/storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertStr2Date\n                            \n                            \n                                    Public\n                                    Async\n                                getStoredAlarm\n                            \n                            \n                                    Private\n                                    Async\n                                getStoredData\n                            \n                            \n                                    Public\n                                    Async\n                                getStoredStatus\n                            \n                            \n                                    Public\n                                SaveAlarms\n                            \n                            \n                                    Private\n                                SaveData\n                            \n                            \n                                    Public\n                                SaveStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Storage/storage.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertStr2Date\n                        \n                    \n                \n            \n            \n                \nconvertStr2Date(dateStr: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dateStr\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getStoredAlarm\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStoredAlarm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getStoredData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStoredData(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:57\n                \n            \n\n\n            \n                \n                    Return the stored data from the device local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        stored data from the device local storage\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getStoredStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStoredStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:41\n                \n            \n\n\n            \n                \n                    Return the stored status from the device local storage or null\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        SaveAlarms\n                        \n                    \n                \n            \n            \n                \n                    \n                    SaveAlarms(alarms: Alarm[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:87\n                \n            \n\n\n            \n                \n                    Save alarms array on the local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alarms\n                                    \n                                                Alarm[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        SaveData\n                        \n                    \n                \n            \n            \n                \n                    \n                    SaveData(data: any, key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:95\n                \n            \n\n\n            \n                \n                    Save settings on the local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        SaveStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    SaveStatus(status: IStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Storage/storage.service.ts:78\n                \n            \n\n\n            \n                \n                    Save status on the local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                IStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Settings } from 'src/app/MODELS/Settings';\nimport { Storage } from '@capacitor/storage';\nimport { KEYS } from 'src/app/COMMON/KEYS';\nimport { IStatus } from 'src/app/MODELS/INTERFACES/IStatus';\nimport { defer, Observable } from 'rxjs';\nimport { IAlarm } from 'src/app/MODELS/INTERFACES/IAlarm';\nimport { Alarms } from 'src/app/MODELS/CLASSES/Alarms';\nimport { Alarm } from 'src/app/MODELS/CLASSES/Alarm';\nimport { IReturnMsg } from 'src/app/MODELS/INTERFACES/IReturnMsg';\nimport { promise } from 'selenium-webdriver';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n  \n  // private settings: Settings;\n  // private status: IStatus;\n  \n  constructor(private platform: Platform) {\n    // this.initializeSettings();\n    // this.initializeStatus();\n  }\n  \n  \n  \n\n  //#region ______________GET_____________________\n\n  public async getStoredAlarm() {\n    return await this.getStoredData(KEYS.ALARMS);\n  }\n\n  /**\n   * Return the stored status from the device local storage or null\n   * @returns \n   */\n  public async getStoredStatus(): Promise {\n    let status = await this.getStoredData(KEYS.STATUS);\n    if (status != null) {\n      // converto tutte le date in oggetti di tipo Date\n      status.timeList.start = this.convertStr2Date(status.timeList.start);\n      status.timeList.stop = this.convertStr2Date(status.timeList.stop);\n    }\n    return status;\n  }\n\n\n  /**\n   * Return the stored data from the device local storage\n   * @param key \n   * @returns stored data from the device local storage\n   */\n   private async getStoredData(key: string): Promise {\n    console.log(\"Retrieving \" + key + \" from storage...\");\n    // Fetch data\n    let data = null;\n    const res = await Storage.get({key: key});\n    if (res?.value != null) {\n      data = JSON.parse(res.value);\n    }\n    console.log(\"Retrieved \" + key + \": \", data)\n    return data;\n  }\n\n  //#endregion\n  \n\n  //#region ______________SAVE____________________\n\n  /**\n   * Save status on the local storage\n   * @param {Status} status\n   */\n  public SaveStatus(status: IStatus): Promise {\n    return this.SaveData(status, KEYS.STATUS);\n  }\n\n\n  /**\n   * Save alarms array on the local storage\n   * @param {Alarm[]} alarms\n   */\n   public SaveAlarms(alarms: Alarm[]) {\n    this.SaveData(alarms, KEYS.ALARMS);\n  }\n\n  /**\n  * Save settings on the local storage\n  * @param {Settings} settings\n  */\n  private SaveData(data: any, key: string): Promise {\n    return new Promise((resolve, reject) => {\n      console.log(\"Saving \" + key + \" to storage...\");\n      let JSONdata = JSON.stringify(data);\n      console.log('Saved Data: ', JSONdata);\n      let msg: IReturnMsg;\n      return Storage.set({\n        key: key,\n        value: JSONdata\n      })\n      .then(res => {\n        msg = {succeded: true, msg: key + \"Saved\"}\n        resolve(msg);\n      }, err => {\n        msg = {succeded: false, msg: key + \"NOT saved!\"}\n        reject(msg);\n      });\n    });\n  }\n\n  //#endregion\n  \n\n  //#region _____________UTILITY__________________\n  \n  convertStr2Date(dateStr: Array) {\n    console.log(\"Converting date time\");\n    let ln = dateStr.length;\n    var convrtedDate: Date[] = [];\n    for(let idx = 0; idx \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeList.html":{"url":"classes/TimeList.html","title":"class - TimeList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/CLASSES/TimeList.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ITimeList\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                diff\n                            \n                            \n                                    Optional\n                                diffms\n                            \n                            \n                                    Optional\n                                start\n                            \n                            \n                                    Optional\n                                stop\n                            \n                            \n                                    Optional\n                                total\n                            \n                            \n                                    Optional\n                                totalms\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/MODELS/CLASSES/TimeList.ts:3\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        diff\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/TimeList.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        diffms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/TimeList.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/TimeList.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        stop\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/TimeList.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/TimeList.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        totalms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/TimeList.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ITimeList } from \"../INTERFACES/ITimeList\";\n\nexport class TimeList implements ITimeList {\n    constructor() {\n        this.start = [];\n        this.stop = [];\n        this.diff = [];\n        this.diffms = [];\n        this.total = null;\n        this.totalms = 0;\n    };\n    start?: Date[];\n    stop?: Date[];\n    diff?: string[];\n    diffms?: number[];\n    total?: string;\n    totalms?: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Timer.html":{"url":"classes/Timer.html","title":"class - Timer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Timer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/MODELS/CLASSES/Timer.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ITimer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                blankTime\n                            \n                            \n                                    Optional\n                                diff\n                            \n                            \n                                    Optional\n                                diffms\n                            \n                            \n                                    Public\n                                running\n                            \n                            \n                                    Optional\n                                start\n                            \n                            \n                                    Public\n                                started\n                            \n                            \n                                    Public\n                                startedList\n                            \n                            \n                                    Optional\n                                stop\n                            \n                            \n                                    Public\n                                stoppedDuration\n                            \n                            \n                                    Public\n                                stoppedList\n                            \n                            \n                                    Public\n                                time\n                            \n                            \n                                    Public\n                                timeBegan\n                            \n                            \n                                    Public\n                                timeStopped\n                            \n                            \n                                    Optional\n                                totalms\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/MODELS/CLASSES/Timer.ts:3\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        blankTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Timer.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        diff\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Timer.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        diffms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Timer.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        running\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Timer.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Timer.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        started\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Timer.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startedList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Timer.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        stop\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Timer.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        stoppedDuration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Timer.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        stoppedList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Timer.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Timer.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timeBegan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Timer.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timeStopped\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Timer.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        totalms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/MODELS/CLASSES/Timer.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ITimer } from \"../INTERFACES/ITimer\";\n\nexport class Timer implements ITimer {\n    constructor() {\n        \n        this.running = false;\n        this.time = \"00:00.00\";\n        this.timeBegan = null;\n        this.timeStopped = null;\n        this.stoppedDuration = 0;\n        this.started = null;\n        this.blankTime = \"00:00.00\"\n        this.stoppedList = [];\n        this.startedList = [];\n        \n        this.start = [];\n        this.stop = [];\n        this.diff = [];\n        this.diffms = [];\n        this.totalms = 0;\n    };\n\n    public running: boolean;\n    public time: string;\n    public timeBegan: any;\n    public timeStopped: any;\n    public stoppedDuration: any;\n    public started: any;\n    public blankTime: string;\n    public stoppedList: Date[];\n    public startedList: Date[];\n\n    start?: Date[];\n    stop?: Date[];\n    diff?: string[];\n    diffms?: number[];\n    totalms?: number;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimerService.html":{"url":"injectables/TimerService.html","title":"injectable - TimerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SERVICE/Timer/timer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _timer\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Public\n                                platform\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcDiff\n                            \n                            \n                                clockRunning\n                            \n                            \n                                GetStartedTimes\n                            \n                            \n                                GetStoppedTimes\n                            \n                            \n                                isTimerActive\n                            \n                            \n                                reset\n                            \n                            \n                                start\n                            \n                            \n                                stop\n                            \n                            \n                                zeroPrefix\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Running\n                                \n                                \n                                    time\n                                \n                                \n                                    timeList\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcDiff\n                        \n                    \n                \n            \n            \n                \ncalcDiff()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:171\n                \n            \n\n\n            \n                \n                    Calc difference between Start Date and End Date\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clockRunning\n                        \n                    \n                \n            \n            \n                \nclockRunning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetStartedTimes\n                        \n                    \n                \n            \n            \n                \nGetStartedTimes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetStoppedTimes\n                        \n                    \n                \n            \n            \n                \nGetStoppedTimes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTimerActive\n                        \n                    \n                \n            \n            \n                \nisTimerActive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:76\n                \n            \n\n\n            \n                \n                    Reset timer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n            \n                \nstart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:44\n                \n            \n\n\n            \n                \n                    Start timer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:65\n                \n            \n\n\n            \n                \n                    Stop timer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zeroPrefix\n                        \n                    \n                \n            \n            \n                \nzeroPrefix(num, digit)\n                \n            \n\n\n            \n                \n                    Defined in src/app/SERVICE/Timer/timer.service.ts:146\n                \n            \n\n\n            \n                \n                    Add digit-1 zeros at the begin of the number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    num\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    digit\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        number of zeros\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Timer\n\n                    \n                \n                \n                    \n                        Default value : new Timer()\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        notificationService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Platform\n\n                    \n                \n                    \n                        \n                                Defined in src/app/SERVICE/Timer/timer.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Running\n                    \n                \n\n                \n                    \n                        getRunning()\n                    \n                \n                            \n                                \n                                    Defined in src/app/SERVICE/Timer/timer.service.ts:97\n                                \n                            \n                    \n                        \n                                Return true if timer is running\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        time\n                    \n                \n\n                \n                    \n                        gettime()\n                    \n                \n                            \n                                \n                                    Defined in src/app/SERVICE/Timer/timer.service.ts:101\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        timeList\n                    \n                \n\n                \n                    \n                        gettimeList()\n                    \n                \n                            \n                                \n                                    Defined in src/app/SERVICE/Timer/timer.service.ts:105\n                                \n                            \n\n                \n                    \n                        settimeList(timer: Timer)\n                    \n                \n                            \n                                \n                                    Defined in src/app/SERVICE/Timer/timer.service.ts:123\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            timer\n                                                    \n                                                            \n                                                                            Timer\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { KEYS } from 'src/app/COMMON/KEYS';\nimport { Utility } from 'src/app/COMMON/Utility';\nimport { TimeList } from 'src/app/MODELS/CLASSES/TimeList';\nimport { Timer } from 'src/app/MODELS/CLASSES/Timer';\nimport { IStatus } from 'src/app/MODELS/INTERFACES/IStatus';\nimport { ITimer } from 'src/app/MODELS/INTERFACES/ITimer';\nimport { NotificationService } from '../Notification/notification.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimerService {\n\n\n  private _timer: Timer = new Timer();\n\n  // private running = false\n\n  // public timeBegan = null\n  // public timeStopped:any = null\n  // public stoppedDuration:any = 0\n  // public started = null\n  // public blankTime = \"00:00.00\"\n  // private _time: string = \"00:00.00\"\n  // private _timeList: TimeList = new TimeList();\n  // public stoppedList: Date[] = [];\n  // public startedList: Date[] = [];\n\n  constructor(\n    public platform: Platform,\n    public notificationService: NotificationService\n  ) {\n    console.log(\"Timer: \", this._timer);\n  }\n\n\n  //#region _______MEANGE TIMER FINCTIONS_____________________________\n\n  /**\n   * Start timer\n   */\n  start() {\n    console.log(\"Start\");\n    if(this._timer.running) {\n      return;\n    }\n    if (this._timer.timeBegan === null) {\n        this.reset();\n        this._timer.timeBegan = new Date();\n    }\n    if (this._timer.timeStopped !== null) {\n      let newStoppedDuration:any = (+new Date() - this._timer.timeStopped)\n      this._timer.stoppedDuration = this._timer.stoppedDuration + newStoppedDuration;\n    }\n    this.timeList.start.push(new Date());\n    this._timer.started = setInterval(this.clockRunning.bind(this), 10);\n    this._timer.running = true;\n  }\n  \n  /**\n   * Stop timer\n   */\n  stop() {\n    this._timer.running = false;\n    this._timer.timeStopped = new Date();\n    this.timeList.stop.push(this._timer.timeStopped);\n    this.calcDiff();\n    clearInterval(this._timer.started);\n  }\n  \n  /**\n   * Reset timer\n   */\n  reset() {\n      this._timer.running = false;\n      clearInterval(this._timer.started);\n      this._timer.stoppedDuration = 0;\n      this._timer.timeBegan = null;\n      this._timer.timeStopped = null;\n      this._timer.time = this._timer.blankTime;\n      this._timer = new Timer();\n      // this.clickCounter = 0;\n  }\n\n  //#endregion\n\n  \n\n\n  //#region _______GET METHODS____________________________\n\n  /**\n   * Return true if timer is running\n   */\n   get Running(): boolean {\n    return this._timer.running;\n  }\n\n  get time() {\n    return this._timer.time;\n  }\n\n  get timeList() {\n    return this._timer;\n  }\n\n  GetStartedTimes() {\n    return this.timeList.start;\n  }\n\n  GetStoppedTimes() {\n    return this.timeList.stop;\n  }\n\n  //#endregion\n\n\n\n  //#region _______SET METHODS____________________________\n  \n  set timeList(timer: Timer) {\n    this._timer = timer;\n    this._timer.timeStopped = new Date(timer.timeStopped);\n    this._timer.timeBegan = new Date(timer.timeBegan);\n    if (timer.running) {\n      this._timer.started = setInterval(this.clockRunning.bind(this), 10);\n    }\n  }\n\n  //#endregion\n\n\n\n\n\n\n\n  /**\n   * Add digit-1 zeros at the begin of the number\n   * @param num \n   * @param digit number of zeros\n   * @returns \n   */\n   zeroPrefix(num, digit) {\n    let zero = '';\n    for(let i = 0; i  0) return true;\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/COMMON/DEFAULT_VAL.ts\n            \n            variable\n            PAUSE_BEGIN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/DEFAULT_VAL.ts\n            \n            variable\n            PAUSE_END\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/DEFAULT_VAL.ts\n            \n            variable\n            START\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/DEFAULT_VAL.ts\n            \n            variable\n            STOP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/KEYS.ts\n            \n            variable\n            ALARMS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/KEYS.ts\n            \n            variable\n            SETTINGS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/KEYS.ts\n            \n            variable\n            STATUS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/LABELS.ts\n            \n            variable\n            PAUSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/LABELS.ts\n            \n            variable\n            START\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/LABELS.ts\n            \n            variable\n            STOP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/MSG.ts\n            \n            variable\n            ALARM_INVALID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/MSG.ts\n            \n            variable\n            ALARM_UPDATE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/MSG.ts\n            \n            variable\n            ALARM_UPDATE_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/MSG.ts\n            \n            variable\n            ENTER_EXCEED_OUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/MSG.ts\n            \n            variable\n            ENTER_EXCEED_PAUSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/MSG.ts\n            \n            variable\n            INDEX_OUT_OF_RANGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/MSG.ts\n            \n            variable\n            NOT_FOUND\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/MSG.ts\n            \n            variable\n            OUT_EXCEED_ENTER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/MSG.ts\n            \n            variable\n            OUT_EXCEED_PAUSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/MSG.ts\n            \n            variable\n            PAUSE_EXIST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/MSG.ts\n            \n            variable\n            PAUSE_IN_RANGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/MSG.ts\n            \n            variable\n            PAUSE_OUT_OF_RANGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/MSG.ts\n            \n            variable\n            PAUSE_UPDATE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/Utility.ts\n            \n            function\n            GetTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/Utility.ts\n            \n            function\n            index2time\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/Utility.ts\n            \n            function\n            timeToIndex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/COMMON/Utility.ts\n            \n            function\n            zeroPrefix\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/COMPONENTS/history/history/history.component.ts\n            \n            component\n            HistoryComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/COMPONENTS/settingspopover/settings-popover/settings-popover.component.ts\n            \n            component\n            SettingsPopoverComponent\n            \n                35 %\n                (6/17)\n            \n        \n        \n            \n                \n                src/app/MODELS/CLASSES/Alarm.ts\n            \n            class\n            Alarm\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/MODELS/CLASSES/Alarms.ts\n            \n            class\n            Alarms\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/app/MODELS/CLASSES/Options.ts\n            \n            class\n            Options\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/MODELS/CLASSES/TimeList.ts\n            \n            class\n            TimeList\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/MODELS/CLASSES/Timer.ts\n            \n            class\n            Timer\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/MODELS/INTERFACES/IAlarm.ts\n            \n            interface\n            IAlarm\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/MODELS/INTERFACES/IPickerOption.ts\n            \n            interface\n            IPickerColumnOption\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/MODELS/INTERFACES/IReturnMsg.ts\n            \n            interface\n            IReturnMsg\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/MODELS/INTERFACES/IStatus.ts\n            \n            interface\n            IStatus\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/MODELS/INTERFACES/ITimeList.ts\n            \n            interface\n            ITimeList\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/MODELS/INTERFACES/ITimer.ts\n            \n            interface\n            ITimer\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/MODELS/Settings.ts\n            \n            class\n            Settings\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/PAGES/home/home.page.ts\n            \n            component\n            HomePage\n            \n                35 %\n                (7/20)\n            \n        \n        \n            \n                \n                src/app/PAGES/home/home.resolve.ts\n            \n            guard\n            HomeResolve\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Advertisement/advertisement.service.ts\n            \n            injectable\n            AdvertisementService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Alarm/alarm.service.ts\n            \n            injectable\n            AlarmService\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Alert/alert.service.ts\n            \n            injectable\n            AlertService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Notification/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Storage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/SERVICE/Timer/timer.service.ts\n            \n            injectable\n            TimerService\n            \n                35 %\n                (5/14)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ~12.0.1\n        \n            @angular/core : ~12.0.1\n        \n            @angular/forms : ~12.0.1\n        \n            @angular/platform-browser : ~12.0.1\n        \n            @angular/platform-browser-dynamic : ~12.0.1\n        \n            @angular/router : ~12.0.1\n        \n            @capacitor-community/admob : ^3.1.0\n        \n            @capacitor/android : ^3.1.1\n        \n            @capacitor/app : 1.0.2\n        \n            @capacitor/core : 3.1.1\n        \n            @capacitor/haptics : 1.0.2\n        \n            @capacitor/keyboard : 1.0.2\n        \n            @capacitor/local-notifications : ^1.0.3\n        \n            @capacitor/status-bar : 1.0.2\n        \n            @capacitor/storage : ^1.0.3\n        \n            @ionic/angular : ^5.5.2\n        \n            cordova-res : ^0.15.3\n        \n            install : ^0.13.0\n        \n            npm : ^7.20.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DateFormat   (src/.../Interfaces.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/MODELS/Interfaces.ts\n    \n        \n            \n                \n                    \n                        \n                        DateFormat\n                    \n                \n                        \n                            \n                                 Year\n                            \n                        \n                        \n                            \n                                Value : YYYY\n                            \n                        \n                        \n                            \n                                 YearMonth\n                            \n                        \n                        \n                            \n                                Value : YYYY-MM\n                            \n                        \n                        \n                            \n                                 HourMinute\n                            \n                        \n                        \n                            \n                                Value : HH:mm\n                            \n                        \n                        \n                            \n                                 HourMinuteSeconds\n                            \n                        \n                        \n                            \n                                Value : HH:mm:ss\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GetTime   (src/.../Utility.ts)\n                        \n                        \n                            index2time   (src/.../Utility.ts)\n                        \n                        \n                            timeToIndex   (src/.../Utility.ts)\n                        \n                        \n                            zeroPrefix   (src/.../Utility.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/COMMON/Utility.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetTime\n                        \n                    \n                \n            \n            \n                \nGetTime(maxVal, digits)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    maxVal\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    digits\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        index2time\n                        \n                    \n                \n            \n            \n                \nindex2time(time)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeToIndex\n                        \n                    \n                \n            \n            \n                \ntimeToIndex(timeStr)\n                \n            \n\n\n\n\n            \n                \n                    Convert the time value from string to number, used as index\nex.\n12:00 => 1200 \n04:00 => 400\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeStr\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zeroPrefix\n                        \n                    \n                \n            \n            \n                \nzeroPrefix(num, digit)\n                \n            \n\n\n\n\n            \n                \n                    Add digit-1 zeros at the begin of the number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    num\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    digit\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        number of zeros\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nClick here for DOCUMENTATION\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_HomePageRoutingModule\n\n\n\ncluster_HomePageRoutingModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nSettingsPopoverComponent\n\nSettingsPopoverComponent\n\nHomePageModule -->\n\nSettingsPopoverComponent->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nTimerService\n\nTimerService\n\nHomePageRoutingModule -->\n\nTimerService->HomePageRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALARM_INVALID   (src/.../MSG.ts)\n                        \n                        \n                            ALARM_UPDATE   (src/.../MSG.ts)\n                        \n                        \n                            ALARM_UPDATE_ERROR   (src/.../MSG.ts)\n                        \n                        \n                            ALARMS   (src/.../KEYS.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            ENTER_EXCEED_OUT   (src/.../MSG.ts)\n                        \n                        \n                            ENTER_EXCEED_PAUSE   (src/.../MSG.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            INDEX_OUT_OF_RANGE   (src/.../MSG.ts)\n                        \n                        \n                            NOT_FOUND   (src/.../MSG.ts)\n                        \n                        \n                            OUT_EXCEED_ENTER   (src/.../MSG.ts)\n                        \n                        \n                            OUT_EXCEED_PAUSE   (src/.../MSG.ts)\n                        \n                        \n                            PAUSE   (src/.../LABELS.ts)\n                        \n                        \n                            PAUSE_BEGIN   (src/.../DEFAULT_VAL.ts)\n                        \n                        \n                            PAUSE_END   (src/.../DEFAULT_VAL.ts)\n                        \n                        \n                            PAUSE_EXIST   (src/.../MSG.ts)\n                        \n                        \n                            PAUSE_IN_RANGE   (src/.../MSG.ts)\n                        \n                        \n                            PAUSE_OUT_OF_RANGE   (src/.../MSG.ts)\n                        \n                        \n                            PAUSE_UPDATE   (src/.../MSG.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            SETTINGS   (src/.../KEYS.ts)\n                        \n                        \n                            START   (src/.../DEFAULT_VAL.ts)\n                        \n                        \n                            START   (src/.../LABELS.ts)\n                        \n                        \n                            STATUS   (src/.../KEYS.ts)\n                        \n                        \n                            STOP   (src/.../DEFAULT_VAL.ts)\n                        \n                        \n                            STOP   (src/.../LABELS.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/COMMON/MSG.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALARM_INVALID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"You cannot set this time value\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALARM_UPDATE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Alarm updated\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALARM_UPDATE_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"An error occurred while updating alarm\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ENTER_EXCEED_OUT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"The enter cannot exceeds the out\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ENTER_EXCEED_PAUSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"The enter cannot exceeds the pause\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INDEX_OUT_OF_RANGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Index out of range!\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NOT_FOUND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Alarm not found\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OUT_EXCEED_ENTER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"The out cannot precede the enter\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OUT_EXCEED_PAUSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"The out cannot precede the pause\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PAUSE_EXIST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"A PAUSE at the same time ALREADY EXISTS!\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PAUSE_IN_RANGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Pause follows in the range of another one!\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PAUSE_OUT_OF_RANGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Pause out of range!\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PAUSE_UPDATE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Pause updated\"\n                    \n                \n\n\n        \n    \n\n    src/app/COMMON/KEYS.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALARMS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Alarms\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SETTINGS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Setting\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STATUS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Status\"\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/app/COMMON/LABELS.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PAUSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"PAUSE\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        START\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"IN\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STOP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"OUT\"\n                    \n                \n\n\n        \n    \n\n    src/app/COMMON/DEFAULT_VAL.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PAUSE_BEGIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"13:00\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PAUSE_END\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"14:00\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        START\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"08:30\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STOP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"18:00\"\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
